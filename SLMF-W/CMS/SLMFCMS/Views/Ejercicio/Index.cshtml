@model PagedList.IPagedList<SLMFCMS.Models.Ejercicio>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Ejercicios";
}
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Index", "Ejercicio", FormMethod.Get))
        {
            <div id="row-header-index" class="row">
                <div id="div-add" class="col-md-1">
                    @Html.ActionLink(" ", "Create", "Ejercicio", routeValues: null, htmlAttributes: new { @class = "fa fa-plus-square fa-2x btn-accion", @title = "Agregar un Ejercicio" })
                </div>
                <div id="div-titulo" class="col-md-7">
                    <h4>@ViewBag.Title</h4>
                </div>
                @if (String.IsNullOrEmpty(ViewBag.CurrentFilter))
                {
                    <div id="div-search" class="col-md-3">
                        @Html.TextBox("sSearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control search-box", autocomplete = "off" })
                    </div>
                }
                else
                {
                    <div id="div-search" class="col-md-3">
                        @Html.TextBox("sSearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control search-box disabled", disabled = "disabled" })
                    </div>
                }
                <div id="div-find" class="col-md-1">
                    @if (String.IsNullOrEmpty(ViewBag.CurrentFilter))
                    {
                        <button id="btn-search" type="submit" class="fa fa-search fa-2x" />
                    }
                    else
                    {
                        @Html.ActionLink(" ", "Index", "Ejercicio", new { sSortOrder = "", sCurrentFilter = "" }, new { @class = "fa fa-times fa-2x btn-accion-inv" })
                    }
                </div>
            </div>
        }
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <table class="table webGrid">
            <tr class="webGridHeader">
                <th>
                    @Html.ActionLink("Nombre", "Index", new { sSortOrder = ViewBag.NameSortParm, sCurrentFilter = ViewBag.CurrentFilter }, new { @class = "ancla-sort" })
                </th>
                <th>
                    @Html.ActionLink("Accesorio", "Index", new { sSortOrder = ViewBag.AccesorioSortParm, sCurrentFilter = ViewBag.CurrentFilter }, new { @class = "ancla-sort" })
                </th>
                <th>
                    @Html.ActionLink("Posicion", "Index", new { sSortOrder = ViewBag.PosicionSortParm, sCurrentFilter = ViewBag.CurrentFilter }, new { @class = "ancla-sort" })
                </th>
                <th>
                    @Html.ActionLink("Elemento", "Index", new { sSortOrder = ViewBag.ElementoSortParm, sCurrentFilter = ViewBag.CurrentFilter }, new { @class = "ancla-sort" })
                </th>
                <th>
                    @Html.ActionLink("Musculo", "Index", new { sSortOrder = ViewBag.MusculoSortParm, sCurrentFilter = ViewBag.CurrentFilter }, new { @class = "ancla-sort" })
                </th>
                <th>
                    Video
                </th>
                <th class="columnPagerwebGrid">
                    @if (@Model.PageCount > 1)
                    {
                        @Html.PagedListPager(Model, pagina => Url.Action("Index", new { pagina, sSortOrder = ViewBag.CurrentSort, sCurrentFilter = ViewBag.CurrentFilter }),
                    new PagedListRenderOptions
                    {
                        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                        LinkToFirstPageFormat = "1",
                        LinkToLastPageFormat = @Model.PageCount.ToString(),
                        LinkToPreviousPageFormat = String.Format("«"),
                        LinkToNextPageFormat = String.Format("»"),
                        MaximumPageNumbersToDisplay = 2,
                        DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                        DisplayLinkToIndividualPages = true
                    })
                    }
                </th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccesorioDelEjercicio.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PosicionDelEjercicio.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ElementoDelEjercicio.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Musculo.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VimeoID)
                    </td>
                    <td class="columnActionwebGrid">
                        @Html.ActionLink(" ", "Edit", "Ejercicio", routeValues: new { id = item.ID, pagina = ViewBag.Pagina }, htmlAttributes: new { @class = "fa fa-pencil-square fa-2x btn-accion", @title = "Editar el Ejercicio" })
                        @Html.ActionLink(" ", "Details", "Ejercicio", routeValues: new { id = item.ID, pagina = ViewBag.Pagina }, htmlAttributes: new { @class = "fa fa-info-circle fa-2x btn-accion " + item.CSSNoImagen, @title = "Detalles del Ejercicio" })
                        @if (item.DiasConElEjercicio.Count == 0)
                        {
                            @Html.ActionLink(" ", "Delete", "Ejercicio", routeValues: new { id = item.ID, pagina = ViewBag.Pagina }, htmlAttributes: new { @class = "fa fa-minus-square fa-2x btn-accion", @title = "Borrar el Ejercicio" })
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>