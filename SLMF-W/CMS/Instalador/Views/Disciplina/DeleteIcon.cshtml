@model SLMFCMS.Models.Disciplina
@using System.Web.Helpers
@using SLMFCMS.App_Code
@using System.Configuration;
@{
    ViewBag.Title = "Eliminar el Icono de la Disciplina";
}
@{string sRutaImages = ConfigurationManager.AppSettings["App_FolderAssetsImages"];
string sFileImage = "";}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">
            <div id="row-header-index" class="row">
                <div id="div-titulo" class="col-md-7">
                    <h4>@ViewBag.Title</h4>
                </div>
                <div class="col-md-3">
                    &nbsp;
                </div>
                <div class="col-md-1">
                    @if (!String.IsNullOrEmpty(Model.IconImage))
                    {
                        <button class="btn btn-delete" type="submit" title="Eliminar">Eliminar</button>
                    }
                </div>
                <div id="div-search" class="col-md-1">
                    @Html.ActionLink("Cancelar", "Details", "Disciplina", routeValues: new { id = Model.ID, pagina = ViewBag.Pagina }, htmlAttributes: new { @class = "btn btn-cancel", @title = "Cancelar" })
                </div>
            </div>
        </div>
    </div>
}
<hr id="header-divisor" />
<div class="row">
    <div class="col-md-1 lbltitulo">
        @Html.LabelFor(model => model.Siglas)
    </div>
    <div class="col-md-3 lbltitulo">
        @Html.LabelFor(model => model.Nombre)
    </div>
    <div class="col-md-6 lbltitulo">
        @Html.LabelFor(model => model.Slogan)
    </div>
    <div class="col-md-2 lbltitulo">
        @Html.LabelFor(model => model.ColorCode)
    </div>
</div>
<div class="row">
    <div class="col-md-1 txt-area-display-with-border area-border-1">
        @Html.DisplayFor(model => model.Siglas)
    </div>
    <div class="col-md-3 txt-area-display-with-border area-border-3">
        @Html.DisplayFor(model => model.Nombre)
    </div>
    <div class="col-md-6 txt-area-display-with-border area-border-6">
        @Html.DisplayFor(model => model.Slogan)
    </div>
    <div class="col-md-2 txt-area-display-with-border area-border-2 txt-center">
        @Html.Label(Model.ColorCode, htmlAttributes: new { @style = "color: black; font-weight: normal; width: 66px; background-color: " + Model.ColorCode + ";" })
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        &nbsp;
    </div>
</div>
<div class="row">
    <div class="col-md-8 lbltitulo">
        @Html.LabelFor(model => model.Proposito)
    </div>
</div>
<div class="row">
    <div class="col-md-8 txt-area-display-with-border area-border-8">
        @Html.DisplayFor(model => model.Proposito)
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        &nbsp;
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <table class="table webGrid table-partial-logo center-table">
            <tr class="webGridHeader">
                <th class="txt-center">
                    Icono
                </th>
            </tr>
            <tr>
                <td class="celda-logo-delete">
                    <div>
                        @if (!String.IsNullOrEmpty(Model.IconImage))
                        {
                            sFileImage = sRutaImages + Model.IconImage;
                            <a href="@sFileImage.Replace("~/","../../")" data-lightbox="image-2">
                                @Html.Image(sFileImage, "Icono", new { @class = "image-preview-icon" })
                            </a>
                        }
                        else
                        {
                            sFileImage = "/Content/img/SLMF-Icono-SN.png";
                            <a href="@sFileImage" data-lightbox="image-2">
                                @Html.Image(sFileImage, "Icono", new { @class = "image-preview-icon-none" })
                            </a>
                        }
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>

@section LocalScript {
    @Scripts.Render("~/bundles/lightbox")
}