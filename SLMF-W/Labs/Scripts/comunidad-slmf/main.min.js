var IntroCommunity = function() {

    this.tl = new TimelineLite();
};

IntroCommunity.prototype.init = function() {

    var tl = this.tl;
    $("#community").removeLoader({
        onComplete: function() {
            $(".s-youtube .bottom").eq(0).css("display", "block");
            tl.set([
                $(".s-youtube .top"),
                $(".s-youtube .data-content-top h1"),
                $(".s-youtube .data-content-top p"),
                $(".s-youtube .data-content-bottom"),
            ], {
                autoAlpha: 0,
            });
            tl.fromTo("#comunity-content", 0.35, {
                autoAlpha: 0,
            }, {
                autoAlpha: 1,
                ease: Cubic.easeOut
            });
            tl.fromTo($(".s-youtube .bottom-left"), 0.35, {
                autoAlpha: 0,
            }, {
                autoAlpha: 1,
                ease: Linear.easeOut
            });
            tl.fromTo(
                $(".s-youtube .bottom-left-nav a").eq(0).find(".arrow-content"),
                0.15, {
                    left: "22px",
                    autoAlpha: 0,
                }, {
                    autoAlpha: 1,
                    left: "10px",
                    ease: Cubic.easeOut,
                }
            );
            tl.fromTo(
                $(".s-youtube .bottom-left-nav a").eq(1).find(".arrow-content"),
                0.15, {
                    right: "22px",
                    autoAlpha: 0,
                }, {
                    autoAlpha: 1,
                    right: "10px",
                    ease: Cubic.easeOut,
                },
                "-=0.15");



            tl.set($(".s-youtube .top"), {
                autoAlpha: 1,
            }, "-=0.15");
            tl.fromTo($(".s-youtube .top"), 0.25, {
                y: 45
            }, {
                y: 0,
                ease: Cubic.easeOut
            }, "-=0.15");
            tl.fromTo($(".s-youtube .data-media"), 0.35, {
                autoAlpha: 0,
            }, {
                autoAlpha: 1,
                ease: Linear.easeOut
            }, "-=0.15");

            tl.set($(".s-youtube .data-content-top h1"), {
                autoAlpha: 1,
            }, "-=0.15");
            tl.fromTo($(".s-youtube .data-content-top h1"), 0.25, {
                y: 45
            }, {
                y: 0,
                ease: Cubic.easeOut
            }, "-=0.15");

            tl.set($(".s-youtube .data-content-top p"), {
                autoAlpha: 1,
            }, "-=0.15");
            tl.fromTo($(".s-youtube .data-content-top p"), 0.25, {
                y: 45
            }, {
                y: 0,
                ease: Cubic.easeOut
            }, "-=0.15");

            tl.set($(".s-youtube .data-content-bottom"), {
                autoAlpha: 1,
            }, "-=0.15");
            tl.fromTo($(".s-youtube .data-content-bottom"), 0.25, {
                y: 45
            }, {
                y: 0,
                ease: Cubic.easeOut
            }, "-=0.15");


            tl.fromTo("#community-navigation", 0.25, {
                autoAlpha: 0,
            }, {
                autoAlpha: 1,
                ease: Cubic.easeOut
            }, "-=0.15");
        }
    });
};

/**
 * get Instagram latest post.
 *
 * @params {object} 	args			-
 * @params {string} 	args.count		- int
 * @params {string} 	args.token		- string, default: "12464375.5b9e1e6.2924280151d74a58a7e437a828decc37"
 * @params {string} 	args.userId		- string, default: "308301284"
 * @params {string} 	args.tag		- string, default: "slmf"
 * @params {string} 	args.filter		- string: "user" || "tags", default: "user"
 * @params {string} 	args.onComplete	- function, on load json
 *
 */
var Instagram = (function() {
    'use strict';

    function Instagram(args) {

        // enforces new
        if (!(this instanceof Instagram)) {
            return new Instagram(args);
        };

        this.settings = {
            data: {},
            container: $(".s-instagram"),
        };

        $.extend(true, this.settings, args || {});
        this.render();
    };

    /**
     * Append the items.
     *
     * @fires Instagram
     */
    Instagram.prototype.render = function() {

        var self = this,
            title = this.settings.data.title;
        
        self.settings.container.find(".channel").attr('href', self.settings.data.url);
        // self.settings.container.find(".channel").attr('title', "Ir a " + self.settings.data.title);

        $.each(self.settings.data.slides, function(index, val) {
            var description = val.description.trunc(140, true), // acorta texto de slide
                tweet = val.description.trunc(143 - val.url.length, true), // acorta texto del tweet
                cl = index <= 0 ? " first" : "";

            description = description.wrapp("#", "span");

            self.settings.container.append("<div class='bottom" + cl + "'> <div class='bottom-left'> <div class='bottom-left-date'> <div class='date-day'> <span>" + val.day + "</span> </div> <div class='date-month'> <span>" + val.month + "</span> </div> <div class='date-year'> <span>" + val.year + "</span></div> </div> </div> <div class='bottom-right'> <div class='data'> <div class='data-media'> <a href='" + val.url + "' target='_blank'  > <img src='" + val.thumbnail + "' alt='" + description + "' width='240' height='240' /> </a> </div> <div class='data-content'> <div class='data-content-top'> <a href='" + val.url + "' target='_blank' > <h1> " + title + "</h1> </a> <p> " + description + "</p> </div> <div class='data-content-bottom'> <span> COMPARTIR</span> <ul> <li> <a href='http://twitter.com/intent/tweet?text=" + encodeURIComponent(tweet) + "&url="+val.url+"' class='popup' target='_blank' > <span class='icons twitter'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='16.095px' height='13.082px' viewBox='0 0 16.095 13.082' enable-background='new 0 0 16.095 13.082' xml:space='preserve' > <path fill='#303030' d='M13.483,1.089c0,0,1.148-0.217,2.166-0.802c0,0-0.346,1.191-1.473,1.82c0,0,1.387-0.151,1.918-0.52  c0,0-0.855,1.365-1.658,1.604c0,0,0.52,3.988-2.904,7.391C8.107,13.986,2.753,13.466,0,11.668c0,0,2.341,0.367,4.854-1.324  c0,0-2.123,0.108-3.164-2.254c0,0,1.02,0.087,1.691-0.13c0,0-2.623-0.519-2.797-3.229c0,0,0.715,0.391,1.475,0.368  c0,0-2.473-1.69-0.998-4.356c0,0,2.71,3.186,6.829,3.424c0,0-0.607-2.579,1.798-3.771C12.095-0.797,13.483,1.089,13.483,1.089z'> </path> </svg> </span> </a> </li> <li> <a href='http://www.facebook.com/sharer.php?u="+val.url+"&t=" + encodeURIComponent(val.description) + "' class='popup' target='_blank' > <span class='icons facebook'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='6.932px' height='13.215px' viewBox='0 0 6.932 13.215' enable-background='new 0 0 6.932 13.215' xml:space='preserve'> <path fill='#303030' d='M6.932,2.415V0.151C1.74-0.839,1.824,3.363,1.824,3.363v0.729H0V6.5h1.824v0.219v6.496h2.992V6.5h2.115  V4.092H4.871c0.016-0.346,0.024-0.541,0.041-0.799C4.991,2.069,6.932,2.415,6.932,2.415z'> </path> </svg> </span> </a> </li> </ul> </div> </div> </div> </div> </div>");
        });

    };

    return Instagram;
}());


var Youtube = (function() {
    'use strict';

    function Youtube(args) {
        // enforces new
        if (!(this instanceof Youtube)) {
            return new Youtube(args);
        };

        this.settings = {
            data: {},
            container: $(".s-youtube"),
        };

        $.extend(true, this.settings, args || {});
        this.render();
    };

    /**
     * Append the items.
     *
     * @fires Youtube
     */
    Youtube.prototype.render = function() {

        var self = this,
            title = this.settings.data.title
        
        self.settings.container.find(".channel").attr('href', self.settings.data.url);
        // self.settings.container.find(".channel").attr('title', "Ir a " + self.settings.data.title);

        $.each(this.settings.data.slides, function(index, val) {

            var description = val.description.trunc(140, true), // acorta texto de slide
                tweet = val.description.trunc(143 - val.url.length, true), // acorta texto del tweet
                cl = index <= 0 ? " first" : "";

            description = description.wrapp("#", "span");

            self.settings.container
                .append("<div class='bottom" + cl + "'> <div class='bottom-left'> <div class='bottom-left-date'> <div class='date-day'> <span> " + val.day + "</span> </div> <div class='date-month'> <span> " + val.month + "</span> </div> <div class='date-year'> <span> " + val.year + "</span> </div> </div> </div> <div class='bottom-right'> <div class='data'> <div class='data-media'> <a href='" + val.url + "' > <img src='" + val.thumbnail + "' alt='" + val.title + "' /> </a> </div> <div class='data-content'> <div class='data-content-top'> <a href='" + val.url + "' > <h1> " +val.title + "</h1> </a> <p> " + val.title + "</p> </div> <div class='data-content-bottom'> <span> COMPARTIR</span> <ul> <li> <a href='http://twitter.com/intent/tweet?text="+tweet+"&url=" + encodeURIComponent(val.url) + "' class='popup' target='_blank' > <span class='icons twitter'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='16.095px' height='13.082px' viewBox='0 0 16.095 13.082' enable-background='new 0 0 16.095 13.082' xml:space='preserve' > <path fill='#303030' d='M13.483,1.089c0,0,1.148-0.217,2.166-0.802c0,0-0.346,1.191-1.473,1.82c0,0,1.387-0.151,1.918-0.52  c0,0-0.855,1.365-1.658,1.604c0,0,0.52,3.988-2.904,7.391C8.107,13.986,2.753,13.466,0,11.668c0,0,2.341,0.367,4.854-1.324  c0,0-2.123,0.108-3.164-2.254c0,0,1.02,0.087,1.691-0.13c0,0-2.623-0.519-2.797-3.229c0,0,0.715,0.391,1.475,0.368  c0,0-2.473-1.69-0.998-4.356c0,0,2.71,3.186,6.829,3.424c0,0-0.607-2.579,1.798-3.771C12.095-0.797,13.483,1.089,13.483,1.089z'> </path> </svg> </span> </a> </li> <li> <a href='http://www.facebook.com/sharer.php?u="+val.url+"&t=" + encodeURIComponent(val.title) + "' class='popup' target='_blank' > <span class='icons facebook'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='6.932px' height='13.215px' viewBox='0 0 6.932 13.215' enable-background='new 0 0 6.932 13.215' xml:space='preserve'> <path fill='#303030' d='M6.932,2.415V0.151C1.74-0.839,1.824,3.363,1.824,3.363v0.729H0V6.5h1.824v0.219v6.496h2.992V6.5h2.115  V4.092H4.871c0.016-0.346,0.024-0.541,0.041-0.799C4.991,2.069,6.932,2.415,6.932,2.415z'> </path> </svg> </span> </a> </li> </ul> </div> </div> </div> </div> </div>");
    
        });
    };

    return Youtube;
}());

var Twitter = (function() {
    'use strict';

    function Twitter(args) {
        // enforces new
        if (!(this instanceof Twitter)) {
            return new Twitter(args);
        };

        this.settings = {
            data: {},
            container: $(".s-twitter"),
        };

        $.extend(true, this.settings, args || {});
        this.render();
    };

    /**
     * Append the items.
     *
     * @fires Twitter
     */
    Twitter.prototype.render = function() {

        var self = this,
            title = this.settings.data.title;

        self.settings.container.find(".channel").attr('href', self.settings.data.url);
        // self.settings.container.find(".channel").attr('title', "Ir a " + self.settings.data.title);
        
        $.each(this.settings.data.slides, function(index, val) {
            var description = val.description.trunc(140, true), // acorta texto de slide
                tweet = val.description.trunc(143 - val.url.length, true),
                cl = index <= 0 ? " first" : "";

            description = description.wrapp("#", "span");
            
            self.settings.container
                .append('<div class="bottom' + cl + '"> <div class="bottom-left"> <div class="bottom-left-date"> <div class="date-day"> <span>'+val.day+'</span></div> <div class="date-month"> <span>'+val.month+'</span></div> <div class="date-year"> <span>'+val.year+'</span></div> </div> </div> <div class="bottom-right"> <div class="data"> <div class="data-content data-content-full"> <div class="data-content-top"> <a href="'+val.url+'" target="_blank" > <h1>'+title+'</h1> </a> <p>'+description+'</p> </div> <div class="data-content-bottom"> <span>COMPARTIR</span> <ul> <li> <a href="http://twitter.com/intent/tweet?text=' + encodeURIComponent(val.description) + '&url=http://www.sololosmasfuertes.com/" target="_blank" > <span class="icons twitter"> <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="16.095px" height="13.082px" viewBox="0 0 16.095 13.082" enable-background="new 0 0 16.095 13.082" xml:space="preserve"> <path fill="#303030" d="M13.483,1.089c0,0,1.148-0.217,2.166-0.802c0,0-0.346,1.191-1.473,1.82c0,0,1.387-0.151,1.918-0.52  c0,0-0.855,1.365-1.658,1.604c0,0,0.52,3.988-2.904,7.391C8.107,13.986,2.753,13.466,0,11.668c0,0,2.341,0.367,4.854-1.324  c0,0-2.123,0.108-3.164-2.254c0,0,1.02,0.087,1.691-0.13c0,0-2.623-0.519-2.797-3.229c0,0,0.715,0.391,1.475,0.368  c0,0-2.473-1.69-0.998-4.356c0,0,2.71,3.186,6.829,3.424c0,0-0.607-2.579,1.798-3.771C12.095-0.797,13.483,1.089,13.483,1.089z"></path> </svg> </span> </a> </li> <li> <a href="http://www.facebook.com/sharer.php?u='+val.url+'&t=' + encodeURIComponent(val.title) + '" target="_blank" class="popup"> <span class="icons facebook"> <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="6.932px" height="13.215px" viewBox="0 0 6.932 13.215" enable-background="new 0 0 6.932 13.215" xml:space="preserve"> <path fill="#303030" d="M6.932,2.415V0.151C1.74-0.839,1.824,3.363,1.824,3.363v0.729H0V6.5h1.824v0.219v6.496h2.992V6.5h2.115  V4.092H4.871c0.016-0.346,0.024-0.541,0.041-0.799C4.991,2.069,6.932,2.415,6.932,2.415z"></path> </svg> </span> </a> </li> </ul> </div> </div> </div> </div> </div> ');
    
        });
    };

    return Twitter;
}());

var All = (function() {
    'use strict';

    function All(args) {
        // enforces new
        if (!(this instanceof All)) {
            return new All(args);
        };

        this.settings = {
            data: {},
            container: $(".s-all"),
        };

        $.extend(true, this.settings, args || {});
        this.render();
    };

    /**
     * Append the items.
     *
     * @fires All
     */
    All.prototype.render = function() {

        var self = this,
            title = "";
        
        // self.settings.container.find(".channel").attr('href', self.settings.data.url);

        $.each(this.settings.data, function(index, val) {

            switch(val.name){
                case "youtube":

                    var description = val.description.trunc(140, true), // acorta texto de slide
                        tweet = val.description.trunc(143 - val.url.length, true), // acorta texto del tweet
                        cl = index <= 0 ? " first" : "";

                    description = description.wrapp("#", "span");

                    self.settings.container
                        .append("<div class='bottom" + cl + "'> <div class='bottom-left'> <div class='bottom-left-date'> <div class='date-day'> <span> " + val.day + "</span> </div> <div class='date-month'> <span> " + val.month + "</span> </div> <div class='date-year'> <span> " + val.year + "</span> </div> </div> </div> <div class='bottom-right'> <div class='data'> <div class='data-media'> <a href='" + val.url + "' > <img src='" + val.thumbnail + "' alt='" + val.title + "' /> </a> </div> <div class='data-content'> <div class='data-content-top'> <a href='" + val.url + "' > <h1> " +val.title + "</h1> </a> <p> " + val.title + "</p> </div> <div class='data-content-bottom'> <span> COMPARTIR</span> <ul> <li> <a href='http://twitter.com/intent/tweet?text="+tweet+"&url=" + encodeURIComponent(val.url) + "' class='popup' target='_blank' > <span class='icons twitter'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='16.095px' height='13.082px' viewBox='0 0 16.095 13.082' enable-background='new 0 0 16.095 13.082' xml:space='preserve' > <path fill='#303030' d='M13.483,1.089c0,0,1.148-0.217,2.166-0.802c0,0-0.346,1.191-1.473,1.82c0,0,1.387-0.151,1.918-0.52  c0,0-0.855,1.365-1.658,1.604c0,0,0.52,3.988-2.904,7.391C8.107,13.986,2.753,13.466,0,11.668c0,0,2.341,0.367,4.854-1.324  c0,0-2.123,0.108-3.164-2.254c0,0,1.02,0.087,1.691-0.13c0,0-2.623-0.519-2.797-3.229c0,0,0.715,0.391,1.475,0.368  c0,0-2.473-1.69-0.998-4.356c0,0,2.71,3.186,6.829,3.424c0,0-0.607-2.579,1.798-3.771C12.095-0.797,13.483,1.089,13.483,1.089z'> </path> </svg> </span> </a> </li> <li> <a href='http://www.facebook.com/sharer.php?u="+val.url+"&t=" + encodeURIComponent(val.title) + "' class='popup' target='_blank' > <span class='icons facebook'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='6.932px' height='13.215px' viewBox='0 0 6.932 13.215' enable-background='new 0 0 6.932 13.215' xml:space='preserve'> <path fill='#303030' d='M6.932,2.415V0.151C1.74-0.839,1.824,3.363,1.824,3.363v0.729H0V6.5h1.824v0.219v6.496h2.992V6.5h2.115  V4.092H4.871c0.016-0.346,0.024-0.541,0.041-0.799C4.991,2.069,6.932,2.415,6.932,2.415z'> </path> </svg> </span> </a> </li> </ul> </div> </div> </div> </div> </div>");
                        break;
                case "twitter":

                    var description = val.description.trunc(140, true), // acorta texto de slide
                        tweet = val.description.trunc(143 - val.url.length, true),
                        cl = index <= 0 ? " first" : "";

                    description = description.wrapp("#", "span");
                    
                    self.settings.container
                        .append('<div class="bottom' + cl + '"> <div class="bottom-left"> <div class="bottom-left-date"> <div class="date-day"> <span>'+val.day+'</span></div> <div class="date-month"> <span>'+val.month+'</span></div> <div class="date-year"> <span>'+val.year+'</span></div> </div> </div> <div class="bottom-right"> <div class="data"> <div class="data-content data-content-full"> <div class="data-content-top"> <a href="'+val.url+'" target="_blank" > <h1>'+title+'</h1> </a> <p>'+description+'</p> </div> <div class="data-content-bottom"> <span>COMPARTIR</span> <ul> <li> <a href="http://twitter.com/intent/tweet?text=' + encodeURIComponent(val.description) + '&url=http://www.sololosmasfuertes.com/" target="_blank" > <span class="icons twitter"> <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="16.095px" height="13.082px" viewBox="0 0 16.095 13.082" enable-background="new 0 0 16.095 13.082" xml:space="preserve"> <path fill="#303030" d="M13.483,1.089c0,0,1.148-0.217,2.166-0.802c0,0-0.346,1.191-1.473,1.82c0,0,1.387-0.151,1.918-0.52  c0,0-0.855,1.365-1.658,1.604c0,0,0.52,3.988-2.904,7.391C8.107,13.986,2.753,13.466,0,11.668c0,0,2.341,0.367,4.854-1.324  c0,0-2.123,0.108-3.164-2.254c0,0,1.02,0.087,1.691-0.13c0,0-2.623-0.519-2.797-3.229c0,0,0.715,0.391,1.475,0.368  c0,0-2.473-1.69-0.998-4.356c0,0,2.71,3.186,6.829,3.424c0,0-0.607-2.579,1.798-3.771C12.095-0.797,13.483,1.089,13.483,1.089z"></path> </svg> </span> </a> </li> <li> <a href="http://www.facebook.com/sharer.php?u='+val.url+'&t=' + encodeURIComponent(val.title) + '" target="_blank" class="popup"> <span class="icons facebook"> <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="6.932px" height="13.215px" viewBox="0 0 6.932 13.215" enable-background="new 0 0 6.932 13.215" xml:space="preserve"> <path fill="#303030" d="M6.932,2.415V0.151C1.74-0.839,1.824,3.363,1.824,3.363v0.729H0V6.5h1.824v0.219v6.496h2.992V6.5h2.115  V4.092H4.871c0.016-0.346,0.024-0.541,0.041-0.799C4.991,2.069,6.932,2.415,6.932,2.415z"></path> </svg> </span> </a> </li> </ul> </div> </div> </div> </div> </div> ');
                    break;
                case "instagram":
                    var description = val.description.trunc(140, true), // acorta texto de slide
                        tweet = val.description.trunc(143 - val.url.length, true), // acorta texto del tweet
                        cl = index <= 0 ? " first" : "";

                    description = description.wrapp("#", "span");

                    self.settings.container.append("<div class='bottom" + cl + "'> <div class='bottom-left'> <div class='bottom-left-date'> <div class='date-day'> <span>" + val.day + "</span> </div> <div class='date-month'> <span>" + val.month + "</span> </div> <div class='date-year'> <span>" + val.year + "</span></div> </div> </div> <div class='bottom-right'> <div class='data'> <div class='data-media'> <a href='" + val.url + "' target='_blank'  > <img src='" + val.thumbnail + "' alt='" + description + "' width='240' height='240' /> </a> </div> <div class='data-content'> <div class='data-content-top'> <a href='" + val.url + "' target='_blank' > <h1> " + title + "</h1> </a> <p> " + description + "</p> </div> <div class='data-content-bottom'> <span> COMPARTIR</span> <ul> <li> <a href='http://twitter.com/intent/tweet?text=" + encodeURIComponent(tweet) + "&url="+val.url+"' class='popup' target='_blank' > <span class='icons twitter'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='16.095px' height='13.082px' viewBox='0 0 16.095 13.082' enable-background='new 0 0 16.095 13.082' xml:space='preserve' > <path fill='#303030' d='M13.483,1.089c0,0,1.148-0.217,2.166-0.802c0,0-0.346,1.191-1.473,1.82c0,0,1.387-0.151,1.918-0.52  c0,0-0.855,1.365-1.658,1.604c0,0,0.52,3.988-2.904,7.391C8.107,13.986,2.753,13.466,0,11.668c0,0,2.341,0.367,4.854-1.324  c0,0-2.123,0.108-3.164-2.254c0,0,1.02,0.087,1.691-0.13c0,0-2.623-0.519-2.797-3.229c0,0,0.715,0.391,1.475,0.368  c0,0-2.473-1.69-0.998-4.356c0,0,2.71,3.186,6.829,3.424c0,0-0.607-2.579,1.798-3.771C12.095-0.797,13.483,1.089,13.483,1.089z'> </path> </svg> </span> </a> </li> <li> <a href='http://www.facebook.com/sharer.php?u="+val.url+"&t=" + encodeURIComponent(val.description) + "' class='popup' target='_blank' > <span class='icons facebook'> <svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='6.932px' height='13.215px' viewBox='0 0 6.932 13.215' enable-background='new 0 0 6.932 13.215' xml:space='preserve'> <path fill='#303030' d='M6.932,2.415V0.151C1.74-0.839,1.824,3.363,1.824,3.363v0.729H0V6.5h1.824v0.219v6.496h2.992V6.5h2.115  V4.092H4.871c0.016-0.346,0.024-0.541,0.041-0.799C4.991,2.069,6.932,2.415,6.932,2.415z'> </path> </svg> </span> </a> </li> </ul> </div> </div> </div> </div> </div>");
                    break;
            }
    
        });
    };

    return All;
}());

/**
 * Move slide left/right
 */
var Filter = (function() {
    'use strict';

    function Filter(args) {
        if (!(this instanceof Filter)) {
            return new Filter(args);
        };
        this.settings = {
            bt: $(".navigation a"),
            article: $(".community .slider .article"),
            onComplete: function() {},
        };
        this.active = 0;

        $.extend(true, this.settings, args || {});

        var self = this,
            moveSlide = function(params) {

                TweenLite.to(params.slideOut, 0.55, {
                    left: params.leftOut,
                    ease: Cubic.easeOut,
                    onComplete: function() {
                        params.slideOut.css({
                            display: "none"
                        });
                    }
                });
                params.slideIn.css({
                    display: "block"
                });
                TweenLite.fromTo(params.slideIn, 0.55, {
                    left: params.leftIn,
                }, {
                    left: "0%",
                    ease: Cubic.easeOut,
                });
            };

        self.settings.bt
            .on("click", function(event) {
                event.preventDefault();


                var index = $(this).parent().index();
                if ($("#community").hasClass("moving") || self.active == index) {
                    return false;
                };
                var leftOut = "300%",
                    leftIn = "-300%";
                if (self.active < index) {
                    // va hacia la derecha
                    leftOut = "300%";
                    leftIn = "-300%";

                } else if (self.active > index) {
                    // va hacia la izquierda
                    leftOut = "-300%";
                    leftIn = "300%";
                };
                // console.log(self.settings.article[self.active])
                // console.log(self.settings.article[index])
                // console.log(leftOut, leftIn)
                moveSlide({
                    leftOut: leftOut,
                    leftIn: leftIn,
                    slideOut: $(self.settings.article[self.active]),
                    slideIn: $(self.settings.article[index])
                });
                self.active = index;
                $(".navigation a").removeClass("active");
                $(this).addClass("active");
            });
    };
    return Filter;
}());

/**
 *
 * Navega entre dias
 *
 */
var Slider = (function() {
    'use strict';

    function Slider(args) {
        if (!(this instanceof Slider)) {
            return new Slider(args);
        };
        this.settings = {
            container: $(".s-youtube"),
            slides: $(".s-youtube .bottom"),
            btLeft: $(".s-youtube .bottom-left-nav a").eq(0),
            btRight: $(".s-youtube .bottom-left-nav a").eq(1),
            onComplete: function() {},
        };
        this.active = 0;

        $.extend(true, this.settings, args || {});

        var self = this,
            s = self.settings,
            time = 0.25;
        s.btLeft.addClass("null")

        s.btLeft
            .on("click", function(event) {
                event.preventDefault();
                if (s.container.hasClass("moving") || self.active == 0) {
                    return false;
                };

                self.active--;
                s.container.addClass("moving");
                s.btRight.removeClass("null");
                if (self.active == 0) {
                    s.btLeft.addClass("null");
                };

                var outSlide = s.slides.eq(self.active + 1),
                    outData = outSlide.find(".data"),
                    outDataMedia = outSlide.find(".data-media"),
                    outDataTop = outSlide.find(".data-content-top"),
                    outDataBottom = outSlide.find(".data-content-bottom"),
                    outDateDay = outSlide.find(".date-day span"),
                    outDateMonth = outSlide.find(".date-month span"),
                    outDateYear = outSlide.find(".date-year span");
                // console.log(s.slides)

                TweenLite.fromTo([
                    outDateDay,
                    outDateMonth,
                    outDateYear,
                ], time, {
                    left: "0px",
                }, {
                    left: "100%",
                    ease: Cubic.easeOut
                });

                TweenLite.fromTo(outDataMedia, time, {
                    left: "0px",
                }, {
                    autoAlpha: 0,
                    left: "-55px",
                    ease: Cubic.easeOut,
                })

                TweenLite.fromTo(outDataTop, time, {
                    top: "0px",
                }, {
                    autoAlpha: 0,
                    top: "85px",
                    ease: Cubic.easeOut,
                    onComplete: function() {
                        outSlide.css({
                            display: "none"
                        });
                    }
                });
                TweenLite.fromTo(outDataBottom, time / 2, {
                    autoAlpha: 1,
                }, {
                    autoAlpha: 0,
                    ease: Cubic.easeOut,
                });


                setTimeout(function() {

                    var
                        inSlide = s.slides.eq(self.active),
                        inData = inSlide.find(".data"),
                        inDataMedia = inSlide.find(".data-media"),
                        inDataTop = inSlide.find(".data-content-top"),
                        inDataTopP = inSlide.find(".data-content-top p"),
                        inDataBottom = inSlide.find(".data-content-bottom"),
                        inDateDay = inSlide.find(".date-day span"),
                        inDateMonth = inSlide.find(".date-month span"),
                        inDateYear = inSlide.find(".date-year span");

                    inSlide.css({
                        display: "block"
                    });
                    TweenLite.fromTo([
                        inDateDay,
                        inDateMonth,
                        inDateYear,
                    ], time, {
                        autoAlpha: 1,
                        left: "-100%",
                    }, {
                        left: "0px",
                        ease: Cubic.easeOut
                    });

                    TweenLite.fromTo(inDataMedia, time, {
                        top: "-55px",
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        top: "0px",
                        onComplete: function() {
                            s.container.removeClass("moving");
                        }
                    });
                    TweenLite.fromTo(inDataTop, 0.2, {
                        top: "-55px",
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        top: "0px",
                        delay: 0.05,
                        ease: Cubic.easeOut,
                    });
                    TweenLite.fromTo(inDataTopP, 0.1, {
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        top: "0px",
                        delay: 0.15,
                        ease: Cubic.easeOut,
                    });
                    TweenLite.fromTo(inDataBottom, 0.1, {
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        delay: 0.15,
                        ease: Cubic.easeOut,

                    });
                }, 50);
            })
            .hover(
                function() {
                    //in
                    TweenLite.to($(this).find("span"), 0.25, {
                        left: "0px",
                        ease: Cubic.easeOut,
                    });
                }, function() {
                    //out
                    TweenLite.to($(this).find("span"), 0.25, {
                        left: "10px",
                        ease: Cubic.easeOut,
                    });
                });
        s.btRight
            .on("click", function(event) {
                event.preventDefault();
                // console.log(s.container.hasClass("moving"), self.active == s.slides.length - 1)
                if (s.container.hasClass("moving") || self.active == s.slides.length - 1) {
                    return false;
                };
                self.active++;
                s.btLeft.removeClass("null");
                if (self.active == s.slides.length - 1) {
                    s.btRight.addClass("null");
                };
                s.container.addClass("moving");

                var
                    outSlide = s.slides.eq(self.active - 1),
                    outData = outSlide.find(".data"),
                    outDataMedia = outSlide.find(".data-media"),
                    outDataTop = outSlide.find(".data-content-top"),
                    outDataTopP = outSlide.find(".data-content-top p"),
                    outDataBottom = outSlide.find(".data-content-bottom"),
                    outDateDay = outSlide.find(".date-day span"),
                    outDateMonth = outSlide.find(".date-month span"),
                    outDateYear = outSlide.find(".date-year span");

                TweenLite.to([
                    outDateDay,
                    outDateMonth,
                    outDateYear,
                ], time, {
                    autoAlpha: 0,
                    left: "-100%",
                    ease: Cubic.easeOut
                });
                TweenLite.to(outDataMedia, time, {
                    autoAlpha: 0,
                    top: "-55px",
                    ease: Cubic.easeOut,
                    onComplete: function() {
                        outSlide.css({
                            display: "none"
                        });

                    }
                });
                TweenLite.to(outDataTop, time, {
                    autoAlpha: 0,
                    top: "-55px",
                    ease: Cubic.easeOut,
                });
                TweenLite.to(outDataTopP, time / 2, {
                    autoAlpha: 0,
                    ease: Cubic.easeOut,
                });
                TweenLite.to(outDataBottom, 0.05, {
                    autoAlpha: 0,
                    ease: Cubic.easeOut,
                });


                setTimeout(function() {
                    var inSlide = s.slides.eq(self.active),
                        inData = inSlide.find(".data"),
                        inDataMedia = inSlide.find(".data-media"),
                        inDataTop = inSlide.find(".data-content-top"),
                        inDataTopP = inSlide.find(".data-content-top p"),
                        inDataBottom = inSlide.find(".data-content-bottom"),
                        inDateDay = inSlide.find(".date-day span"),
                        inDateMonth = inSlide.find(".date-month span"),
                        inDateYear = inSlide.find(".date-year span");
                    // console.log(s.slides)
                    inSlide.css({
                        display: "block"
                    });
                    TweenLite.fromTo([
                        inDateDay,
                        inDateMonth,
                        inDateYear,
                    ], time, {
                        left: "100%",
                    }, {
                        left: "0px",
                        ease: Cubic.easeOut
                    });

                    TweenLite.fromTo(inDataMedia, time, {
                        left: "-55px",
                        autoAlpha: 0,
                    }, {
                        left: "0px",
                        autoAlpha: 1,
                        ease: Cubic.easeOut,
                    })


                    TweenLite.fromTo(inDataTop, time, {
                        top: "85px",
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        top: "0px",
                        ease: Cubic.easeOut,
                        onComplete: function() {
                            s.container.removeClass("moving");
                        }
                    });
                    TweenLite.fromTo(inDataTopP, time / 3, {
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        delay: time / 3,
                        ease: Cubic.easeOut
                    });
                    TweenLite.fromTo(inDataBottom, time / 2, {
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        delay: time / 2,
                        ease: Cubic.easeOut,
                    });
                }, 50);
            })
            .hover(
                function() {
                    //in
                    TweenLite.to($(this).find("span"), 0.25, {
                        right: "0px",
                        ease: Cubic.easeOut,
                    });
                }, function() {
                    //out
                    TweenLite.to($(this).find("span"), 0.25, {
                        right: "10px",
                        ease: Cubic.easeOut,
                    });
                });
    };
    return Slider;
}());


var Popup = (function() {

    function Popup(args) {

        if (!(this instanceof Popup)) {
            return new Popup(args);
        };
        this.settings = {
            el: $(".popup")
        };

        this.settings.el
            .on('click', function(event) {
                event.preventDefault();

                var width = 575,
                    height = 400,
                    left = (window.screen.width / 2) - ((width / 2) + 10),
                    top = (window.screen.height / 2) - ((height / 2) + 50),
                    url = this.href,
                    opts = 'status=1' +
                    ',width=' + width +
                    ',height=' + height +
                    ',top=' + top +
                    ',left=' + left;

                window.open(url, 'Share', opts);
            });
    };
    return Popup;
}());

var instagram, youtube, twitter, introCommunity, all;
var sliderYoutube;
var popup, filterFeed;

loadFeeds = function(){

    $("#slmf-community-overlay-content")
        .load(root + "Comunidad #community", function () {

            introCommunity = new IntroCommunity();
            
            $.ajax({
                type: "POST",
                url : rootAPI + "comunityfeed",
              }).done(function (dt) {

                console.log(dt);

                all = new All({data: dt.all});
                youtube = new Youtube({data: dt.youtube});
                twitter = new Twitter({data: dt.twitter});
                instagram = new Instagram({data: dt.instagram});

                sliderAll  = new Slider({
                    container: $(".s-all"),
                    slides: $(".s-all .bottom"),
                    btLeft: $(".s-all .bottom-left-nav a").eq(0),
                    btRight: $(".s-all .bottom-left-nav a").eq(1),
                });

                sliderYoutube  = new Slider({
                    container: $(".s-youtube"),
                    slides: $(".s-youtube .bottom"),
                    btLeft: $(".s-youtube .bottom-left-nav a").eq(0),
                    btRight: $(".s-youtube .bottom-left-nav a").eq(1),
                });

                sliderTwitter  = new Slider({
                    container: $(".s-twitter"),
                    slides: $(".s-twitter .bottom"),
                    btLeft: $(".s-twitter .bottom-left-nav a").eq(0),
                    btRight: $(".s-twitter .bottom-left-nav a").eq(1),
                });

                sliderInstagram  = new Slider({
                    container: $(".s-instagram"),
                    slides: $(".s-instagram .bottom"),
                    btLeft: $(".s-instagram .bottom-left-nav a").eq(0),
                    btRight: $(".s-instagram .bottom-left-nav a").eq(1),
                });


                popup = new Popup({ el: $(".popup") });
                filterFeed = new Filter();
                introCommunity.init();

              }).fail(function () { $("#community-close").click(); });
    });
}

$(document).ready(function() {
    $("#bt-feed")
        .on('click', function(event) {
            event.preventDefault();
            if ($("#bt-feed").hasClass("active")) {
                return false;
            };
            $(this).addClass("active");

            var overlayCommunity = $("#slmf-community-overlay");

            $('iframe[src*="vimeo.com"]').each(function() {
                $f(this).api('pause');
            });

            overlayCommunity.css({
                display: "block"
            });
            TweenLite.fromTo("#slmf-community-overlay", 0.45, {
                autoAlpha: 0,
            }, {
                autoAlpha: 1,
                ease: Linear.easeOut,
                onComplete: function() {
                    loadFeeds();
                }
            });
        });
    $("#community-close")
        .on("click", function() {
            $("#bt-feed").removeClass("active");

            TweenLite.to("#slmf-community-overlay", 0.25, { autoAlpha: 0 });

            TweenLite.to("#slmf-community-tohidde", 0.25, {
                autoAlpha: 1,
                onComplete: function() {
                    instagram = null;
                    youtube = null;
                    twitter = null;
                    introCommunity = null;
                    sliderYoutube = null;
                    popup = null;
                    filterFeed = null;

                    $("#slmf-community-overlay-content")
                        .html("");

                    $("#slmf-community-overlay")
                        .css({
                            display: "none",
                            opacity: 1,
                            visibility: "visible",
                        });
                    $("#bt-social").removeClass("active");
                }
            });
        });
});

