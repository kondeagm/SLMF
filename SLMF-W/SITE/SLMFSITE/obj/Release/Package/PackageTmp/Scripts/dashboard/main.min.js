var Froogaloop=function(){function e(a){return new e.fn.init(a)}function h(a,c,b){if(!b.contentWindow.postMessage)return!1;var f=b.getAttribute("src").split("?")[0],a=JSON.stringify({method:a,value:c});"//"===f.substr(0,2)&&(f=window.location.protocol+f);b.contentWindow.postMessage(a,f)}function j(a){var c,b;try{c=JSON.parse(a.data),b=c.event||c.method}catch(f){}"ready"==b&&!i&&(i=!0);if(a.origin!=k)return!1;var a=c.value,e=c.data,g=""===g?null:c.player_id;c=g?d[g][b]:d[b];b=[];if(!c)return!1;void 0!==
a&&b.push(a);e&&b.push(e);g&&b.push(g);return 0<b.length?c.apply(null,b):c.call()}function l(a,c,b){b?(d[b]||(d[b]={}),d[b][a]=c):d[a]=c}var d={},i=!1,k="";e.fn=e.prototype={element:null,init:function(a){"string"===typeof a&&(a=document.getElementById(a));this.element=a;a=this.element.getAttribute("src");"//"===a.substr(0,2)&&(a=window.location.protocol+a);for(var a=a.split("/"),c="",b=0,f=a.length;b<f;b++){if(3>b)c+=a[b];else break;2>b&&(c+="/")}k=c;return this},api:function(a,c){if(!this.element||
!a)return!1;var b=this.element,f=""!==b.id?b.id:null,d=!c||!c.constructor||!c.call||!c.apply?c:null,e=c&&c.constructor&&c.call&&c.apply?c:null;e&&l(a,e,f);h(a,d,b);return this},addEvent:function(a,c){if(!this.element)return!1;var b=this.element,d=""!==b.id?b.id:null;l(a,c,d);"ready"!=a?h("addEventListener",a,b):"ready"==a&&i&&c.call(null,d);return this},removeEvent:function(a){if(!this.element)return!1;var c=this.element,b;a:{if((b=""!==c.id?c.id:null)&&d[b]){if(!d[b][a]){b=!1;break a}d[b][a]=null}else{if(!d[a]){b=
!1;break a}d[a]=null}b=!0}"ready"!=a&&b&&h("removeEventListener",a,c)}};e.fn.init.prototype=e.fn;window.addEventListener?window.addEventListener("message",j,!1):window.attachEvent("onmessage",j);return window.Froogaloop=window.$f=e}();

;
(function(factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS
        factory(require('jquery'));
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function($) {

    var pluginName = "tinyscrollbar",
        defaults = {
            axis: 'y' // vertical or horizontal scrollbar? ( x || y ).
            ,
            wheel: true // enable or disable the mousewheel;
            ,
            wheelSpeed: 40 // how many pixels must the mouswheel scroll at a time.
            ,
            wheelLock: true // return mouswheel to browser if there is no more content.
            ,
            scrollInvert: false // Enable invert style scrolling
            ,
            trackSize: false // set the size of the scrollbar to auto or a fixed number.
            ,
            thumbSize: false // set the size of the thumb to auto or a fixed number.
            ,
            scrollbar: ".scrollbar", //target para scrollbar
            marginHorizontal: 0
        };

    function Plugin($container, options) {
        this.options = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;

        var self = this,
            $viewport = $container.find(".viewport").eq(0),
            $overview = $container.find(".overview").eq(0),
            $scrollbar = $container.find(this.options.scrollbar).eq(0),
            $track = $scrollbar.find(".track").eq(0),
            $thumb = $scrollbar.find(".thumb").eq(0)

            ,
            mousePosition = 0

            ,
            isHorizontal = this.options.axis === 'x',
            hasTouchEvents = "ontouchstart" in document.documentElement

            ,
            sizeLabel = isHorizontal ? "width" : "height",
            posiLabel = isHorizontal ? "left" : "top";

        this.contentPosition = 0;
        this.viewportSize = 0;
        this.contentSize = 0;
        this.contentRatio = 0;
        this.trackSize = 0;
        this.trackRatio = 0;
        this.thumbSize = 0;
        this.thumbPosition = 0;

        function initialize() {
            self.update();
            setEvents();

            return self;
        }

        this.update = function(scrollTo) {
            var sizeLabelCap = sizeLabel.charAt(0).toUpperCase() + sizeLabel.slice(1).toLowerCase();
            this.viewportSize = $viewport[0]['offset' + sizeLabelCap];
            this.contentSize = $overview[0]['scroll' + sizeLabelCap];
            this.contentRatio = this.viewportSize / this.contentSize;
            this.trackSize = this.options.trackSize || this.viewportSize;
            this.thumbSize = Math.min(this.trackSize, Math.max(0, (this.options.thumbSize || (this.trackSize * this.contentRatio))));
            this.trackRatio = this.options.thumbSize ? (this.contentSize - this.viewportSize) / (this.trackSize - this.thumbSize) : (this.contentSize / this.trackSize);

            $scrollbar.toggleClass("disable", this.contentRatio >= 1);

            switch (scrollTo) {
                case "bottom":
                    this.contentPosition = this.contentSize - this.viewportSize;
                    break;

                case "relative":
                    this.contentPosition = Math.min(this.contentSize - this.viewportSize, Math.max(0, this.contentPosition));
                    break;

                default:
                    this.contentPosition = parseInt(scrollTo, 10) || 0;
            }

            setSize();
        };

        function setSize() {
            $thumb.css(posiLabel, self.contentPosition / self.trackRatio);
            $overview.css(posiLabel, -self.contentPosition);
            $scrollbar.css(sizeLabel, self.trackSize - self.options.marginHorizontal);
            $track.css(sizeLabel, self.trackSize - self.options.marginHorizontal);
            $thumb.css(sizeLabel, self.thumbSize - self.options.marginHorizontal);
        }

        function setEvents() {
            if (hasTouchEvents) {
                $viewport[0].ontouchstart = function(event) {
                    if (1 === event.touches.length) {
                        start(event.touches[0]);
                        event.stopPropagation();
                    }
                };
            } else {
                $thumb.bind("mousedown", start);
                $track.bind("mousedown", drag);
            }

            if (self.options.wheel && window.addEventListener) {
                $container[0].addEventListener("DOMMouseScroll", wheel, false);
                $container[0].addEventListener("mousewheel", wheel, false);
            } else if (self.options.wheel) {
                $container[0].onmousewheel = wheel;
            }
        }

        function start(event) {
            $("body").addClass("noSelect");

            mousePosition = isHorizontal ? event.pageX : event.pageY;
            self.thumbPosition = parseInt($thumb.css(posiLabel), 10) || 0;

            if (hasTouchEvents) {
                document.ontouchmove = function(event) {
                    event.preventDefault();

                    drag(event.touches[0]);
                };
                document.ontouchend = end;
            } else {
                $(document).bind("mousemove", drag);
                $(document).bind("mouseup", end);
                $thumb.bind("mouseup", end);
            }
            return false;
        }

        function wheel(event) {
            if (self.contentRatio < 1) {
                event.stopPropagation();
                var eventObject = event || window.event,
                    wheelSpeedDelta = eventObject.wheelDelta ? eventObject.wheelDelta / 120 : -eventObject.detail / 3;

                self.contentPosition -= wheelSpeedDelta * self.options.wheelSpeed;
                self.contentPosition = Math.min((self.contentSize - self.viewportSize), Math.max(0, self.contentPosition));

                $container.trigger("move");

                $thumb.css(posiLabel, self.contentPosition / self.trackRatio);
                $overview.css(posiLabel, -self.contentPosition);

                if (self.options.wheelLock || (self.contentPosition !== (self.contentSize - self.viewportSize) && self.contentPosition !== 0)) {
                    eventObject = $.event.fix(eventObject);
                    eventObject.preventDefault();
                }
            }
        }

        function drag(event) {
            if (self.contentRatio < 1) {
                var mousePositionNew = isHorizontal ? event.pageX : event.pageY,
                    thumbPositionDelta = mousePositionNew - mousePosition;

                if (self.options.scrollInvert && hasTouchEvents) {
                    thumbPositionDelta = mousePosition - mousePositionNew;
                }

                var thumbPositionNew = Math.min((self.trackSize - self.thumbSize), Math.max(0, self.thumbPosition + thumbPositionDelta));
                self.contentPosition = thumbPositionNew * self.trackRatio;

                $container.trigger("move");

                $thumb.css(posiLabel, thumbPositionNew);
                $overview.css(posiLabel, -self.contentPosition);
            }
        }

        function end() {
            $("body").removeClass("noSelect");
            $(document).unbind("mousemove", drag);
            $(document).unbind("mouseup", end);
            $thumb.unbind("mouseup", end);
            document.ontouchmove = document.ontouchend = null;
        }

        return initialize();
    }

    $.fn[pluginName] = function(options) {
        return this.each(function() {
            if (!$.data(this, "plugin_" + pluginName)) {
                $.data(this, "plugin_" + pluginName, new Plugin($(this), options));
            }
        });
    };
}));

!function(t){var e,r,i="0.4.2",n="hasOwnProperty",a=/[\.\/]/,s="*",o=function(){},l=function(t,e){return t-e},h={n:{}},u=function(t,i){t=String(t);var n,a=r,s=Array.prototype.slice.call(arguments,2),o=u.listeners(t),h=0,c=[],f={},p=[],d=e;e=t,r=0;for(var g=0,v=o.length;v>g;g++)"zIndex"in o[g]&&(c.push(o[g].zIndex),o[g].zIndex<0&&(f[o[g].zIndex]=o[g]));for(c.sort(l);c[h]<0;)if(n=f[c[h++]],p.push(n.apply(i,s)),r)return r=a,p;for(g=0;v>g;g++)if(n=o[g],"zIndex"in n)if(n.zIndex==c[h]){if(p.push(n.apply(i,s)),r)break;do if(h++,n=f[c[h]],n&&p.push(n.apply(i,s)),r)break;while(n)}else f[n.zIndex]=n;else if(p.push(n.apply(i,s)),r)break;return r=a,e=d,p.length?p:null};u._events=h,u.listeners=function(t){var e,r,i,n,o,l,u,c,f=t.split(a),p=h,d=[p],g=[];for(n=0,o=f.length;o>n;n++){for(c=[],l=0,u=d.length;u>l;l++)for(p=d[l].n,r=[p[f[n]],p[s]],i=2;i--;)e=r[i],e&&(c.push(e),g=g.concat(e.f||[]));d=c}return g},u.on=function(t,e){if(t=String(t),"function"!=typeof e)return function(){};for(var r=t.split(a),i=h,n=0,s=r.length;s>n;n++)i=i.n,i=i.hasOwnProperty(r[n])&&i[r[n]]||(i[r[n]]={n:{}});for(i.f=i.f||[],n=0,s=i.f.length;s>n;n++)if(i.f[n]==e)return o;return i.f.push(e),function(t){+t==+t&&(e.zIndex=+t)}},u.f=function(t){var e=[].slice.call(arguments,1);return function(){u.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)))}},u.stop=function(){r=1},u.nt=function(t){return t?new RegExp("(?:\\.|\\/|^)"+t+"(?:\\.|\\/|$)").test(e):e},u.nts=function(){return e.split(a)},u.off=u.unbind=function(t,e){if(!t)return u._events=h={n:{}},void 0;var r,i,o,l,c,f,p,d=t.split(a),g=[h];for(l=0,c=d.length;c>l;l++)for(f=0;f<g.length;f+=o.length-2){if(o=[f,1],r=g[f].n,d[l]!=s)r[d[l]]&&o.push(r[d[l]]);else for(i in r)r[n](i)&&o.push(r[i]);g.splice.apply(g,o)}for(l=0,c=g.length;c>l;l++)for(r=g[l];r.n;){if(e){if(r.f){for(f=0,p=r.f.length;p>f;f++)if(r.f[f]==e){r.f.splice(f,1);break}!r.f.length&&delete r.f}for(i in r.n)if(r.n[n](i)&&r.n[i].f){var v=r.n[i].f;for(f=0,p=v.length;p>f;f++)if(v[f]==e){v.splice(f,1);break}!v.length&&delete r.n[i].f}}else{delete r.f;for(i in r.n)r.n[n](i)&&r.n[i].f&&delete r.n[i].f}r=r.n}},u.once=function(t,e){var r=function(){return u.unbind(t,r),e.apply(this,arguments)};return u.on(t,r)},u.version=i,u.toString=function(){return"You are running Eve "+i},"undefined"!=typeof module&&module.exports?module.exports=u:"undefined"!=typeof define?define("eve",[],function(){return u}):t.eve=u}(window||this),function(t,e){"function"==typeof define&&define.amd?define(["eve"],function(r){return e(t,r)}):e(t,t.eve)}(this,function(t,e){function r(t){if(r.is(t,"function"))return b?t():e.on("raphael.DOMload",t);if(r.is(t,H))return r._engine.create[N](r,t.splice(0,3+r.is(t[0],W))).add(t);var i=Array.prototype.slice.call(arguments,0);if(r.is(i[i.length-1],"function")){var n=i.pop();return b?n.call(r._engine.create[N](r,i)):e.on("raphael.DOMload",function(){n.call(r._engine.create[N](r,i))})}return r._engine.create[N](r,arguments)}function i(t){if("function"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var r in t)t[B](r)&&(e[r]=i(t[r]));return e}function n(t,e){for(var r=0,i=t.length;i>r;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}function a(t,e,r){function i(){var a=Array.prototype.slice.call(arguments,0),s=a.join("â€"),o=i.cache=i.cache||{},l=i.count=i.count||[];return o[B](s)?(n(l,s),r?r(o[s]):o[s]):(l.length>=1e3&&delete o[l.shift()],l.push(s),o[s]=t[N](e,a),r?r(o[s]):o[s])}return i}function s(){return this.hex}function o(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push(["C",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}function l(t,e,r,i,n){var a=-3*e+9*r-9*i+3*n,s=t*a+6*e-12*r+6*i;return t*s-3*e+3*r}function h(t,e,r,i,n,a,s,o,h){null==h&&(h=1),h=h>1?1:0>h?0:h;for(var u=h/2,c=12,f=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],p=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0,g=0;c>g;g++){var v=u*f[g]+u,x=l(v,t,r,n,s),y=l(v,e,i,a,o),m=x*x+y*y;d+=p[g]*q.sqrt(m)}return u*d}function u(t,e,r,i,n,a,s,o,l){if(!(0>l||h(t,e,r,i,n,a,s,o)<l)){var u,c=1,f=c/2,p=c-f,d=.01;for(u=h(t,e,r,i,n,a,s,o,p);V(u-l)>d;)f/=2,p+=(l>u?1:-1)*f,u=h(t,e,r,i,n,a,s,o,p);return p}}function c(t,e,r,i,n,a,s,o){if(!(D(t,r)<O(n,s)||O(t,r)>D(n,s)||D(e,i)<O(a,o)||O(e,i)>D(a,o))){var l=(t*i-e*r)*(n-s)-(t-r)*(n*o-a*s),h=(t*i-e*r)*(a-o)-(e-i)*(n*o-a*s),u=(t-r)*(a-o)-(e-i)*(n-s);if(u){var c=l/u,f=h/u,p=+c.toFixed(2),d=+f.toFixed(2);if(!(p<+O(t,r).toFixed(2)||p>+D(t,r).toFixed(2)||p<+O(n,s).toFixed(2)||p>+D(n,s).toFixed(2)||d<+O(e,i).toFixed(2)||d>+D(e,i).toFixed(2)||d<+O(a,o).toFixed(2)||d>+D(a,o).toFixed(2)))return{x:c,y:f}}}}function f(t,e,i){var n=r.bezierBBox(t),a=r.bezierBBox(e);if(!r.isBBoxIntersect(n,a))return i?0:[];for(var s=h.apply(0,t),o=h.apply(0,e),l=D(~~(s/5),1),u=D(~~(o/5),1),f=[],p=[],d={},g=i?0:[],v=0;l+1>v;v++){var x=r.findDotsAtSegment.apply(r,t.concat(v/l));f.push({x:x.x,y:x.y,t:v/l})}for(v=0;u+1>v;v++)x=r.findDotsAtSegment.apply(r,e.concat(v/u)),p.push({x:x.x,y:x.y,t:v/u});for(v=0;l>v;v++)for(var y=0;u>y;y++){var m=f[v],b=f[v+1],_=p[y],w=p[y+1],k=V(b.x-m.x)<.001?"y":"x",C=V(w.x-_.x)<.001?"y":"x",B=c(m.x,m.y,b.x,b.y,_.x,_.y,w.x,w.y);if(B){if(d[B.x.toFixed(4)]==B.y.toFixed(4))continue;d[B.x.toFixed(4)]=B.y.toFixed(4);var S=m.t+V((B[k]-m[k])/(b[k]-m[k]))*(b.t-m.t),T=_.t+V((B[C]-_[C])/(w[C]-_[C]))*(w.t-_.t);S>=0&&1.001>=S&&T>=0&&1.001>=T&&(i?g++:g.push({x:B.x,y:B.y,t1:O(S,1),t2:O(T,1)}))}}return g}function p(t,e,i){t=r._path2curve(t),e=r._path2curve(e);for(var n,a,s,o,l,h,u,c,p,d,g=i?0:[],v=0,x=t.length;x>v;v++){var y=t[v];if("M"==y[0])n=l=y[1],a=h=y[2];else{"C"==y[0]?(p=[n,a].concat(y.slice(1)),n=p[6],a=p[7]):(p=[n,a,n,a,l,h,l,h],n=l,a=h);for(var m=0,b=e.length;b>m;m++){var _=e[m];if("M"==_[0])s=u=_[1],o=c=_[2];else{"C"==_[0]?(d=[s,o].concat(_.slice(1)),s=d[6],o=d[7]):(d=[s,o,s,o,u,c,u,c],s=u,o=c);var w=f(p,d,i);if(i)g+=w;else{for(var k=0,C=w.length;C>k;k++)w[k].segment1=v,w[k].segment2=m,w[k].bez1=p,w[k].bez2=d;g=g.concat(w)}}}}}return g}function d(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}function g(){return this.x+P+this.y+P+this.width+" Ã— "+this.height}function v(t,e,r,i,n,a){function s(t){return((c*t+u)*t+h)*t}function o(t,e){var r=l(t,e);return((d*r+p)*r+f)*r}function l(t,e){var r,i,n,a,o,l;for(n=t,l=0;8>l;l++){if(a=s(n)-t,V(a)<e)return n;if(o=(3*c*n+2*u)*n+h,V(o)<1e-6)break;n-=a/o}if(r=0,i=1,n=t,r>n)return r;if(n>i)return i;for(;i>r;){if(a=s(n),V(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r}return n}var h=3*e,u=3*(i-e)-h,c=1-h-u,f=3*r,p=3*(n-r)-f,d=1-f-p;return o(t,1/(200*a))}function x(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[B](n)&&(i[K(n)]=t[n],r.push(K(n)));r.sort(ce)}this.anim=i,this.top=r[r.length-1],this.percents=r}function y(t,i,n,a,s,o){n=K(n);var l,h,u,c,f,p,g=t.ms,x={},y={},m={};if(a)for(_=0,k=lr.length;k>_;_++){var b=lr[_];if(b.el.id==i.id&&b.anim==t){b.percent!=n?(lr.splice(_,1),u=1):h=b,i.attr(b.totalOrigin);break}}else a=+y;for(var _=0,k=t.percents.length;k>_;_++){if(t.percents[_]==n||t.percents[_]>a*t.top){n=t.percents[_],f=t.percents[_-1]||0,g=g/t.top*(n-f),c=t.percents[_+1],l=t.anim[n];break}a&&i.attr(t.anim[t.percents[_]])}if(l){if(h)h.initstatus=a,h.start=new Date-h.ms*a;else{for(var C in l)if(l[B](C)&&(ie[B](C)||i.paper.customAttributes[B](C)))switch(x[C]=i.attr(C),null==x[C]&&(x[C]=re[C]),y[C]=l[C],ie[C]){case W:m[C]=(y[C]-x[C])/g;break;case"colour":x[C]=r.getRGB(x[C]);var S=r.getRGB(y[C]);m[C]={r:(S.r-x[C].r)/g,g:(S.g-x[C].g)/g,b:(S.b-x[C].b)/g};break;case"path":var T=Re(x[C],y[C]),A=T[1];for(x[C]=T[0],m[C]=[],_=0,k=x[C].length;k>_;_++){m[C][_]=[0];for(var N=1,L=x[C][_].length;L>N;N++)m[C][_][N]=(A[_][N]-x[C][_][N])/g}break;case"transform":var M=i._,P=Oe(M[C],y[C]);if(P)for(x[C]=P.from,y[C]=P.to,m[C]=[],m[C].real=!0,_=0,k=x[C].length;k>_;_++)for(m[C][_]=[x[C][_][0]],N=1,L=x[C][_].length;L>N;N++)m[C][_][N]=(y[C][_][N]-x[C][_][N])/g;else{var R=i.matrix||new d,I={_:{transform:M.transform},getBBox:function(){return i.getBBox(1)}};x[C]=[R.a,R.b,R.c,R.d,R.e,R.f],qe(I,y[C]),y[C]=I._.transform,m[C]=[(I.matrix.a-R.a)/g,(I.matrix.b-R.b)/g,(I.matrix.c-R.c)/g,(I.matrix.d-R.d)/g,(I.matrix.e-R.e)/g,(I.matrix.f-R.f)/g]}break;case"csv":var j=z(l[C])[F](w),q=z(x[C])[F](w);if("clip-rect"==C)for(x[C]=q,m[C]=[],_=q.length;_--;)m[C][_]=(j[_]-x[C][_])/g;y[C]=j;break;default:for(j=[][E](l[C]),q=[][E](x[C]),m[C]=[],_=i.paper.customAttributes[C].length;_--;)m[C][_]=((j[_]||0)-(q[_]||0))/g}var D=l.easing,O=r.easing_formulas[D];if(!O)if(O=z(D).match(Q),O&&5==O.length){var V=O;O=function(t){return v(t,+V[1],+V[2],+V[3],+V[4],g)}}else O=pe;if(p=l.start||t.start||+new Date,b={anim:t,percent:n,timestamp:p,start:p+(t.del||0),status:0,initstatus:a||0,stop:!1,ms:g,easing:O,from:x,diff:m,to:y,el:i,callback:l.callback,prev:f,next:c,repeat:o||t.times,origin:i.attr(),totalOrigin:s},lr.push(b),a&&!h&&!u&&(b.stop=!0,b.start=new Date-g*a,1==lr.length))return ur();u&&(b.start=new Date-b.ms*a),1==lr.length&&hr(ur)}e("raphael.anim.start."+i.id,i,t)}}function m(t){for(var e=0;e<lr.length;e++)lr[e].el.paper==t&&lr.splice(e--,1)}r.version="2.1.2",r.eve=e;var b,_,w=/[, ]+/,k={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},C=/\{(\d+)\}/g,B="hasOwnProperty",S={doc:document,win:t},T={was:Object.prototype[B].call(S.win,"Raphael"),is:S.win.Raphael},A=function(){this.ca=this.customAttributes={}},N="apply",E="concat",L="ontouchstart"in S.win||S.win.DocumentTouch&&S.doc instanceof DocumentTouch,M="",P=" ",z=String,F="split",R="click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[F](P),I={mousedown:"touchstart",mousemove:"touchmove",mouseup:"touchend"},j=z.prototype.toLowerCase,q=Math,D=q.max,O=q.min,V=q.abs,Y=q.pow,G=q.PI,W="number",X="string",H="array",U=Object.prototype.toString,$=(r._ISURL=/^url\(['"]?([^\)]+?)['"]?\)$/i,/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i),Z={NaN:1,Infinity:1,"-Infinity":1},Q=/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,J=q.round,K=parseFloat,te=parseInt,ee=z.prototype.toUpperCase,re=r._availableAttrs={"arrow-end":"none","arrow-start":"none",blur:0,"clip-rect":"0 0 1e9 1e9",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"http://raphaeljs.com/","letter-spacing":0,opacity:1,path:"M0,0",r:0,rx:0,ry:0,src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",title:"Raphael",transform:"",width:0,x:0,y:0},ie=r._availableAnimAttrs={blur:W,"clip-rect":"csv",cx:W,cy:W,fill:"colour","fill-opacity":W,"font-size":W,height:W,opacity:W,path:"path",r:W,rx:W,ry:W,stroke:"colour","stroke-opacity":W,"stroke-width":W,transform:"transform",width:W,x:W,y:W},ne=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,ae={hs:1,rg:1},se=/,?([achlmqrstvxz]),?/gi,oe=/([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,le=/([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,he=/(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi,ue=(r._radial_gradient=/^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,{}),ce=function(t,e){return K(t)-K(e)},fe=function(){},pe=function(t){return t},de=r._rectPath=function(t,e,r,i,n){return n?[["M",t+n,e],["l",r-2*n,0],["a",n,n,0,0,1,n,n],["l",0,i-2*n],["a",n,n,0,0,1,-n,n],["l",2*n-r,0],["a",n,n,0,0,1,-n,-n],["l",0,2*n-i],["a",n,n,0,0,1,n,-n],["z"]]:[["M",t,e],["l",r,0],["l",0,i],["l",-r,0],["z"]]},ge=function(t,e,r,i){return null==i&&(i=r),[["M",t,e],["m",0,-i],["a",r,i,0,1,1,0,2*i],["a",r,i,0,1,1,0,-2*i],["z"]]},ve=r._getPath={path:function(t){return t.attr("path")},circle:function(t){var e=t.attrs;return ge(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return ge(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return de(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return de(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return de(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return de(e.x,e.y,e.width,e.height)}},xe=r.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(t=Re(t),n=0,s=t.length;s>n;n++)for(l=t[n],a=1,o=l.length;o>a;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(r._g=S,r.type=S.win.SVGAngle||S.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")?"SVG":"VML","VML"==r.type){var ye,me=S.doc.createElement("div");if(me.innerHTML='<v:shape adj="1"/>',ye=me.firstChild,ye.style.behavior="url(#default#VML)",!ye||"object"!=typeof ye.adj)return r.type=M;me=null}r.svg=!(r.vml="VML"==r.type),r._Paper=A,r.fn=_=A.prototype=r.prototype,r._id=0,r._oid=0,r.is=function(t,e){return e=j.call(e),"finite"==e?!Z[B](+t):"array"==e?t instanceof Array:"null"==e&&null===t||e==typeof t&&null!==t||"object"==e&&t===Object(t)||"array"==e&&Array.isArray&&Array.isArray(t)||U.call(t).slice(8,-1).toLowerCase()==e},r.angle=function(t,e,i,n,a,s){if(null==a){var o=t-i,l=e-n;return o||l?(180+180*q.atan2(-l,-o)/G+360)%360:0}return r.angle(t,e,a,s)-r.angle(i,n,a,s)},r.rad=function(t){return t%360*G/180},r.deg=function(t){return 180*t/G%360},r.snapTo=function(t,e,i){if(i=r.is(i,"finite")?i:10,r.is(t,H)){for(var n=t.length;n--;)if(V(t[n]-e)<=i)return t[n]}else{t=+t;var a=e%t;if(i>a)return e-a;if(a>t-i)return e-a+t}return e},r.createUUID=function(t,e){return function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(t,e).toUpperCase()}}(/[xy]/g,function(t){var e=16*q.random()|0,r="x"==t?e:3&e|8;return r.toString(16)}),r.setWindow=function(t){e("raphael.setWindow",r,S.win,t),S.win=t,S.doc=S.win.document,r._engine.initWin&&r._engine.initWin(S.win)};var be=function(t){if(r.vml){var e,i=/^\s+|\s+$/g;try{var n=new ActiveXObject("htmlfile");n.write("<body>"),n.close(),e=n.body}catch(s){e=createPopup().document.body}var o=e.createTextRange();be=a(function(t){try{e.style.color=z(t).replace(i,M);var r=o.queryCommandValue("ForeColor");return r=(255&r)<<16|65280&r|(16711680&r)>>>16,"#"+("000000"+r.toString(16)).slice(-6)}catch(n){return"none"}})}else{var l=S.doc.createElement("i");l.title="RaphaÃ«l Colour Picker",l.style.display="none",S.doc.body.appendChild(l),be=a(function(t){return l.style.color=t,S.doc.defaultView.getComputedStyle(l,M).getPropertyValue("color")})}return be(t)},_e=function(){return"hsb("+[this.h,this.s,this.b]+")"},we=function(){return"hsl("+[this.h,this.s,this.l]+")"},ke=function(){return this.hex},Ce=function(t,e,i){if(null==e&&r.is(t,"object")&&"r"in t&&"g"in t&&"b"in t&&(i=t.b,e=t.g,t=t.r),null==e&&r.is(t,X)){var n=r.getRGB(t);t=n.r,e=n.g,i=n.b}return(t>1||e>1||i>1)&&(t/=255,e/=255,i/=255),[t,e,i]},Be=function(t,e,i,n){t*=255,e*=255,i*=255;var a={r:t,g:e,b:i,hex:r.rgb(t,e,i),toString:ke};return r.is(n,"finite")&&(a.opacity=n),a};r.color=function(t){var e;return r.is(t,"object")&&"h"in t&&"s"in t&&"b"in t?(e=r.hsb2rgb(t),t.r=e.r,t.g=e.g,t.b=e.b,t.hex=e.hex):r.is(t,"object")&&"h"in t&&"s"in t&&"l"in t?(e=r.hsl2rgb(t),t.r=e.r,t.g=e.g,t.b=e.b,t.hex=e.hex):(r.is(t,"string")&&(t=r.getRGB(t)),r.is(t,"object")&&"r"in t&&"g"in t&&"b"in t?(e=r.rgb2hsl(t),t.h=e.h,t.s=e.s,t.l=e.l,e=r.rgb2hsb(t),t.v=e.b):(t={hex:"none"},t.r=t.g=t.b=t.h=t.s=t.v=t.l=-1)),t.toString=ke,t},r.hsb2rgb=function(t,e,r,i){this.is(t,"object")&&"h"in t&&"s"in t&&"b"in t&&(r=t.b,e=t.s,t=t.h,i=t.o),t*=360;var n,a,s,o,l;return t=t%360/60,l=r*e,o=l*(1-V(t%2-1)),n=a=s=r-l,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],Be(n,a,s,i)},r.hsl2rgb=function(t,e,r,i){this.is(t,"object")&&"h"in t&&"s"in t&&"l"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),t*=360;var n,a,s,o,l;return t=t%360/60,l=2*e*(.5>r?r:1-r),o=l*(1-V(t%2-1)),n=a=s=r-l/2,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],Be(n,a,s,i)},r.rgb2hsb=function(t,e,r){r=Ce(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s;return a=D(t,e,r),s=a-O(t,e,r),i=0==s?null:a==t?(e-r)/s:a==e?(r-t)/s+2:(t-e)/s+4,i=(i+360)%6*60/360,n=0==s?0:s/a,{h:i,s:n,b:a,toString:_e}},r.rgb2hsl=function(t,e,r){r=Ce(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s,o,l;return s=D(t,e,r),o=O(t,e,r),l=s-o,i=0==l?null:s==t?(e-r)/l:s==e?(r-t)/l+2:(t-e)/l+4,i=(i+360)%6*60/360,a=(s+o)/2,n=0==l?0:.5>a?l/(2*a):l/(2-2*a),{h:i,s:n,l:a,toString:we}},r._path2string=function(){return this.join(",").replace(se,"$1")},r._preload=function(t,e){var r=S.doc.createElement("img");r.style.cssText="position:absolute;left:-9999em;top:-9999em",r.onload=function(){e.call(this),this.onload=null,S.doc.body.removeChild(this)},r.onerror=function(){S.doc.body.removeChild(this)},S.doc.body.appendChild(r),r.src=t},r.getRGB=a(function(t){if(!t||(t=z(t)).indexOf("-")+1)return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:s};if("none"==t)return{r:-1,g:-1,b:-1,hex:"none",toString:s};!(ae[B](t.toLowerCase().substring(0,2))||"#"==t.charAt())&&(t=be(t));var e,i,n,a,o,l,h=t.match($);return h?(h[2]&&(n=te(h[2].substring(5),16),i=te(h[2].substring(3,5),16),e=te(h[2].substring(1,3),16)),h[3]&&(n=te((o=h[3].charAt(3))+o,16),i=te((o=h[3].charAt(2))+o,16),e=te((o=h[3].charAt(1))+o,16)),h[4]&&(l=h[4][F](ne),e=K(l[0]),"%"==l[0].slice(-1)&&(e*=2.55),i=K(l[1]),"%"==l[1].slice(-1)&&(i*=2.55),n=K(l[2]),"%"==l[2].slice(-1)&&(n*=2.55),"rgba"==h[1].toLowerCase().slice(0,4)&&(a=K(l[3])),l[3]&&"%"==l[3].slice(-1)&&(a/=100)),h[5]?(l=h[5][F](ne),e=K(l[0]),"%"==l[0].slice(-1)&&(e*=2.55),i=K(l[1]),"%"==l[1].slice(-1)&&(i*=2.55),n=K(l[2]),"%"==l[2].slice(-1)&&(n*=2.55),("deg"==l[0].slice(-3)||"Â°"==l[0].slice(-1))&&(e/=360),"hsba"==h[1].toLowerCase().slice(0,4)&&(a=K(l[3])),l[3]&&"%"==l[3].slice(-1)&&(a/=100),r.hsb2rgb(e,i,n,a)):h[6]?(l=h[6][F](ne),e=K(l[0]),"%"==l[0].slice(-1)&&(e*=2.55),i=K(l[1]),"%"==l[1].slice(-1)&&(i*=2.55),n=K(l[2]),"%"==l[2].slice(-1)&&(n*=2.55),("deg"==l[0].slice(-3)||"Â°"==l[0].slice(-1))&&(e/=360),"hsla"==h[1].toLowerCase().slice(0,4)&&(a=K(l[3])),l[3]&&"%"==l[3].slice(-1)&&(a/=100),r.hsl2rgb(e,i,n,a)):(h={r:e,g:i,b:n,toString:s},h.hex="#"+(16777216|n|i<<8|e<<16).toString(16).slice(1),r.is(a,"finite")&&(h.opacity=a),h)):{r:-1,g:-1,b:-1,hex:"none",error:1,toString:s}},r),r.hsb=a(function(t,e,i){return r.hsb2rgb(t,e,i).hex}),r.hsl=a(function(t,e,i){return r.hsl2rgb(t,e,i).hex}),r.rgb=a(function(t,e,r){return"#"+(16777216|r|e<<8|t<<16).toString(16).slice(1)}),r.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},r.getColor.reset=function(){delete this.start},r.parsePathString=function(t){if(!t)return null;var e=Se(t);if(e.arr)return Ae(e.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return r.is(t,H)&&r.is(t[0],H)&&(n=Ae(t)),n.length||z(t).replace(oe,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(he,function(t,e){e&&a.push(+e)}),"m"==s&&a.length>2&&(n.push([e][E](a.splice(0,2))),s="l",e="m"==e?"l":"L"),"r"==s)n.push([e][E](a));else for(;a.length>=i[s]&&(n.push([e][E](a.splice(0,i[s]))),i[s]););}),n.toString=r._path2string,e.arr=Ae(n),n},r.parseTransformString=a(function(t){if(!t)return null;var e=[];return r.is(t,H)&&r.is(t[0],H)&&(e=Ae(t)),e.length||z(t).replace(le,function(t,r,i){var n=[];j.call(r),i.replace(he,function(t,e){e&&n.push(+e)}),e.push([r][E](n))}),e.toString=r._path2string,e});var Se=function(t){var e=Se.ps=Se.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[B](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r])}),e[t]};r.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=Y(h,3),c=Y(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,v=t+2*l*(r-t)+f*(n-2*r+t),x=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,_=h*e+l*i,w=h*n+l*s,k=h*a+l*o,C=90-180*q.atan2(v-y,x-m)/G;return(v>y||m>x)&&(C+=180),{x:d,y:g,m:{x:v,y:x},n:{x:y,y:m},start:{x:b,y:_},end:{x:w,y:k},alpha:C}},r.bezierBBox=function(t,e,i,n,a,s,o,l){r.is(t,"array")||(t=[t,e,i,n,a,s,o,l]);var h=Fe.apply(null,t);return{x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},r.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},r.isBBoxIntersect=function(t,e){var i=r.isPointInsideBBox;return i(e,t.x,t.y)||i(e,t.x2,t.y)||i(e,t.x,t.y2)||i(e,t.x2,t.y2)||i(t,e.x,e.y)||i(t,e.x2,e.y)||i(t,e.x,e.y2)||i(t,e.x2,e.y2)||(t.x<e.x2&&t.x>e.x||e.x<t.x2&&e.x>t.x)&&(t.y<e.y2&&t.y>e.y||e.y<t.y2&&e.y>t.y)},r.pathIntersection=function(t,e){return p(t,e)},r.pathIntersectionNumber=function(t,e){return p(t,e,1)},r.isPointInsidePath=function(t,e,i){var n=r.pathBBox(t);return r.isPointInsideBBox(n,e,i)&&p(t,[["M",e,i],["H",n.x2+10]],1)%2==1},r._removedFactory=function(t){return function(){e("raphael.log",null,"RaphaÃ«l: you are calling to method â€œ"+t+"â€ of removed object",t)}};var Te=r.pathBBox=function(t){var e=Se(t);if(e.bbox)return i(e.bbox);if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0};t=Re(t);for(var r,n=0,a=0,s=[],o=[],l=0,h=t.length;h>l;l++)if(r=t[l],"M"==r[0])n=r[1],a=r[2],s.push(n),o.push(a);else{var u=Fe(n,a,r[1],r[2],r[3],r[4],r[5],r[6]);s=s[E](u.min.x,u.max.x),o=o[E](u.min.y,u.max.y),n=r[5],a=r[6]}var c=O[N](0,s),f=O[N](0,o),p=D[N](0,s),d=D[N](0,o),g=p-c,v=d-f,x={x:c,y:f,x2:p,y2:d,width:g,height:v,cx:c+g/2,cy:f+v/2};return e.bbox=i(x),x},Ae=function(t){var e=i(t);return e.toString=r._path2string,e},Ne=r._pathToRelative=function(t){var e=Se(t);if(e.rel)return Ae(e.rel);r.is(t,H)&&r.is(t&&t[0],H)||(t=r.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;"M"==t[0][0]&&(n=t[0][1],a=t[0][2],s=n,o=a,l++,i.push(["M",n,a]));for(var h=l,u=t.length;u>h;h++){var c=i[h]=[],f=t[h];if(f[0]!=j.call(f[0]))switch(c[0]=j.call(f[0]),c[0]){case"a":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case"v":c[1]=+(f[1]-a).toFixed(3);break;case"m":s=f[1],o=f[2];default:for(var p=1,d=f.length;d>p;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3)}else{c=i[h]=[],"m"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,v=f.length;v>g;g++)i[h][g]=f[g]}var x=i[h].length;switch(i[h][0]){case"z":n=s,a=o;break;case"h":n+=+i[h][x-1];break;case"v":a+=+i[h][x-1];break;default:n+=+i[h][x-2],a+=+i[h][x-1]}}return i.toString=r._path2string,e.rel=Ae(i),i},Ee=r._pathToAbsolute=function(t){var e=Se(t);if(e.abs)return Ae(e.abs);if(r.is(t,H)&&r.is(t&&t[0],H)||(t=r.parsePathString(t)),!t||!t.length)return[["M",0,0]];var i=[],n=0,a=0,s=0,l=0,h=0;"M"==t[0][0]&&(n=+t[0][1],a=+t[0][2],s=n,l=a,h++,i[0]=["M",n,a]);for(var u,c,f=3==t.length&&"M"==t[0][0]&&"R"==t[1][0].toUpperCase()&&"Z"==t[2][0].toUpperCase(),p=h,d=t.length;d>p;p++){if(i.push(u=[]),c=t[p],c[0]!=ee.call(c[0]))switch(u[0]=ee.call(c[0]),u[0]){case"A":u[1]=c[1],u[2]=c[2],u[3]=c[3],u[4]=c[4],u[5]=c[5],u[6]=+(c[6]+n),u[7]=+(c[7]+a);break;case"V":u[1]=+c[1]+a;break;case"H":u[1]=+c[1]+n;break;case"R":for(var g=[n,a][E](c.slice(1)),v=2,x=g.length;x>v;v++)g[v]=+g[v]+n,g[++v]=+g[v]+a;i.pop(),i=i[E](o(g,f));break;case"M":s=+c[1]+n,l=+c[2]+a;default:for(v=1,x=c.length;x>v;v++)u[v]=+c[v]+(v%2?n:a)}else if("R"==c[0])g=[n,a][E](c.slice(1)),i.pop(),i=i[E](o(g,f)),u=["R"][E](c.slice(-2));else for(var y=0,m=c.length;m>y;y++)u[y]=c[y];switch(u[0]){case"Z":n=s,a=l;break;case"H":n=u[1];break;case"V":a=u[1];break;case"M":s=u[u.length-2],l=u[u.length-1];default:n=u[u.length-2],a=u[u.length-1]}}return i.toString=r._path2string,e.abs=Ae(i),i},Le=function(t,e,r,i){return[t,e,r,i,r,i]},Me=function(t,e,r,i,n,a){var s=1/3,o=2/3;return[s*t+o*r,s*e+o*i,s*n+o*r,s*a+o*i,n,a]},Pe=function(t,e,r,i,n,s,o,l,h,u){var c,f=120*G/180,p=G/180*(+n||0),d=[],g=a(function(t,e,r){var i=t*q.cos(r)-e*q.sin(r),n=t*q.sin(r)+e*q.cos(r);return{x:i,y:n}});if(u)C=u[0],B=u[1],w=u[2],k=u[3];else{c=g(t,e,-p),t=c.x,e=c.y,c=g(l,h,-p),l=c.x,h=c.y;var v=(q.cos(G/180*n),q.sin(G/180*n),(t-l)/2),x=(e-h)/2,y=v*v/(r*r)+x*x/(i*i);y>1&&(y=q.sqrt(y),r=y*r,i=y*i);var m=r*r,b=i*i,_=(s==o?-1:1)*q.sqrt(V((m*b-m*x*x-b*v*v)/(m*x*x+b*v*v))),w=_*r*x/i+(t+l)/2,k=_*-i*v/r+(e+h)/2,C=q.asin(((e-k)/i).toFixed(9)),B=q.asin(((h-k)/i).toFixed(9));C=w>t?G-C:C,B=w>l?G-B:B,0>C&&(C=2*G+C),0>B&&(B=2*G+B),o&&C>B&&(C-=2*G),!o&&B>C&&(B-=2*G)}var S=B-C;if(V(S)>f){var T=B,A=l,N=h;B=C+f*(o&&B>C?1:-1),l=w+r*q.cos(B),h=k+i*q.sin(B),d=Pe(l,h,r,i,n,0,o,A,N,[B,T,w,k])}S=B-C;var L=q.cos(C),M=q.sin(C),P=q.cos(B),z=q.sin(B),R=q.tan(S/4),I=4/3*r*R,j=4/3*i*R,D=[t,e],O=[t+I*M,e-j*L],Y=[l+I*z,h-j*P],W=[l,h];if(O[0]=2*D[0]-O[0],O[1]=2*D[1]-O[1],u)return[O,Y,W][E](d);d=[O,Y,W][E](d).join()[F](",");for(var X=[],H=0,U=d.length;U>H;H++)X[H]=H%2?g(d[H-1],d[H],p).y:g(d[H],d[H+1],p).x;return X},ze=function(t,e,r,i,n,a,s,o,l){var h=1-l;return{x:Y(h,3)*t+3*Y(h,2)*l*r+3*h*l*l*n+Y(l,3)*s,y:Y(h,3)*e+3*Y(h,2)*l*i+3*h*l*l*a+Y(l,3)*o}},Fe=a(function(t,e,r,i,n,a,s,o){var l,h=n-2*r+t-(s-2*n+r),u=2*(r-t)-2*(n-r),c=t-r,f=(-u+q.sqrt(u*u-4*h*c))/2/h,p=(-u-q.sqrt(u*u-4*h*c))/2/h,d=[e,o],g=[t,s];return V(f)>"1e12"&&(f=.5),V(p)>"1e12"&&(p=.5),f>0&&1>f&&(l=ze(t,e,r,i,n,a,s,o,f),g.push(l.x),d.push(l.y)),p>0&&1>p&&(l=ze(t,e,r,i,n,a,s,o,p),g.push(l.x),d.push(l.y)),h=a-2*i+e-(o-2*a+i),u=2*(i-e)-2*(a-i),c=e-i,f=(-u+q.sqrt(u*u-4*h*c))/2/h,p=(-u-q.sqrt(u*u-4*h*c))/2/h,V(f)>"1e12"&&(f=.5),V(p)>"1e12"&&(p=.5),f>0&&1>f&&(l=ze(t,e,r,i,n,a,s,o,f),g.push(l.x),d.push(l.y)),p>0&&1>p&&(l=ze(t,e,r,i,n,a,s,o,p),g.push(l.x),d.push(l.y)),{min:{x:O[N](0,g),y:O[N](0,d)},max:{x:D[N](0,g),y:D[N](0,d)}}}),Re=r._path2curve=a(function(t,e){var r=!e&&Se(t);if(!e&&r.curve)return Ae(r.curve);for(var i=Ee(t),n=e&&Ee(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=(function(t,e,r){var i,n,a={T:1,Q:1};if(!t)return["C",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in a)&&(e.qx=e.qy=null),t[0]){case"M":e.X=t[1],e.Y=t[2];break;case"A":t=["C"][E](Pe[N](0,[e.x,e.y][E](t.slice(1))));break;case"S":"C"==r||"S"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=["C",i,n][E](t.slice(1));break;case"T":"Q"==r||"T"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=["C"][E](Me(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case"Q":e.qx=t[1],e.qy=t[2],t=["C"][E](Me(e.x,e.y,t[1],t[2],t[3],t[4]));break;case"L":t=["C"][E](Le(e.x,e.y,t[1],t[2]));break;case"H":t=["C"][E](Le(e.x,e.y,t[1],e.y));break;case"V":t=["C"][E](Le(e.x,e.y,e.x,t[1]));break;case"Z":t=["C"][E](Le(e.x,e.y,e.X,e.Y))}return t}),l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)t.splice(e++,0,["C"][E](r.splice(0,6)));t.splice(e,1),c=D(i.length,n&&n.length||0)}},h=function(t,e,r,a,s){t&&e&&"M"==t[s][0]&&"M"!=e[s][0]&&(e.splice(s,0,["M",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],c=D(i.length,n&&n.length||0))},u=0,c=D(i.length,n&&n.length||0);c>u;u++){i[u]=o(i[u],a),l(i,u),n&&(n[u]=o(n[u],s)),n&&l(n,u),h(i,n,a,s,u),h(n,i,s,a,u);var f=i[u],p=n&&n[u],d=f.length,g=n&&p.length;a.x=f[d-2],a.y=f[d-1],a.bx=K(f[d-4])||a.x,a.by=K(f[d-3])||a.y,s.bx=n&&(K(p[g-4])||s.x),s.by=n&&(K(p[g-3])||s.y),s.x=n&&p[g-2],s.y=n&&p[g-1]}return n||(r.curve=Ae(i)),n?[i,n]:i},null,Ae),Ie=(r._parseDots=a(function(t){for(var e=[],i=0,n=t.length;n>i;i++){var a={},s=t[i].match(/^([^:]*):?([\d\.]*)/);if(a.color=r.getRGB(s[1]),a.color.error)return null;a.color=a.color.hex,s[2]&&(a.offset=s[2]+"%"),e.push(a)}for(i=1,n=e.length-1;n>i;i++)if(!e[i].offset){for(var o=K(e[i-1].offset||0),l=0,h=i+1;n>h;h++)if(e[h].offset){l=e[h].offset;break}l||(l=100,h=n),l=K(l);for(var u=(l-o)/(h-i+1);h>i;i++)o+=u,e[i].offset=o+"%"}return e}),r._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next)}),je=(r._tofront=function(t,e){e.top!==t&&(Ie(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t)},r._toback=function(t,e){e.bottom!==t&&(Ie(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t)},r._insertafter=function(t,e,r){Ie(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t},r._insertbefore=function(t,e,r){Ie(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e},r.toMatrix=function(t,e){var r=Te(t),i={_:{transform:M},getBBox:function(){return r}};return qe(i,e),i.matrix}),qe=(r.transformPath=function(t,e){return xe(t,je(t,e))},r._extractTransform=function(t,e){if(null==e)return t._.transform;e=z(e).replace(/\.{3}|\u2026/g,t._.transform||M);var i=r.parseTransformString(e),n=0,a=0,s=0,o=1,l=1,h=t._,u=new d;if(h.transform=i||[],i)for(var c=0,f=i.length;f>c;c++){var p,g,v,x,y,m=i[c],b=m.length,_=z(m[0]).toLowerCase(),w=m[0]!=_,k=w?u.invert():0;"t"==_&&3==b?w?(p=k.x(0,0),g=k.y(0,0),v=k.x(m[1],m[2]),x=k.y(m[1],m[2]),u.translate(v-p,x-g)):u.translate(m[1],m[2]):"r"==_?2==b?(y=y||t.getBBox(1),u.rotate(m[1],y.x+y.width/2,y.y+y.height/2),n+=m[1]):4==b&&(w?(v=k.x(m[2],m[3]),x=k.y(m[2],m[3]),u.rotate(m[1],v,x)):u.rotate(m[1],m[2],m[3]),n+=m[1]):"s"==_?2==b||3==b?(y=y||t.getBBox(1),u.scale(m[1],m[b-1],y.x+y.width/2,y.y+y.height/2),o*=m[1],l*=m[b-1]):5==b&&(w?(v=k.x(m[3],m[4]),x=k.y(m[3],m[4]),u.scale(m[1],m[2],v,x)):u.scale(m[1],m[2],m[3],m[4]),o*=m[1],l*=m[2]):"m"==_&&7==b&&u.add(m[1],m[2],m[3],m[4],m[5],m[6]),h.dirtyT=1,t.matrix=u}t.matrix=u,h.sx=o,h.sy=l,h.deg=n,h.dx=a=u.e,h.dy=s=u.f,1==o&&1==l&&!n&&h.bbox?(h.bbox.x+=+a,h.bbox.y+=+s):h.dirtyT=1}),De=function(t){var e=t[0];switch(e.toLowerCase()){case"t":return[e,0,0];case"m":return[e,1,0,0,1,0,0];case"r":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case"s":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},Oe=r._equaliseTransform=function(t,e){e=z(e).replace(/\.{3}|\u2026/g,t),t=r.parseTransformString(t)||[],e=r.parseTransformString(e)||[];for(var i,n,a,s,o=D(t.length,e.length),l=[],h=[],u=0;o>u;u++){if(a=t[u]||De(e[u]),s=e[u]||De(a),a[0]!=s[0]||"r"==a[0].toLowerCase()&&(a[2]!=s[2]||a[3]!=s[3])||"s"==a[0].toLowerCase()&&(a[3]!=s[3]||a[4]!=s[4]))return;for(l[u]=[],h[u]=[],i=0,n=D(a.length,s.length);n>i;i++)i in a&&(l[u][i]=a[i]),i in s&&(h[u][i]=s[i])
}return{from:l,to:h}};r._getContainer=function(t,e,i,n){var a;return a=null!=n||r.is(t,"object")?t:S.doc.getElementById(t),null!=a?a.tagName?null==e?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:e,height:i}:{container:1,x:t,y:e,width:i,height:n}:void 0},r.pathToRelative=Ne,r._engine={},r.path2curve=Re,r.matrix=function(t,e,r,i,n,a){return new d(t,e,r,i,n,a)},function(t){function e(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var r=q.sqrt(e(t));t[0]&&(t[0]/=r),t[1]&&(t[1]/=r)}t.add=function(t,e,r,i,n,a){var s,o,l,h,u=[[],[],[]],c=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],f=[[t,r,n],[e,i,a],[0,0,1]];for(t&&t instanceof d&&(f=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),s=0;3>s;s++)for(o=0;3>o;o++){for(h=0,l=0;3>l;l++)h+=c[s][l]*f[l][o];u[s][o]=h}this.a=u[0][0],this.b=u[1][0],this.c=u[0][1],this.d=u[1][1],this.e=u[0][2],this.f=u[1][2]},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new d(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new d(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){this.add(1,0,0,1,t,e)},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i)},t.rotate=function(t,e,i){t=r.rad(t),e=e||0,i=i||0;var n=+q.cos(t).toFixed(9),a=+q.sin(t).toFixed(9);this.add(n,a,-a,n,e,i),this.add(1,0,0,1,-e,-i)},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return+this[z.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return r.svg?"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return"progid:DXImageTransform.Microsoft.Matrix(M11="+this.get(0)+", M12="+this.get(2)+", M21="+this.get(1)+", M22="+this.get(3)+", Dx="+this.get(4)+", Dy="+this.get(5)+", sizingmethod='auto expand')"},t.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=q.sqrt(e(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=q.sqrt(e(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return 0>s?(t.rotate=r.deg(q.acos(s)),0>a&&(t.rotate=360-t.rotate)):t.rotate=r.deg(q.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[F]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?"t"+[e.dx,e.dy]:M)+(1!=e.scalex||1!=e.scaley?"s"+[e.scalex,e.scaley,0,0]:M)+(e.rotate?"r"+[e.rotate,0,0]:M)):"m"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(d.prototype);var Ve=navigator.userAgent.match(/Version\/(.*?)\s/)||navigator.userAgent.match(/Chrome\/(\d+)/);_.safari="Apple Computer, Inc."==navigator.vendor&&(Ve&&Ve[1]<4||"iP"==navigator.platform.slice(0,2))||"Google Inc."==navigator.vendor&&Ve&&Ve[1]<8?function(){var t=this.rect(-99,-99,this.width+99,this.height+99).attr({stroke:"none"});setTimeout(function(){t.remove()})}:fe;for(var Ye=function(){this.returnValue=!1},Ge=function(){return this.originalEvent.preventDefault()},We=function(){this.cancelBubble=!0},Xe=function(){return this.originalEvent.stopPropagation()},He=function(t){var e=S.doc.documentElement.scrollTop||S.doc.body.scrollTop,r=S.doc.documentElement.scrollLeft||S.doc.body.scrollLeft;return{x:t.clientX+r,y:t.clientY+e}},Ue=function(){return S.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=He(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),L&&I[e]){var a=function(e){for(var n=He(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;o>s;s++)if(e.targetTouches[s].target==t){e=e.targetTouches[s],e.originalEvent=a,e.preventDefault=Ge,e.stopPropagation=Xe;break}return r.call(i,e,n.x,n.y)};t.addEventListener(I[e],a,!1)}return function(){return t.removeEventListener(e,n,!1),L&&I[e]&&t.removeEventListener(I[e],n,!1),!0}}:S.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||S.win.event;var e=S.doc.documentElement.scrollTop||S.doc.body.scrollTop,n=S.doc.documentElement.scrollLeft||S.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||Ye,t.stopPropagation=t.stopPropagation||We,r.call(i,t,a,s)};t.attachEvent("on"+e,n);var a=function(){return t.detachEvent("on"+e,n),!0};return a}:void 0}(),$e=[],Ze=function(t){for(var r,i=t.clientX,n=t.clientY,a=S.doc.documentElement.scrollTop||S.doc.body.scrollTop,s=S.doc.documentElement.scrollLeft||S.doc.body.scrollLeft,o=$e.length;o--;){if(r=$e[o],L&&t.touches){for(var l,h=t.touches.length;h--;)if(l=t.touches[h],l.identifier==r.el._drag.id){i=l.clientX,n=l.clientY,(t.originalEvent?t.originalEvent:t).preventDefault();break}}else t.preventDefault();var u,c=r.el.node,f=c.nextSibling,p=c.parentNode,d=c.style.display;S.win.opera&&p.removeChild(c),c.style.display="none",u=r.el.paper.getElementByPoint(i,n),c.style.display=d,S.win.opera&&(f?p.insertBefore(c,f):p.appendChild(c)),u&&e("raphael.drag.over."+r.el.id,r.el,u),i+=s,n+=a,e("raphael.drag.move."+r.el.id,r.move_scope||r.el,i-r.el._drag.x,n-r.el._drag.y,i,n,t)}},Qe=function(t){r.unmousemove(Ze).unmouseup(Qe);for(var i,n=$e.length;n--;)i=$e[n],i.el._drag={},e("raphael.drag.end."+i.el.id,i.end_scope||i.start_scope||i.move_scope||i.el,t);$e=[]},Je=r.el={},Ke=R.length;Ke--;)!function(t){r[t]=Je[t]=function(e,i){return r.is(e,"function")&&(this.events=this.events||[],this.events.push({name:t,f:e,unbind:Ue(this.shape||this.node||S.doc,t,e,i||this)})),this},r["un"+t]=Je["un"+t]=function(e){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!r.is(e,"undefined")&&i[n].f!=e||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this}}(R[Ke]);Je.data=function(t,i){var n=ue[this.id]=ue[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(r.is(t,"object")){for(var a in t)t[B](a)&&this.data(a,t[a]);return this}return e("raphael.data.get."+this.id,this,n[t],t),n[t]}return n[t]=i,e("raphael.data.set."+this.id,this,i,t),this},Je.removeData=function(t){return null==t?ue[this.id]={}:ue[this.id]&&delete ue[this.id][t],this},Je.getData=function(){return i(ue[this.id]||{})},Je.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},Je.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var tr=[];Je.drag=function(t,i,n,a,s,o){function l(l){(l.originalEvent||l).preventDefault();var h=l.clientX,u=l.clientY,c=S.doc.documentElement.scrollTop||S.doc.body.scrollTop,f=S.doc.documentElement.scrollLeft||S.doc.body.scrollLeft;if(this._drag.id=l.identifier,L&&l.touches)for(var p,d=l.touches.length;d--;)if(p=l.touches[d],this._drag.id=p.identifier,p.identifier==this._drag.id){h=p.clientX,u=p.clientY;break}this._drag.x=h+f,this._drag.y=u+c,!$e.length&&r.mousemove(Ze).mouseup(Qe),$e.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&e.on("raphael.drag.start."+this.id,i),t&&e.on("raphael.drag.move."+this.id,t),n&&e.on("raphael.drag.end."+this.id,n),e("raphael.drag.start."+this.id,s||a||this,l.clientX+f,l.clientY+c,l)}return this._drag={},tr.push({el:this,start:l}),this.mousedown(l),this},Je.onDragOver=function(t){t?e.on("raphael.drag.over."+this.id,t):e.unbind("raphael.drag.over."+this.id)},Je.undrag=function(){for(var t=tr.length;t--;)tr[t].el==this&&(this.unmousedown(tr[t].start),tr.splice(t,1),e.unbind("raphael.drag.*."+this.id));!tr.length&&r.unmousemove(Ze).unmouseup(Qe),$e=[]},_.circle=function(t,e,i){var n=r._engine.circle(this,t||0,e||0,i||0);return this.__set__&&this.__set__.push(n),n},_.rect=function(t,e,i,n,a){var s=r._engine.rect(this,t||0,e||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},_.ellipse=function(t,e,i,n){var a=r._engine.ellipse(this,t||0,e||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},_.path=function(t){t&&!r.is(t,X)&&!r.is(t[0],H)&&(t+=M);var e=r._engine.path(r.format[N](r,arguments),this);return this.__set__&&this.__set__.push(e),e},_.image=function(t,e,i,n,a){var s=r._engine.image(this,t||"about:blank",e||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},_.text=function(t,e,i){var n=r._engine.text(this,t||0,e||0,z(i));return this.__set__&&this.__set__.push(n),n},_.set=function(t){!r.is(t,"array")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var e=new fr(t);return this.__set__&&this.__set__.push(e),e.paper=this,e.type="set",e},_.setStart=function(t){this.__set__=t||this.set()},_.setFinish=function(){var t=this.__set__;return delete this.__set__,t},_.setSize=function(t,e){return r._engine.setSize.call(this,t,e)},_.setViewBox=function(t,e,i,n,a){return r._engine.setViewBox.call(this,t,e,i,n,a)},_.top=_.bottom=null,_.raphael=r;var er=function(t){var e=t.getBoundingClientRect(),r=t.ownerDocument,i=r.body,n=r.documentElement,a=n.clientTop||i.clientTop||0,s=n.clientLeft||i.clientLeft||0,o=e.top+(S.win.pageYOffset||n.scrollTop||i.scrollTop)-a,l=e.left+(S.win.pageXOffset||n.scrollLeft||i.scrollLeft)-s;return{y:o,x:l}};_.getElementByPoint=function(t,e){var r=this,i=r.canvas,n=S.doc.elementFromPoint(t,e);if(S.win.opera&&"svg"==n.tagName){var a=er(i),s=i.createSVGRect();s.x=t-a.x,s.y=e-a.y,s.width=s.height=1;var o=i.getIntersectionList(s,null);o.length&&(n=o[o.length-1])}if(!n)return null;for(;n.parentNode&&n!=i.parentNode&&!n.raphael;)n=n.parentNode;return n==r.canvas.parentNode&&(n=i),n=n&&n.raphael?r.getById(n.raphaelid):null},_.getElementsByBBox=function(t){var e=this.set();return this.forEach(function(i){r.isBBoxIntersect(i.getBBox(),t)&&e.push(i)}),e},_.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next}return null},_.forEach=function(t,e){for(var r=this.bottom;r;){if(t.call(e,r)===!1)return this;r=r.next}return this},_.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i)}),r},Je.isPointInside=function(t,e){var i=this.realPath=ve[this.type](this);return this.attr("transform")&&this.attr("transform").length&&(i=r.transformPath(i,this.attr("transform"))),r.isPointInsidePath(i,t,e)},Je.getBBox=function(t){if(this.removed)return{};var e=this._;return t?((e.dirty||!e.bboxwt)&&(this.realPath=ve[this.type](this),e.bboxwt=Te(this.realPath),e.bboxwt.toString=g,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&((e.dirty||!this.realPath)&&(e.bboxwt=0,this.realPath=ve[this.type](this)),e.bbox=Te(xe(this.realPath,this.matrix)),e.bbox.toString=g,e.dirty=e.dirtyT=0),e.bbox)},Je.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},Je.glow=function(t){if("text"==this.type)return null;t=t||{};var e={width:(t.width||10)+(+this.attr("stroke-width")||1),fill:t.fill||!1,opacity:t.opacity||.5,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||"#000"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||ve[this.type](this);a=this.matrix?xe(a,this.matrix):a;for(var s=1;r+1>s;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:"none","stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var rr=function(t,e,i,n,a,s,o,l,c){return null==c?h(t,e,i,n,a,s,o,l):r.findDotsAtSegment(t,e,i,n,a,s,o,l,u(t,e,i,n,a,s,o,l,c))},ir=function(t,e){return function(i,n,a){i=Re(i);for(var s,o,l,h,u,c="",f={},p=0,d=0,g=i.length;g>d;d++){if(l=i[d],"M"==l[0])s=+l[1],o=+l[2];else{if(h=rr(s,o,l[1],l[2],l[3],l[4],l[5],l[6]),p+h>n){if(e&&!f.start){if(u=rr(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),c+=["C"+u.start.x,u.start.y,u.m.x,u.m.y,u.x,u.y],a)return c;f.start=c,c=["M"+u.x,u.y+"C"+u.n.x,u.n.y,u.end.x,u.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!e)return u=rr(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),{x:u.x,y:u.y,alpha:u.alpha}}p+=h,s=+l[5],o=+l[6]}c+=l.shift()+l}return f.end=c,u=t?p:e?f:r.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1),u.alpha&&(u={x:u.x,y:u.y,alpha:u.alpha}),u}},nr=ir(1),ar=ir(),sr=ir(0,1);r.getTotalLength=nr,r.getPointAtLength=ar,r.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return sr(t,e).end;var i=sr(t,r,1);return e?sr(i,e).end:i},Je.getTotalLength=function(){var t=this.getPath();return t?this.node.getTotalLength?this.node.getTotalLength():nr(t):void 0},Je.getPointAtLength=function(t){var e=this.getPath();return e?ar(e,t):void 0},Je.getPath=function(){var t,e=r._getPath[this.type];return"text"!=this.type&&"set"!=this.type?(e&&(t=e(this)),t):void 0},Je.getSubpath=function(t,e){var i=this.getPath();return i?r.getSubpath(i,t,e):void 0};var or=r.easing_formulas={linear:function(t){return t},"<":function(t){return Y(t,1.7)},">":function(t){return Y(t,.48)},"<>":function(t){var e=.48-t/1.04,r=q.sqrt(.1734+e*e),i=r-e,n=Y(V(i),1/3)*(0>i?-1:1),a=-r-e,s=Y(V(a),1/3)*(0>a?-1:1),o=n+s+.5;return 3*(1-o)*o*o+o*o*o},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){t-=1;var e=1.70158;return t*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:Y(2,-10*t)*q.sin(2*(t-.075)*G/.3)+1},bounce:function(t){var e,r=7.5625,i=2.75;return 1/i>t?e=r*t*t:2/i>t?(t-=1.5/i,e=r*t*t+.75):2.5/i>t?(t-=2.25/i,e=r*t*t+.9375):(t-=2.625/i,e=r*t*t+.984375),e}};or.easeIn=or["ease-in"]=or["<"],or.easeOut=or["ease-out"]=or[">"],or.easeInOut=or["ease-in-out"]=or["<>"],or["back-in"]=or.backIn,or["back-out"]=or.backOut;var lr=[],hr=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||t.msRequestAnimationFrame||function(t){setTimeout(t,16)},ur=function(){for(var t=+new Date,i=0;i<lr.length;i++){var n=lr[i];if(!n.el.removed&&!n.paused){var a,s,o=t-n.start,l=n.ms,h=n.easing,u=n.from,c=n.diff,f=n.to,p=(n.t,n.el),d={},g={};if(n.initstatus?(o=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*l,n.status=n.initstatus,delete n.initstatus,n.stop&&lr.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(o/l))/n.anim.top,!(0>o))if(l>o){var v=h(o/l);for(var x in u)if(u[B](x)){switch(ie[x]){case W:a=+u[x]+v*l*c[x];break;case"colour":a="rgb("+[cr(J(u[x].r+v*l*c[x].r)),cr(J(u[x].g+v*l*c[x].g)),cr(J(u[x].b+v*l*c[x].b))].join(",")+")";break;case"path":a=[];for(var m=0,b=u[x].length;b>m;m++){a[m]=[u[x][m][0]];for(var _=1,w=u[x][m].length;w>_;_++)a[m][_]=+u[x][m][_]+v*l*c[x][m][_];a[m]=a[m].join(P)}a=a.join(P);break;case"transform":if(c[x].real)for(a=[],m=0,b=u[x].length;b>m;m++)for(a[m]=[u[x][m][0]],_=1,w=u[x][m].length;w>_;_++)a[m][_]=u[x][m][_]+v*l*c[x][m][_];else{var k=function(t){return+u[x][t]+v*l*c[x][t]};a=[["m",k(0),k(1),k(2),k(3),k(4),k(5)]]}break;case"csv":if("clip-rect"==x)for(a=[],m=4;m--;)a[m]=+u[x][m]+v*l*c[x][m];break;default:var C=[][E](u[x]);for(a=[],m=p.paper.customAttributes[x].length;m--;)a[m]=+C[m]+v*l*c[x][m]}d[x]=a}p.attr(d),function(t,r,i){setTimeout(function(){e("raphael.anim.frame."+t,r,i)})}(p.id,p,n.anim)}else{if(function(t,i,n){setTimeout(function(){e("raphael.anim.frame."+i.id,i,n),e("raphael.anim.finish."+i.id,i,n),r.is(t,"function")&&t.call(i)})}(n.callback,p,n.anim),p.attr(f),lr.splice(i--,1),n.repeat>1&&!n.next){for(s in f)f[B](s)&&(g[s]=n.totalOrigin[s]);n.el.attr(g),y(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1)}n.next&&!n.stop&&y(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat)}}}r.svg&&p&&p.paper&&p.paper.safari(),lr.length&&hr(ur)},cr=function(t){return t>255?255:0>t?0:t};Je.animateWith=function(t,e,i,n,a,s){var o=this;if(o.removed)return s&&s.call(o),o;var l=i instanceof x?i:r.animation(i,n,a,s);y(l,o,l.percents[0],null,o.attr());for(var h=0,u=lr.length;u>h;h++)if(lr[h].anim==e&&lr[h].el==t){lr[u-1].start=lr[h].start;break}return o},Je.onAnimation=function(t){return t?e.on("raphael.anim.frame."+this.id,t):e.unbind("raphael.anim.frame."+this.id),this},x.prototype.delay=function(t){var e=new x(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},x.prototype.repeat=function(t){var e=new x(this.anim,this.ms);return e.del=this.del,e.times=q.floor(D(t,0))||1,e},r.animation=function(t,e,i,n){if(t instanceof x)return t;(r.is(i,"function")||!i)&&(n=n||i||null,i=null),t=Object(t),e=+e||0;var a,s,o={};for(s in t)t[B](s)&&K(s)!=s&&K(s)+"%"!=s&&(a=!0,o[s]=t[s]);return a?(i&&(o.easing=i),n&&(o.callback=n),new x({100:o},e)):new x(t,e)},Je.animate=function(t,e,i,n){var a=this;if(a.removed)return n&&n.call(a),a;var s=t instanceof x?t:r.animation(t,e,i,n);return y(s,a,s.percents[0],null,a.attr()),a},Je.setTime=function(t,e){return t&&null!=e&&this.status(t,O(e,t.ms)/t.ms),this},Je.status=function(t,e){var r,i,n=[],a=0;if(null!=e)return y(t,this,-1,O(e,1)),this;for(r=lr.length;r>a;a++)if(i=lr[a],i.el.id==this.id&&(!t||i.anim==t)){if(t)return i.status;n.push({anim:i.anim,status:i.status})}return t?0:n},Je.pause=function(t){for(var r=0;r<lr.length;r++)lr[r].el.id!=this.id||t&&lr[r].anim!=t||e("raphael.anim.pause."+this.id,this,lr[r].anim)!==!1&&(lr[r].paused=!0);return this},Je.resume=function(t){for(var r=0;r<lr.length;r++)if(lr[r].el.id==this.id&&(!t||lr[r].anim==t)){var i=lr[r];e("raphael.anim.resume."+this.id,this,i.anim)!==!1&&(delete i.paused,this.status(i.anim,i.status))}return this},Je.stop=function(t){for(var r=0;r<lr.length;r++)lr[r].el.id!=this.id||t&&lr[r].anim!=t||e("raphael.anim.stop."+this.id,this,lr[r].anim)!==!1&&lr.splice(r--,1);return this},e.on("raphael.remove",m),e.on("raphael.clear",m),Je.toString=function(){return"RaphaÃ«lâ€™s object"};var fr=function(t){if(this.items=[],this.length=0,this.type="set",t)for(var e=0,r=t.length;r>e;e++)!t[e]||t[e].constructor!=Je.constructor&&t[e].constructor!=fr||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},pr=fr.prototype;pr.push=function(){for(var t,e,r=0,i=arguments.length;i>r;r++)t=arguments[r],!t||t.constructor!=Je.constructor&&t.constructor!=fr||(e=this.items.length,this[e]=this.items[e]=t,this.length++);return this},pr.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},pr.forEach=function(t,e){for(var r=0,i=this.items.length;i>r;r++)if(t.call(e,this.items[r],r)===!1)return this;return this};for(var dr in Je)Je[B](dr)&&(pr[dr]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][N](r,e)})}}(dr));return pr.attr=function(t,e){if(t&&r.is(t,H)&&r.is(t[0],"object"))for(var i=0,n=t.length;n>i;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;s>a;a++)this.items[a].attr(t,e);return this},pr.clear=function(){for(;this.length;)this.pop()},pr.splice=function(t,e){t=0>t?D(this.length+t,0):t,e=D(0,O(this.length-t,e));var r,i=[],n=[],a=[];for(r=2;r<arguments.length;r++)a.push(arguments[r]);for(r=0;e>r;r++)n.push(this[t+r]);for(;r<this.length-t;r++)i.push(this[t+r]);var s=a.length;for(r=0;r<s+i.length;r++)this.items[t+r]=this[t+r]=s>r?a[r]:i[r-s];for(r=this.items.length=this.length-=e-s;this[r];)delete this[r++];return new fr(n)},pr.exclude=function(t){for(var e=0,r=this.length;r>e;e++)if(this[e]==t)return this.splice(e,1),!0},pr.animate=function(t,e,i,n){(r.is(i,"function")||!i)&&(n=i||null);var a,s,o=this.items.length,l=o,h=this;if(!o)return this;n&&(s=function(){!--o&&n.call(h)}),i=r.is(i,X)?i:s;var u=r.animation(t,e,i,s);for(a=this.items[--l].animate(u);l--;)this.items[l]&&!this.items[l].removed&&this.items[l].animateWith(a,u,u),this.items[l]&&!this.items[l].removed||o--;return this},pr.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},pr.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height)}return t=O[N](0,t),e=O[N](0,e),r=D[N](0,r),i=D[N](0,i),{x:t,y:e,x2:r,y2:i,width:r-t,height:i-e}},pr.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;r>e;e++)t.push(this.items[e].clone());return t},pr.toString=function(){return"RaphaÃ«lâ€˜s set"},pr.glow=function(t){var e=this.paper.set();return this.forEach(function(r){var i=r.glow(t);null!=i&&i.forEach(function(t){e.push(t)})}),e},pr.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){return i.isPointInside(t,e)?(console.log("runned"),r=!0,!1):void 0}),r},r.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face["font-family"];for(var i in t.face)t.face[B](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg){e.face["units-per-em"]=te(t.face["units-per-em"],10);for(var n in t.glyphs)if(t.glyphs[B](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&"M"+a.d.replace(/[mlcxtrv]/g,function(t){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[t]||"M"})+"z"},a.k)for(var s in a.k)a[B](s)&&(e.glyphs[n].k[s]=a.k[s])}}return t},_.getFont=function(t,e,i,n){if(n=n||"normal",i=i||"normal",e=+e||{normal:400,bold:700,lighter:300,bolder:800}[e]||400,r.fonts){var a=r.fonts[t];if(!a){var s=new RegExp("(^|\\s)"+t.replace(/[^\w\d\s+!~.:_-]/g,M)+"(\\s|$)","i");for(var o in r.fonts)if(r.fonts[B](o)&&s.test(o)){a=r.fonts[o];break}}var l;if(a)for(var h=0,u=a.length;u>h&&(l=a[h],l.face["font-weight"]!=e||l.face["font-style"]!=i&&l.face["font-style"]||l.face["font-stretch"]!=n);h++);return l}},_.print=function(t,e,i,n,a,s,o,l){s=s||"middle",o=D(O(o||0,1),-1),l=D(O(l||1,3),1);var h,u=z(i)[F](M),c=0,f=0,p=M;if(r.is(n,"string")&&(n=this.getFont(n)),n){h=(a||16)/n.face["units-per-em"];for(var d=n.face.bbox[F](w),g=+d[0],v=d[3]-d[1],x=0,y=+d[1]+("baseline"==s?v+ +n.face.descent:v/2),m=0,b=u.length;b>m;m++){if("\n"==u[m])c=0,k=0,f=0,x+=v*l;else{var _=f&&n.glyphs[u[m-1]]||{},k=n.glyphs[u[m]];c+=f?(_.w||n.w)+(_.k&&_.k[u[m]]||0)+n.w*o:0,f=1}k&&k.d&&(p+=r.transformPath(k.d,["t",c*h,x*h,"s",h,h,g,y,"t",(t-g)/h,(e-y)/h]))}}return this.path(p).attr({fill:"#000",stroke:"none"})},_.add=function(t){if(r.is(t,"array"))for(var e,i=this.set(),n=0,a=t.length;a>n;n++)e=t[n]||{},k[B](e.type)&&i.push(this[e.type]().attr(e));return i},r.format=function(t,e){var i=r.is(e,H)?[0][E](e):arguments;return t&&r.is(t,X)&&i.length-1&&(t=t.replace(C,function(t,e){return null==i[++e]?M:i[e]})),t||M},r.fullfill=function(){var t=/\{([^\}]+)\}/g,e=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,r=function(t,r,i){var n=i;return r.replace(e,function(t,e,r,i,a){e=e||i,n&&(e in n&&(n=n[e]),"function"==typeof n&&a&&(n=n()))}),n=(null==n||n==i?t:n)+""};return function(e,i){return String(e).replace(t,function(t,e){return r(t,e,i)})}}(),r.ninja=function(){return T.was?S.win.Raphael=T.is:delete Raphael,r},r.st=pr,function(t,e,i){function n(){/in/.test(t.readyState)?setTimeout(n,9):r.eve("raphael.DOMload")}null==t.readyState&&t.addEventListener&&(t.addEventListener(e,i=function(){t.removeEventListener(e,i,!1),t.readyState="complete"},!1),t.readyState="loading"),n()}(document,"DOMContentLoaded"),e.on("raphael.DOMload",function(){b=!0}),function(){if(r.svg){var t="hasOwnProperty",e=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=r.eve,c="",f=" ",p="http://www.w3.org/1999/xlink",d={block:"M5,0 0,2.5 5,5z",classic:"M5,0 0,2.5 5,5 3.5,3 3.5,2z",diamond:"M2.5,0 5,2.5 2.5,5 0,2.5z",open:"M6,1 1,3.5 6,6",oval:"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"},g={};r.toString=function(){return"Your browser supports SVG.\nYou are running RaphaÃ«l "+this.version};var v=function(i,n){if(n){"string"==typeof i&&(i=v(i));for(var a in n)n[t](a)&&("xlink:"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),e(n[a])):i.setAttribute(a,e(n[a])))}else i=r._g.doc.createElementNS("http://www.w3.org/2000/svg",i),i.style&&(i.style.webkitTapHighlightColor="rgba(0,0,0,0)");return i},x=function(t,n){var h="linear",u=t.id+n,f=.5,p=.5,d=t.node,g=t.paper,x=d.style,y=r._g.doc.getElementById(u);if(!y){if(n=e(n).replace(r._radial_gradient,function(t,e,r){if(h="radial",e&&r){f=i(e),p=i(r);var n=2*(p>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n)}return c}),n=n.split(/\s*\-\s*/),"linear"==h){var m=n.shift();if(m=-i(m),isNaN(m))return null;var b=[0,0,a.cos(r.rad(m)),a.sin(r.rad(m))],_=1/(s(o(b[2]),o(b[3]))||1);b[2]*=_,b[3]*=_,b[2]<0&&(b[0]=-b[2],b[2]=0),b[3]<0&&(b[1]=-b[3],b[3]=0)}var w=r._parseDots(n);if(!w)return null;if(u=u.replace(/[\(\)\s,\xb0#]/g,"_"),t.gradient&&u!=t.gradient.id&&(g.defs.removeChild(t.gradient),delete t.gradient),!t.gradient){y=v(h+"Gradient",{id:u}),t.gradient=y,v(y,"radial"==h?{fx:f,fy:p}:{x1:b[0],y1:b[1],x2:b[2],y2:b[3],gradientTransform:t.matrix.invert()}),g.defs.appendChild(y);for(var k=0,C=w.length;C>k;k++)y.appendChild(v("stop",{offset:w[k].offset?w[k].offset:k?"100%":"0%","stop-color":w[k].color||"#fff"}))}}return v(d,{fill:"url(#"+u+")",opacity:1,"fill-opacity":1}),x.fill=c,x.opacity=1,x.fillOpacity=1,1},y=function(t){var e=t.getBBox(1);v(t.pattern,{patternTransform:t.matrix.invert()+" translate("+e.x+","+e.y+")"})},m=function(i,n,a){if("path"==i.type){for(var s,o,l,h,u,f=e(n).toLowerCase().split("-"),p=i.paper,x=a?"end":"start",y=i.node,m=i.attrs,b=m["stroke-width"],_=f.length,w="classic",k=3,C=3,B=5;_--;)switch(f[_]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":w=f[_];break;case"wide":C=5;break;case"narrow":C=2;break;case"long":k=5;break;case"short":k=2}if("open"==w?(k+=2,C+=2,B+=2,l=1,h=a?4:1,u={fill:"none",stroke:m.stroke}):(h=l=k/2,u={fill:m.stroke,stroke:"none"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},"none"!=w){var S="raphael-marker-"+w,T="raphael-marker-"+x+w+k+C;r._g.doc.getElementById(S)?g[S]++:(p.defs.appendChild(v(v("path"),{"stroke-linecap":"round",d:d[w],id:S})),g[S]=1);var A,N=r._g.doc.getElementById(T);N?(g[T]++,A=N.getElementsByTagName("use")[0]):(N=v(v("marker"),{id:T,markerHeight:C,markerWidth:k,orient:"auto",refX:h,refY:C/2}),A=v(v("use"),{"xlink:href":"#"+S,transform:(a?"rotate(180 "+k/2+" "+C/2+") ":c)+"scale("+k/B+","+C/B+")","stroke-width":(1/((k/B+C/B)/2)).toFixed(4)}),N.appendChild(A),p.defs.appendChild(N),g[T]=1),v(A,u);var E=l*("diamond"!=w&&"oval"!=w);a?(s=i._.arrows.startdx*b||0,o=r.getTotalLength(m.path)-E*b):(s=E*b,o=r.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),u={},u["marker-"+x]="url(#"+T+")",(o||s)&&(u.d=r.getSubpath(m.path,s,o)),v(y,u),i._.arrows[x+"Path"]=S,i._.arrows[x+"Marker"]=T,i._.arrows[x+"dx"]=E,i._.arrows[x+"Type"]=w,i._.arrows[x+"String"]=n}else a?(s=i._.arrows.startdx*b||0,o=r.getTotalLength(m.path)-s):(s=0,o=r.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),i._.arrows[x+"Path"]&&v(y,{d:r.getSubpath(m.path,s,o)}),delete i._.arrows[x+"Path"],delete i._.arrows[x+"Marker"],delete i._.arrows[x+"dx"],delete i._.arrows[x+"Type"],delete i._.arrows[x+"String"];for(u in g)if(g[t](u)&&!g[u]){var L=r._g.doc.getElementById(u);L&&L.parentNode.removeChild(L)}}},b={"":[0],none:[0],"-":[3,1],".":[1,1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,3,1,3],"--..":[8,3,1,3,1,3]},_=function(t,r,i){if(r=b[e(r).toLowerCase()]){for(var n=t.attrs["stroke-width"]||"1",a={round:n,square:n,butt:0}[t.attrs["stroke-linecap"]||i["stroke-linecap"]]||0,s=[],o=r.length;o--;)s[o]=r[o]*n+(o%2?1:-1)*a;v(t.node,{"stroke-dasharray":s.join(",")})}},w=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;l.style.visibility="hidden";for(var d in a)if(a[t](d)){if(!r._availableAttrs[t](d))continue;var g=a[d];switch(u[d]=g,d){case"blur":i.blur(g);break;case"href":case"title":var b=v("title"),w=r._g.doc.createTextNode(g);b.appendChild(w),l.appendChild(b);break;case"target":var k=l.parentNode;if("a"!=k.tagName.toLowerCase()){var b=v("a");k.insertBefore(b,l),b.appendChild(l),k=b}"target"==d?k.setAttributeNS(p,"show","blank"==g?"new":g):k.setAttributeNS(p,d,g);break;case"cursor":l.style.cursor=g;break;case"transform":i.transform(g);break;case"arrow-start":m(i,g);break;case"arrow-end":m(i,g,1);break;case"clip-rect":var B=e(g).split(h);if(4==B.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var S=v("clipPath"),T=v("rect");S.id=r.createUUID(),v(T,{x:B[0],y:B[1],width:B[2],height:B[3]}),S.appendChild(T),i.paper.defs.appendChild(S),v(l,{"clip-path":"url(#"+S.id+")"}),i.clip=T}if(!g){var A=l.getAttribute("clip-path");if(A){var N=r._g.doc.getElementById(A.replace(/(^url\(#|\)$)/g,c));N&&N.parentNode.removeChild(N),v(l,{"clip-path":c}),delete i.clip}}break;case"path":"path"==i.type&&(v(l,{d:g?u.path=r._pathToAbsolute(g):"M0,0"}),i._.dirty=1,i._.arrows&&("startString"in i._.arrows&&m(i,i._.arrows.startString),"endString"in i._.arrows&&m(i,i._.arrows.endString,1)));break;case"width":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d="x",g=u.x;case"x":u.fx&&(g=-u.x-(u.width||0));case"rx":if("rx"==d&&"rect"==i.type)break;case"cx":l.setAttribute(d,g),i.pattern&&y(i),i._.dirty=1;break;case"height":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d="y",g=u.y;case"y":u.fy&&(g=-u.y-(u.height||0));case"ry":if("ry"==d&&"rect"==i.type)break;case"cy":l.setAttribute(d,g),i.pattern&&y(i),i._.dirty=1;break;case"r":"rect"==i.type?v(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case"src":"image"==i.type&&l.setAttributeNS(p,"href",g);break;case"stroke-width":(1!=i._.sx||1!=i._.sy)&&(g/=s(o(i._.sx),o(i._.sy))||1),i.paper._vbSize&&(g*=i.paper._vbSize),l.setAttribute(d,g),u["stroke-dasharray"]&&_(i,u["stroke-dasharray"],a),i._.arrows&&("startString"in i._.arrows&&m(i,i._.arrows.startString),"endString"in i._.arrows&&m(i,i._.arrows.endString,1));break;case"stroke-dasharray":_(i,g,a);break;case"fill":var E=e(g).match(r._ISURL);if(E){S=v("pattern");var L=v("image");S.id=r.createUUID(),v(S,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1}),v(L,{x:0,y:0,"xlink:href":E[1]}),S.appendChild(L),function(t){r._preload(E[1],function(){var e=this.offsetWidth,r=this.offsetHeight;v(t,{width:e,height:r}),v(L,{width:e,height:r}),i.paper.safari()})}(S),i.paper.defs.appendChild(S),v(l,{fill:"url(#"+S.id+")"}),i.pattern=S,i.pattern&&y(i);break}var M=r.getRGB(g);if(M.error){if(("circle"==i.type||"ellipse"==i.type||"r"!=e(g).charAt())&&x(i,g)){if("opacity"in u||"fill-opacity"in u){var P=r._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g,c));if(P){var z=P.getElementsByTagName("stop");v(z[z.length-1],{"stop-opacity":("opacity"in u?u.opacity:1)*("fill-opacity"in u?u["fill-opacity"]:1)})}}u.gradient=g,u.fill="none";break}}else delete a.gradient,delete u.gradient,!r.is(u.opacity,"undefined")&&r.is(a.opacity,"undefined")&&v(l,{opacity:u.opacity}),!r.is(u["fill-opacity"],"undefined")&&r.is(a["fill-opacity"],"undefined")&&v(l,{"fill-opacity":u["fill-opacity"]});M[t]("opacity")&&v(l,{"fill-opacity":M.opacity>1?M.opacity/100:M.opacity});case"stroke":M=r.getRGB(g),l.setAttribute(d,M.hex),"stroke"==d&&M[t]("opacity")&&v(l,{"stroke-opacity":M.opacity>1?M.opacity/100:M.opacity}),"stroke"==d&&i._.arrows&&("startString"in i._.arrows&&m(i,i._.arrows.startString),"endString"in i._.arrows&&m(i,i._.arrows.endString,1));break;case"gradient":("circle"==i.type||"ellipse"==i.type||"r"!=e(g).charAt())&&x(i,g);break;case"opacity":u.gradient&&!u[t]("stroke-opacity")&&v(l,{"stroke-opacity":g>1?g/100:g});case"fill-opacity":if(u.gradient){P=r._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g,c)),P&&(z=P.getElementsByTagName("stop"),v(z[z.length-1],{"stop-opacity":g}));break}default:"font-size"==d&&(g=n(g,10)+"px");var F=d.replace(/(\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[F]=g,i._.dirty=1,l.setAttribute(d,g)}}C(i,a),l.style.visibility=f},k=1.2,C=function(i,a){if("text"==i.type&&(a[t]("text")||a[t]("font")||a[t]("font-size")||a[t]("x")||a[t]("y"))){var s=i.attrs,o=i.node,l=o.firstChild?n(r._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue("font-size"),10):10;
if(a[t]("text")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h,u=e(a.text).split("\n"),f=[],p=0,d=u.length;d>p;p++)h=v("tspan"),p&&v(h,{dy:l*k,x:s.x}),h.appendChild(r._g.doc.createTextNode(u[p])),o.appendChild(h),f[p]=h}else for(f=o.getElementsByTagName("tspan"),p=0,d=f.length;d>p;p++)p?v(f[p],{dy:l*k,x:s.x}):v(f[0],{dy:0});v(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),x=s.y-(g.y+g.height/2);x&&r.is(x,"finite")&&v(f[0],{dy:x})}},B=function(t,e){this[0]=this.node=t,t.raphael=!0,this.id=r._oid++,t.raphaelid=this.id,this.matrix=r.matrix(),this.realPath=null,this.paper=e,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!e.bottom&&(e.bottom=this),this.prev=e.top,e.top&&(e.top.next=this),e.top=this,this.next=null},S=r.el;B.prototype=S,S.constructor=B,r._engine.path=function(t,e){var r=v("path");e.canvas&&e.canvas.appendChild(r);var i=new B(r,e);return i.type="path",w(i,{fill:"none",stroke:"#000",path:t}),i},S.rotate=function(t,r,n){if(this.removed)return this;if(t=e(t).split(h),t.length-1&&(r=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(r=n),null==r||null==n){var a=this.getBBox(1);r=a.x+a.width/2,n=a.y+a.height/2}return this.transform(this._.transform.concat([["r",t,r,n]])),this},S.scale=function(t,r,n,a){if(this.removed)return this;if(t=e(t).split(h),t.length-1&&(r=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==r&&(r=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([["s",t,r,n,a]])),this},S.translate=function(t,r){return this.removed?this:(t=e(t).split(h),t.length-1&&(r=i(t[1])),t=i(t[0])||0,r=+r||0,this.transform(this._.transform.concat([["t",t,r]])),this)},S.transform=function(e){var i=this._;if(null==e)return i.transform;if(r._extractTransform(this,e),this.clip&&v(this.clip,{transform:this.matrix.invert()}),this.pattern&&y(this),this.node&&v(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[t]("stroke-width")?this.attrs["stroke-width"]:1;this.attr({"stroke-width":n})}return this},S.hide=function(){return!this.removed&&this.paper.safari(this.node.style.display="none"),this},S.show=function(){return!this.removed&&this.paper.safari(this.node.style.display=""),this},S.remove=function(){if(!this.removed&&this.node.parentNode){var t=this.paper;t.__set__&&t.__set__.exclude(this),u.unbind("raphael.*.*."+this.id),this.gradient&&t.defs.removeChild(this.gradient),r._tear(this,t),"a"==this.node.parentNode.tagName.toLowerCase()?this.node.parentNode.parentNode.removeChild(this.node.parentNode):this.node.parentNode.removeChild(this.node);for(var e in this)this[e]="function"==typeof this[e]?r._removedFactory(e):null;this.removed=!0}},S._getBBox=function(){if("none"==this.node.style.display){this.show();var t=!0}var e={};try{e=this.node.getBBox()}catch(r){}finally{e=e||{}}return t&&this.hide(),e},S.attr=function(e,i){if(this.removed)return this;if(null==e){var n={};for(var a in this.attrs)this.attrs[t](a)&&(n[a]=this.attrs[a]);return n.gradient&&"none"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&r.is(e,"string")){if("fill"==e&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if("transform"==e)return this._.transform;for(var s=e.split(h),o={},l=0,c=s.length;c>l;l++)e=s[l],o[e]=e in this.attrs?this.attrs[e]:r.is(this.paper.customAttributes[e],"function")?this.paper.customAttributes[e].def:r._availableAttrs[e];return c-1?o:o[s[0]]}if(null==i&&r.is(e,"array")){for(o={},l=0,c=e.length;c>l;l++)o[e[l]]=this.attr(e[l]);return o}if(null!=i){var f={};f[e]=i}else null!=e&&r.is(e,"object")&&(f=e);for(var p in f)u("raphael.attr."+p+"."+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[t](p)&&f[t](p)&&r.is(this.paper.customAttributes[p],"function")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));this.attrs[p]=f[p];for(var g in d)d[t](g)&&(f[g]=d[g])}return w(this,f),this},S.toFront=function(){if(this.removed)return this;"a"==this.node.parentNode.tagName.toLowerCase()?this.node.parentNode.parentNode.appendChild(this.node.parentNode):this.node.parentNode.appendChild(this.node);var t=this.paper;return t.top!=this&&r._tofront(this,t),this},S.toBack=function(){if(this.removed)return this;var t=this.node.parentNode;return"a"==t.tagName.toLowerCase()?t.parentNode.insertBefore(this.node.parentNode,this.node.parentNode.parentNode.firstChild):t.firstChild!=this.node&&t.insertBefore(this.node,this.node.parentNode.firstChild),r._toback(this,this.paper),this.paper,this},S.insertAfter=function(t){if(this.removed)return this;var e=t.node||t[t.length-1].node;return e.nextSibling?e.parentNode.insertBefore(this.node,e.nextSibling):e.parentNode.appendChild(this.node),r._insertafter(this,t,this.paper),this},S.insertBefore=function(t){if(this.removed)return this;var e=t.node||t[0].node;return e.parentNode.insertBefore(this.node,e),r._insertbefore(this,t,this.paper),this},S.blur=function(t){var e=this;if(0!==+t){var i=v("filter"),n=v("feGaussianBlur");e.attrs.blur=t,i.id=r.createUUID(),v(n,{stdDeviation:+t||1.5}),i.appendChild(n),e.paper.defs.appendChild(i),e._blur=i,v(e.node,{filter:"url(#"+i.id+")"})}else e._blur&&(e._blur.parentNode.removeChild(e._blur),delete e._blur,delete e.attrs.blur),e.node.removeAttribute("filter");return e},r._engine.circle=function(t,e,r,i){var n=v("circle");t.canvas&&t.canvas.appendChild(n);var a=new B(n,t);return a.attrs={cx:e,cy:r,r:i,fill:"none",stroke:"#000"},a.type="circle",v(n,a.attrs),a},r._engine.rect=function(t,e,r,i,n,a){var s=v("rect");t.canvas&&t.canvas.appendChild(s);var o=new B(s,t);return o.attrs={x:e,y:r,width:i,height:n,r:a||0,rx:a||0,ry:a||0,fill:"none",stroke:"#000"},o.type="rect",v(s,o.attrs),o},r._engine.ellipse=function(t,e,r,i,n){var a=v("ellipse");t.canvas&&t.canvas.appendChild(a);var s=new B(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:"none",stroke:"#000"},s.type="ellipse",v(a,s.attrs),s},r._engine.image=function(t,e,r,i,n,a){var s=v("image");v(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:"none"}),s.setAttributeNS(p,"href",e),t.canvas&&t.canvas.appendChild(s);var o=new B(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type="image",o},r._engine.text=function(t,e,i,n){var a=v("text");t.canvas&&t.canvas.appendChild(a);var s=new B(a,t);return s.attrs={x:e,y:i,"text-anchor":"middle",text:n,font:r._availableAttrs.font,stroke:"none",fill:"#000"},s.type="text",w(s,s.attrs),s},r._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute("width",this.width),this.canvas.setAttribute("height",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},r._engine.create=function(){var t=r._getContainer.apply(0,arguments),e=t&&t.container,i=t.x,n=t.y,a=t.width,s=t.height;if(!e)throw new Error("SVG container not found.");var o,l=v("svg"),h="overflow:hidden;";return i=i||0,n=n||0,a=a||512,s=s||342,v(l,{height:s,version:1.1,width:a,xmlns:"http://www.w3.org/2000/svg"}),1==e?(l.style.cssText=h+"position:absolute;left:"+i+"px;top:"+n+"px",r._g.doc.body.appendChild(l),o=1):(l.style.cssText=h+"position:relative",e.firstChild?e.insertBefore(l,e.firstChild):e.appendChild(l)),e=new r._Paper,e.width=a,e.height=s,e.canvas=l,e.clear(),e._left=e._top=0,o&&(e.renderfix=function(){}),e.renderfix(),e},r._engine.setViewBox=function(t,e,r,i,n){u("raphael.setViewBox",this,this._viewBox,[t,e,r,i,n]);var a,o,l=s(r/this.width,i/this.height),h=this.top,c=n?"meet":"xMinYMin";for(null==t?(this._vbSize&&(l=1),delete this._vbSize,a="0 0 "+this.width+f+this.height):(this._vbSize=l,a=t+f+e+f+r+f+i),v(this.canvas,{viewBox:a,preserveAspectRatio:c});l&&h;)o="stroke-width"in h.attrs?h.attrs["stroke-width"]:1,h.attr({"stroke-width":o}),h._.dirty=1,h._.dirtyT=1,h=h.prev;return this._viewBox=[t,e,r,i,!!n],this},r.prototype.renderfix=function(){var t,e=this.canvas,r=e.style;try{t=e.getScreenCTM()||e.createSVGMatrix()}catch(i){t=e.createSVGMatrix()}var n=-t.e%1,a=-t.f%1;(n||a)&&(n&&(this._left=(this._left+n)%1,r.left=this._left+"px"),a&&(this._top=(this._top+a)%1,r.top=this._top+"px"))},r.prototype.clear=function(){r.eve("raphael.clear",this);for(var t=this.canvas;t.firstChild;)t.removeChild(t.firstChild);this.bottom=this.top=null,(this.desc=v("desc")).appendChild(r._g.doc.createTextNode("Created with RaphaÃ«l "+r.version)),t.appendChild(this.desc),t.appendChild(this.defs=v("defs"))},r.prototype.remove=function(){u("raphael.remove",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var t in this)this[t]="function"==typeof this[t]?r._removedFactory(t):null};var T=r.st;for(var A in S)S[t](A)&&!T[t](A)&&(T[A]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(A))}}(),function(){if(r.vml){var t="hasOwnProperty",e=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h="fill",u=/[, ]+/,c=r.eve,f=" progid:DXImageTransform.Microsoft",p=" ",d="",g={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},v=/([clmz]),?([^clmz]*)/gi,x=/ progid:\S+Blur\([^\)]+\)/g,y=/-?[^,\s-]+/g,m="position:absolute;left:0;top:0;width:1px;height:1px",b=21600,_={path:1,rect:1,image:1},w={circle:1,ellipse:1},k=function(t){var i=/[ahqstv]/gi,n=r._pathToAbsolute;if(e(t).match(i)&&(n=r._path2curve),i=/[clmz]/g,n==r._pathToAbsolute&&!e(t).match(i)){var s=e(t).replace(v,function(t,e,r){var i=[],n="m"==e.toLowerCase(),s=g[e];return r.replace(y,function(t){n&&2==i.length&&(s+=i+g["m"==e?"l":"L"],i=[]),i.push(a(t*b))}),s+i});return s}var o,l,h=n(t);s=[];for(var u=0,c=h.length;c>u;u++){o=h[u],l=h[u][0].toLowerCase(),"z"==l&&(l="x");for(var f=1,x=o.length;x>f;f++)l+=a(o[f]*b)+(f!=x-1?",":d);s.push(l)}return s.join(p)},C=function(t,e,i){var n=r.matrix();return n.rotate(-t,.5,.5),{dx:n.x(e,i),dy:n.y(e,i)}},B=function(t,e,r,i,n,a){var s=t._,o=t.matrix,u=s.fillpos,c=t.node,f=c.style,d=1,g="",v=b/e,x=b/r;if(f.visibility="hidden",e&&r){if(c.coordsize=l(v)+p+l(x),f.rotation=a*(0>e*r?-1:1),a){var y=C(a,i,n);i=y.dx,n=y.dy}if(0>e&&(g+="x"),0>r&&(g+=" y")&&(d=-1),f.flip=g,c.coordorigin=i*-v+p+n*-x,u||s.fillsize){var m=c.getElementsByTagName(h);m=m&&m[0],c.removeChild(m),u&&(y=C(a,o.x(u[0],u[1]),o.y(u[0],u[1])),m.position=y.dx*d+p+y.dy*d),s.fillsize&&(m.size=s.fillsize[0]*l(e)+p+s.fillsize[1]*l(r)),c.appendChild(m)}f.visibility="visible"}};r.toString=function(){return"Your browser doesnâ€™t support SVG. Falling down to VML.\nYou are running RaphaÃ«l "+this.version};var S=function(t,r,i){for(var n=e(r).toLowerCase().split("-"),a=i?"end":"start",s=n.length,o="classic",l="medium",h="medium";s--;)switch(n[s]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":o=n[s];break;case"wide":case"narrow":h=n[s];break;case"long":case"short":l=n[s]}var u=t.node.getElementsByTagName("stroke")[0];u[a+"arrow"]=o,u[a+"arrowlength"]=l,u[a+"arrowwidth"]=h},T=function(n,l){n.attrs=n.attrs||{};var c=n.node,f=n.attrs,g=c.style,v=_[n.type]&&(l.x!=f.x||l.y!=f.y||l.width!=f.width||l.height!=f.height||l.cx!=f.cx||l.cy!=f.cy||l.rx!=f.rx||l.ry!=f.ry||l.r!=f.r),x=w[n.type]&&(f.cx!=l.cx||f.cy!=l.cy||f.r!=l.r||f.rx!=l.rx||f.ry!=l.ry),y=n;for(var m in l)l[t](m)&&(f[m]=l[m]);if(v&&(f.path=r._getPath[n.type](n),n._.dirty=1),l.href&&(c.href=l.href),l.title&&(c.title=l.title),l.target&&(c.target=l.target),l.cursor&&(g.cursor=l.cursor),"blur"in l&&n.blur(l.blur),(l.path&&"path"==n.type||v)&&(c.path=k(~e(f.path).toLowerCase().indexOf("r")?r._pathToAbsolute(f.path):f.path),"image"==n.type&&(n._.fillpos=[f.x,f.y],n._.fillsize=[f.width,f.height],B(n,1,1,0,0,0))),"transform"in l&&n.transform(l.transform),x){var C=+f.cx,T=+f.cy,N=+f.rx||+f.r||0,E=+f.ry||+f.r||0;c.path=r.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x",a((C-N)*b),a((T-E)*b),a((C+N)*b),a((T+E)*b),a(C*b)),n._.dirty=1}if("clip-rect"in l){var M=e(l["clip-rect"]).split(u);if(4==M.length){M[2]=+M[2]+ +M[0],M[3]=+M[3]+ +M[1];var P=c.clipRect||r._g.doc.createElement("div"),z=P.style;z.clip=r.format("rect({1}px {2}px {3}px {0}px)",M),c.clipRect||(z.position="absolute",z.top=0,z.left=0,z.width=n.paper.width+"px",z.height=n.paper.height+"px",c.parentNode.insertBefore(P,c),P.appendChild(c),c.clipRect=P)}l["clip-rect"]||c.clipRect&&(c.clipRect.style.clip="auto")}if(n.textpath){var F=n.textpath.style;l.font&&(F.font=l.font),l["font-family"]&&(F.fontFamily='"'+l["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g,d)+'"'),l["font-size"]&&(F.fontSize=l["font-size"]),l["font-weight"]&&(F.fontWeight=l["font-weight"]),l["font-style"]&&(F.fontStyle=l["font-style"])}if("arrow-start"in l&&S(y,l["arrow-start"]),"arrow-end"in l&&S(y,l["arrow-end"],1),null!=l.opacity||null!=l["stroke-width"]||null!=l.fill||null!=l.src||null!=l.stroke||null!=l["stroke-width"]||null!=l["stroke-opacity"]||null!=l["fill-opacity"]||null!=l["stroke-dasharray"]||null!=l["stroke-miterlimit"]||null!=l["stroke-linejoin"]||null!=l["stroke-linecap"]){var R=c.getElementsByTagName(h),I=!1;if(R=R&&R[0],!R&&(I=R=L(h)),"image"==n.type&&l.src&&(R.src=l.src),l.fill&&(R.on=!0),(null==R.on||"none"==l.fill||null===l.fill)&&(R.on=!1),R.on&&l.fill){var j=e(l.fill).match(r._ISURL);if(j){R.parentNode==c&&c.removeChild(R),R.rotate=!0,R.src=j[1],R.type="tile";var q=n.getBBox(1);R.position=q.x+p+q.y,n._.fillpos=[q.x,q.y],r._preload(j[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight]})}else R.color=r.getRGB(l.fill).hex,R.src=d,R.type="solid",r.getRGB(l.fill).error&&(y.type in{circle:1,ellipse:1}||"r"!=e(l.fill).charAt())&&A(y,l.fill,R)&&(f.fill="none",f.gradient=l.fill,R.rotate=!1)}if("fill-opacity"in l||"opacity"in l){var D=((+f["fill-opacity"]+1||2)-1)*((+f.opacity+1||2)-1)*((+r.getRGB(l.fill).o+1||2)-1);D=o(s(D,0),1),R.opacity=D,R.src&&(R.color="none")}c.appendChild(R);var O=c.getElementsByTagName("stroke")&&c.getElementsByTagName("stroke")[0],V=!1;!O&&(V=O=L("stroke")),(l.stroke&&"none"!=l.stroke||l["stroke-width"]||null!=l["stroke-opacity"]||l["stroke-dasharray"]||l["stroke-miterlimit"]||l["stroke-linejoin"]||l["stroke-linecap"])&&(O.on=!0),("none"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l["stroke-width"])&&(O.on=!1);var Y=r.getRGB(l.stroke);O.on&&l.stroke&&(O.color=Y.hex),D=((+f["stroke-opacity"]+1||2)-1)*((+f.opacity+1||2)-1)*((+Y.o+1||2)-1);var G=.75*(i(l["stroke-width"])||1);if(D=o(s(D,0),1),null==l["stroke-width"]&&(G=f["stroke-width"]),l["stroke-width"]&&(O.weight=G),G&&1>G&&(D*=G)&&(O.weight=1),O.opacity=D,l["stroke-linejoin"]&&(O.joinstyle=l["stroke-linejoin"]||"miter"),O.miterlimit=l["stroke-miterlimit"]||8,l["stroke-linecap"]&&(O.endcap="butt"==l["stroke-linecap"]?"flat":"square"==l["stroke-linecap"]?"square":"round"),"stroke-dasharray"in l){var W={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"};O.dashstyle=W[t](l["stroke-dasharray"])?W[l["stroke-dasharray"]]:d}V&&c.appendChild(O)}if("text"==y.type){y.paper.canvas.style.display=d;var X=y.paper.span,H=100,U=f.font&&f.font.match(/\d+(?:\.\d*)?(?=px)/);g=X.style,f.font&&(g.font=f.font),f["font-family"]&&(g.fontFamily=f["font-family"]),f["font-weight"]&&(g.fontWeight=f["font-weight"]),f["font-style"]&&(g.fontStyle=f["font-style"]),U=i(f["font-size"]||U&&U[0])||10,g.fontSize=U*H+"px",y.textpath.string&&(X.innerHTML=e(y.textpath.string).replace(/</g,"&#60;").replace(/&/g,"&#38;").replace(/\n/g,"<br>"));var $=X.getBoundingClientRect();y.W=f.w=($.right-$.left)/H,y.H=f.h=($.bottom-$.top)/H,y.X=f.x,y.Y=f.y+y.H/2,("x"in l||"y"in l)&&(y.path.v=r.format("m{0},{1}l{2},{1}",a(f.x*b),a(f.y*b),a(f.x*b)+1));for(var Z=["x","y","text","font","font-family","font-weight","font-style","font-size"],Q=0,J=Z.length;J>Q;Q++)if(Z[Q]in l){y._.dirty=1;break}switch(f["text-anchor"]){case"start":y.textpath.style["v-text-align"]="left",y.bbx=y.W/2;break;case"end":y.textpath.style["v-text-align"]="right",y.bbx=-y.W/2;break;default:y.textpath.style["v-text-align"]="center",y.bbx=0}y.textpath.style["v-text-kern"]=!0}},A=function(t,a,s){t.attrs=t.attrs||{};var o=(t.attrs,Math.pow),l="linear",h=".5 .5";if(t.attrs.gradient=a,a=e(a).replace(r._radial_gradient,function(t,e,r){return l="radial",e&&r&&(e=i(e),r=i(r),o(e-.5,2)+o(r-.5,2)>.25&&(r=n.sqrt(.25-o(e-.5,2))*(2*(r>.5)-1)+.5),h=e+p+r),d}),a=a.split(/\s*\-\s*/),"linear"==l){var u=a.shift();if(u=-i(u),isNaN(u))return null}var c=r._parseDots(a);if(!c)return null;if(t=t.shape||t.node,c.length){t.removeChild(s),s.on=!0,s.method="none",s.color=c[0].color,s.color2=c[c.length-1].color;for(var f=[],g=0,v=c.length;v>g;g++)c[g].offset&&f.push(c[g].offset+p+c[g].color);s.colors=f.length?f.join():"0% "+s.color,"radial"==l?(s.type="gradientTitle",s.focus="100%",s.focussize="0 0",s.focusposition=h,s.angle=0):(s.type="gradient",s.angle=(270-u)%360),t.appendChild(s)}return 1},N=function(t,e){this[0]=this.node=t,t.raphael=!0,this.id=r._oid++,t.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=e,this.matrix=r.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!e.bottom&&(e.bottom=this),this.prev=e.top,e.top&&(e.top.next=this),e.top=this,this.next=null},E=r.el;N.prototype=E,E.constructor=N,E.transform=function(t){if(null==t)return this._.transform;var i,n=this.paper._viewBoxShift,a=n?"s"+[n.scale,n.scale]+"-1-1t"+[n.dx,n.dy]:d;n&&(i=t=e(t).replace(/\.{3}|\u2026/g,this._.transform||d)),r._extractTransform(this,a+t);var s,o=this.matrix.clone(),l=this.skew,h=this.node,u=~e(this.attrs.fill).indexOf("-"),c=!e(this.attrs.fill).indexOf("url(");if(o.translate(1,1),c||u||"image"==this.type)if(l.matrix="1 0 0 1",l.offset="0 0",s=o.split(),u&&s.noRotation||!s.isSimple){h.style.filter=o.toFilter();var f=this.getBBox(),g=this.getBBox(1),v=f.x-g.x,x=f.y-g.y;h.coordorigin=v*-b+p+x*-b,B(this,1,1,v,x,0)}else h.style.filter=d,B(this,s.scalex,s.scaley,s.dx,s.dy,s.rotate);else h.style.filter=d,l.matrix=e(o),l.offset=o.offset();return i&&(this._.transform=i),this},E.rotate=function(t,r,n){if(this.removed)return this;if(null!=t){if(t=e(t).split(u),t.length-1&&(r=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(r=n),null==r||null==n){var a=this.getBBox(1);r=a.x+a.width/2,n=a.y+a.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([["r",t,r,n]])),this}},E.translate=function(t,r){return this.removed?this:(t=e(t).split(u),t.length-1&&(r=i(t[1])),t=i(t[0])||0,r=+r||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=r),this.transform(this._.transform.concat([["t",t,r]])),this)},E.scale=function(t,r,n,a){if(this.removed)return this;if(t=e(t).split(u),t.length-1&&(r=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==r&&(r=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([["s",t,r,n,a]])),this._.dirtyT=1,this},E.hide=function(){return!this.removed&&(this.node.style.display="none"),this},E.show=function(){return!this.removed&&(this.node.style.display=d),this},E._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},E.remove=function(){if(!this.removed&&this.node.parentNode){this.paper.__set__&&this.paper.__set__.exclude(this),r.eve.unbind("raphael.*.*."+this.id),r._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape);for(var t in this)this[t]="function"==typeof this[t]?r._removedFactory(t):null;this.removed=!0}},E.attr=function(e,i){if(this.removed)return this;if(null==e){var n={};for(var a in this.attrs)this.attrs[t](a)&&(n[a]=this.attrs[a]);return n.gradient&&"none"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&r.is(e,"string")){if(e==h&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=e.split(u),o={},l=0,f=s.length;f>l;l++)e=s[l],o[e]=e in this.attrs?this.attrs[e]:r.is(this.paper.customAttributes[e],"function")?this.paper.customAttributes[e].def:r._availableAttrs[e];return f-1?o:o[s[0]]}if(this.attrs&&null==i&&r.is(e,"array")){for(o={},l=0,f=e.length;f>l;l++)o[e[l]]=this.attr(e[l]);return o}var p;null!=i&&(p={},p[e]=i),null==i&&r.is(e,"object")&&(p=e);for(var d in p)c("raphael.attr."+d+"."+this.id,this,p[d]);if(p){for(d in this.paper.customAttributes)if(this.paper.customAttributes[t](d)&&p[t](d)&&r.is(this.paper.customAttributes[d],"function")){var g=this.paper.customAttributes[d].apply(this,[].concat(p[d]));this.attrs[d]=p[d];for(var v in g)g[t](v)&&(p[v]=g[v])}p.text&&"text"==this.type&&(this.textpath.string=p.text),T(this,p)}return this},E.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&r._tofront(this,this.paper),this},E.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),r._toback(this,this.paper)),this)},E.insertAfter=function(t){return this.removed?this:(t.constructor==r.st.constructor&&(t=t[t.length-1]),t.node.nextSibling?t.node.parentNode.insertBefore(this.node,t.node.nextSibling):t.node.parentNode.appendChild(this.node),r._insertafter(this,t,this.paper),this)},E.insertBefore=function(t){return this.removed?this:(t.constructor==r.st.constructor&&(t=t[0]),t.node.parentNode.insertBefore(this.node,t.node),r._insertbefore(this,t,this.paper),this)},E.blur=function(t){var e=this.node.runtimeStyle,i=e.filter;return i=i.replace(x,d),0!==+t?(this.attrs.blur=t,e.filter=i+p+f+".Blur(pixelradius="+(+t||1.5)+")",e.margin=r.format("-{0}px 0 0 -{0}px",a(+t||1.5))):(e.filter=i,e.margin=0,delete this.attrs.blur),this},r._engine.path=function(t,e){var r=L("shape");r.style.cssText=m,r.coordsize=b+p+b,r.coordorigin=e.coordorigin;var i=new N(r,e),n={fill:"none",stroke:"#000"};t&&(n.path=t),i.type="path",i.path=[],i.Path=d,T(i,n),e.canvas.appendChild(r);var a=L("skew");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(d),i},r._engine.rect=function(t,e,i,n,a,s){var o=r._rectPath(e,i,n,a,s),l=t.path(o),h=l.attrs;return l.X=h.x=e,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type="rect",l},r._engine.ellipse=function(t,e,r,i,n){var a=t.path();return a.attrs,a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type="ellipse",T(a,{cx:e,cy:r,rx:i,ry:n}),a},r._engine.circle=function(t,e,r,i){var n=t.path();return n.attrs,n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type="circle",T(n,{cx:e,cy:r,r:i}),n},r._engine.image=function(t,e,i,n,a,s){var o=r._rectPath(i,n,a,s),l=t.path(o).attr({stroke:"none"}),u=l.attrs,c=l.node,f=c.getElementsByTagName(h)[0];return u.src=e,l.X=u.x=i,l.Y=u.y=n,l.W=u.width=a,l.H=u.height=s,u.path=o,l.type="image",f.parentNode==c&&c.removeChild(f),f.rotate=!0,f.src=e,f.type="tile",l._.fillpos=[i,n],l._.fillsize=[a,s],c.appendChild(f),B(l,1,1,0,0,0),l},r._engine.text=function(t,i,n,s){var o=L("shape"),l=L("path"),h=L("textpath");i=i||0,n=n||0,s=s||"",l.v=r.format("m{0},{1}l{2},{1}",a(i*b),a(n*b),a(i*b)+1),l.textpathok=!0,h.string=e(s),h.on=!0,o.style.cssText=m,o.coordsize=b+p+b,o.coordorigin="0 0";var u=new N(o,t),c={fill:"#000",stroke:"none",font:r._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type="text",u.attrs.text=e(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,T(u,c),o.appendChild(h),o.appendChild(l),t.canvas.appendChild(o);var f=L("skew");return f.on=!0,o.appendChild(f),u.skew=f,u.transform(d),u},r._engine.setSize=function(t,e){var i=this.canvas.style;return this.width=t,this.height=e,t==+t&&(t+="px"),e==+e&&(e+="px"),i.width=t,i.height=e,i.clip="rect(0 "+t+" "+e+" 0)",this._viewBox&&r._engine.setViewBox.apply(this,this._viewBox),this},r._engine.setViewBox=function(t,e,i,n,a){r.eve("raphael.setViewBox",this,this._viewBox,[t,e,i,n,a]);var o,l,h=this.width,u=this.height,c=1/s(i/h,n/u);return a&&(o=u/n,l=h/i,h>i*o&&(t-=(h-i*o)/2/o),u>n*l&&(e-=(u-n*l)/2/l)),this._viewBox=[t,e,i,n,!!a],this._viewBoxShift={dx:-t,dy:-e,scale:c},this.forEach(function(t){t.transform("...")}),this};var L;r._engine.initWin=function(t){var e=t.document;e.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)");try{!e.namespaces.rvml&&e.namespaces.add("rvml","urn:schemas-microsoft-com:vml"),L=function(t){return e.createElement("<rvml:"+t+' class="rvml">')}}catch(r){L=function(t){return e.createElement("<"+t+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')}}},r._engine.initWin(r._g.win),r._engine.create=function(){var t=r._getContainer.apply(0,arguments),e=t.container,i=t.height,n=t.width,a=t.x,s=t.y;if(!e)throw new Error("VML container not found.");var o=new r._Paper,l=o.canvas=r._g.doc.createElement("div"),h=l.style;return a=a||0,s=s||0,n=n||512,i=i||342,o.width=n,o.height=i,n==+n&&(n+="px"),i==+i&&(i+="px"),o.coordsize=1e3*b+p+1e3*b,o.coordorigin="0 0",o.span=r._g.doc.createElement("span"),o.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;",l.appendChild(o.span),h.cssText=r.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden",n,i),1==e?(r._g.doc.body.appendChild(l),h.left=a+"px",h.top=s+"px",h.position="absolute"):e.firstChild?e.insertBefore(l,e.firstChild):e.appendChild(l),o.renderfix=function(){},o},r.prototype.clear=function(){r.eve("raphael.clear",this),this.canvas.innerHTML=d,this.span=r._g.doc.createElement("span"),this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;",this.canvas.appendChild(this.span),this.bottom=this.top=null},r.prototype.remove=function(){r.eve("raphael.remove",this),this.canvas.parentNode.removeChild(this.canvas);for(var t in this)this[t]="function"==typeof this[t]?r._removedFactory(t):null;return!0};var M=r.st;for(var P in E)E[t](P)&&!M[t](P)&&(M[P]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(P))}}(),T.was?S.win.Raphael=r:Raphael=r,r});

//     Underscore.js 1.6.0
//     http://underscorejs.org
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,g=e.filter,d=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,w=Object.keys,_=i.bind,j=function(n){return n instanceof j?n:this instanceof j?void(this._wrapped=n):new j(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION="1.6.0";var A=j.each=j.forEach=function(n,t,e){if(null==n)return n;if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a=j.keys(n),u=0,i=a.length;i>u;u++)if(t.call(e,n[a[u]],a[u],n)===r)return;return n};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var O="Reduce of empty array with no initial value";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(O);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(O);return r},j.find=j.detect=function(n,t,r){var e;return k(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:g&&n.filter===g?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:d&&n.every===d?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var k=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:k(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,j.property(t))},j.where=function(n,t){return j.filter(n,j.matches(t))},j.findWhere=function(n,t){return j.find(n,j.matches(t))},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);var e=-1/0,u=-1/0;return A(n,function(n,i,a){var o=t?t.call(r,n,i,a):n;o>u&&(e=n,u=o)}),e},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);var e=1/0,u=1/0;return A(n,function(n,i,a){var o=t?t.call(r,n,i,a):n;u>o&&(e=n,u=o)}),e},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e},j.sample=function(n,t,r){return null==t||r?(n.length!==+n.length&&(n=j.values(n)),n[j.random(n.length-1)]):j.shuffle(n).slice(0,Math.max(0,t))};var E=function(n){return null==n?j.identity:j.isFunction(n)?n:j.property(n)};j.sortBy=function(n,t,r){return t=E(t),j.pluck(j.map(n,function(n,e,u){return{value:n,index:e,criteria:t.call(r,n,e,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var F=function(n){return function(t,r,e){var u={};return r=E(r),A(t,function(i,a){var o=r.call(e,i,a,t);n(u,o,i)}),u}};j.groupBy=F(function(n,t,r){j.has(n,t)?n[t].push(r):n[t]=[r]}),j.indexBy=F(function(n,t,r){n[t]=r}),j.countBy=F(function(n,t){j.has(n,t)?n[t]++:n[t]=1}),j.sortedIndex=function(n,t,r,e){r=E(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:0>t?[]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var M=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):M(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return M(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.partition=function(n,t){var r=[],e=[];return A(n,function(n){(t(n)?r:e).push(n)}),[r,e]},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.contains(t,n)})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){for(var n=j.max(j.pluck(arguments,"length").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,""+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var R=function(){};j.bind=function(n,t){var r,e;if(_&&n.bind===_)return _.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));R.prototype=n.prototype;var u=new R;R.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){for(var r=0,e=t.slice(),u=0,i=e.length;i>u;u++)e[u]===j&&(e[u]=arguments[r++]);for(;r<arguments.length;)e.push(arguments[r++]);return n.apply(this,e)}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error("bindAll must be passed function names");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=r.leading===!1?0:j.now(),a=null,i=n.apply(e,u),e=u=null};return function(){var l=j.now();o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u),e=u=null):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u,i,a,o,c=function(){var l=j.now()-a;t>l?e=setTimeout(c,t-l):(e=null,r||(o=n.apply(i,u),i=u=null))};return function(){i=this,u=arguments,a=j.now();var l=r&&!e;return e||(e=setTimeout(c,t)),l&&(o=n.apply(i,u),i=u=null),o}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return j.partial(t,n)},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=function(n){if(!j.isObject(n))return[];if(w)return w(n);var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},j.pairs=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},j.invert=function(n){for(var t={},r=j.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case"[object String]":return n==String(t);case"[object Number]":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case"[object Date]":case"[object Boolean]":return+n==+t;case"[object RegExp]":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o)&&"constructor"in n&&"constructor"in t)return!1;r.push(n),e.push(t);var c=0,f=!0;if("[object Array]"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return"[object Array]"==l.call(n)},j.isObject=function(n){return n===Object(n)},A(["Arguments","Function","String","Number","Date","RegExp"],function(n){j["is"+n]=function(t){return l.call(t)=="[object "+n+"]"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,"callee"))}),"function"!=typeof/./&&(j.isFunction=function(n){return"function"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.constant=function(n){return function(){return n}},j.property=function(n){return function(t){return t[n]}},j.matches=function(n){return function(t){if(t===n)return!0;for(var r in n)if(n[r]!==t[r])return!1;return!0}},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},j.now=Date.now||function(){return(new Date).getTime()};var T={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;"}};T.unescape=j.invert(T.escape);var I={escape:new RegExp("["+j.keys(T.escape).join("")+"]","g"),unescape:new RegExp("("+j.keys(T.unescape).join("|")+")","g")};j.each(["escape","unescape"],function(n){j[n]=function(t){return null==t?"":(""+t).replace(I[n],function(t){return T[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),z.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+"";return n?n+t:t},j.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var q=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","   ":"t","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\t|\u2028|\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join("|")+"|$","g"),i=0,a="__p+='";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(D,function(n){return"\\"+B[n]}),r&&(a+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'"),e&&(a+="'+\n((__t=("+e+"))==null?'':__t)+\n'"),u&&(a+="';\n"+u+"\n__p+='"),i=o+t.length,t}),a+="';\n",r.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{e=new Function(r.variable||"obj","_",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source="function("+(r.variable||"obj")+"){\n"+a+"}",c},j.chain=function(n){return j(n).chain()};var z=function(n){return this._chain?j(n).chain():n};j.mixin(j),A(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!=n&&"splice"!=n||0!==r.length||delete r[0],z.call(this,r)}}),A(["concat","join","slice"],function(n){var t=e[n];j.prototype[n]=function(){return z.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}}),"function"==typeof define&&define.amd&&define("underscore",[],function(){return j})}).call(this);

// Format Utility
if(!String.prototype.format)String.prototype.format=function(){var args=arguments;return this.replace(/{(\d+)}/g,function(match,number){return typeof args[number]!="undefined"?args[number]:match})};

;
(ScrollHandler = function() {
    var callBackScrollDown = null;
    var callBackScrollUp = null;
    var isActive = true;
    var self = this;

    function handle(delta) {
        if (isActive) {
            if (delta < 0 && typeof(callBackScrollDown) == 'function') {
                callBackScrollDown();
            } else if (typeof(callBackScrollUp) == 'function') {
                callBackScrollUp();
            }
        }
    }

    function wheel(event) {
        var delta = 0;
        if (!event) event = window.event;
        if (event.wheelDelta) {
            delta = event.wheelDelta / 120;
        } else if (event.detail) {
            delta = -event.detail / 3;
        }
        if (delta)
            handle(delta);
        if (event.preventDefault)
            event.preventDefault();
        event.returnValue = false;
    }

    /* Initialization code. */
    if (window.addEventListener)
        window.addEventListener('DOMMouseScroll', wheel, false);
    window.onmousewheel = document.onmousewheel = wheel;

    return {
        onScrollDown: function(callback) {
            callBackScrollDown = callback;
        },
        onScrollUp: function(callback) {
            callBackScrollUp = callback;
        },
        setActive: function(active) {
            isActive = active;
        }
    }
})();


/*! jQuery UI - v1.11.0 - 2014-07-18
* http://jqueryui.com
* Includes: core.js, widget.js, mouse.js, position.js, draggable.js
* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */

(function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)})(function(e){function t(t,s){var a,n,o,r=t.nodeName.toLowerCase();return"area"===r?(a=t.parentNode,n=a.name,t.href&&n&&"map"===a.nodeName.toLowerCase()?(o=e("img[usemap=#"+n+"]")[0],!!o&&i(o)):!1):(/input|select|textarea|button|object/.test(r)?!t.disabled:"a"===r?t.href||s:s)&&i(t)}function i(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return"hidden"===e.css(this,"visibility")}).length}e.ui=e.ui||{},e.extend(e.ui,{version:"1.11.0",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({scrollParent:function(){var t=this.css("position"),i="absolute"===t,s=this.parents().filter(function(){var t=e(this);return i&&"static"===t.css("position")?!1:/(auto|scroll)/.test(t.css("overflow")+t.css("overflow-y")+t.css("overflow-x"))}).eq(0);return"fixed"!==t&&s.length?s:e(this[0].ownerDocument||document)},uniqueId:function(){var e=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++e)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,s){return!!e.data(t,s[3])},focusable:function(i){return t(i,!isNaN(e.attr(i,"tabindex")))},tabbable:function(i){var s=e.attr(i,"tabindex"),a=isNaN(s);return(a||s>=0)&&t(i,!a)}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(t,i){function s(t,i,s,n){return e.each(a,function(){i-=parseFloat(e.css(t,"padding"+this))||0,s&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),n&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var a="Width"===i?["Left","Right"]:["Top","Bottom"],n=i.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+i]=function(t){return void 0===t?o["inner"+i].call(this):this.each(function(){e(this).css(n,s(this,t)+"px")})},e.fn["outer"+i]=function(t,a){return"number"!=typeof t?o["outer"+i].call(this,t):this.each(function(){e(this).css(n,s(this,t,!0,a)+"px")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),e.fn.extend({focus:function(t){return function(i,s){return"number"==typeof i?this.each(function(){var t=this;setTimeout(function(){e(t).focus(),s&&s.call(t)},i)}):t.apply(this,arguments)}}(e.fn.focus),disableSelection:function(){var e="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.bind(e+".ui-disableSelection",function(e){e.preventDefault()})}}(),enableSelection:function(){return this.unbind(".ui-disableSelection")},zIndex:function(t){if(void 0!==t)return this.css("zIndex",t);if(this.length)for(var i,s,a=e(this[0]);a.length&&a[0]!==document;){if(i=a.css("position"),("absolute"===i||"relative"===i||"fixed"===i)&&(s=parseInt(a.css("zIndex"),10),!isNaN(s)&&0!==s))return s;a=a.parent()}return 0}}),e.ui.plugin={add:function(t,i,s){var a,n=e.ui[t].prototype;for(a in s)n.plugins[a]=n.plugins[a]||[],n.plugins[a].push([i,s[a]])},call:function(e,t,i,s){var a,n=e.plugins[t];if(n&&(s||e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType))for(a=0;n.length>a;a++)e.options[n[a][0]]&&n[a][1].apply(e.element,i)}};var s=0,a=Array.prototype.slice;e.cleanData=function(t){return function(i){for(var s,a=0;null!=(s=i[a]);a++)try{e(s).triggerHandler("remove")}catch(n){}t(i)}}(e.cleanData),e.widget=function(t,i,s){var a,n,o,r,h={},l=t.split(".")[0];return t=t.split(".")[1],a=l+"-"+t,s||(s=i,i=e.Widget),e.expr[":"][a.toLowerCase()]=function(t){return!!e.data(t,a)},e[l]=e[l]||{},n=e[l][t],o=e[l][t]=function(e,t){return this._createWidget?(arguments.length&&this._createWidget(e,t),void 0):new o(e,t)},e.extend(o,n,{version:s.version,_proto:e.extend({},s),_childConstructors:[]}),r=new i,r.options=e.widget.extend({},r.options),e.each(s,function(t,s){return e.isFunction(s)?(h[t]=function(){var e=function(){return i.prototype[t].apply(this,arguments)},a=function(e){return i.prototype[t].apply(this,e)};return function(){var t,i=this._super,n=this._superApply;return this._super=e,this._superApply=a,t=s.apply(this,arguments),this._super=i,this._superApply=n,t}}(),void 0):(h[t]=s,void 0)}),o.prototype=e.widget.extend(r,{widgetEventPrefix:n?r.widgetEventPrefix||t:t},h,{constructor:o,namespace:l,widgetName:t,widgetFullName:a}),n?(e.each(n._childConstructors,function(t,i){var s=i.prototype;e.widget(s.namespace+"."+s.widgetName,o,i._proto)}),delete n._childConstructors):i._childConstructors.push(o),e.widget.bridge(t,o),o},e.widget.extend=function(t){for(var i,s,n=a.call(arguments,1),o=0,r=n.length;r>o;o++)for(i in n[o])s=n[o][i],n[o].hasOwnProperty(i)&&void 0!==s&&(t[i]=e.isPlainObject(s)?e.isPlainObject(t[i])?e.widget.extend({},t[i],s):e.widget.extend({},s):s);return t},e.widget.bridge=function(t,i){var s=i.prototype.widgetFullName||t;e.fn[t]=function(n){var o="string"==typeof n,r=a.call(arguments,1),h=this;return n=!o&&r.length?e.widget.extend.apply(null,[n].concat(r)):n,o?this.each(function(){var i,a=e.data(this,s);return"instance"===n?(h=a,!1):a?e.isFunction(a[n])&&"_"!==n.charAt(0)?(i=a[n].apply(a,r),i!==a&&void 0!==i?(h=i&&i.jquery?h.pushStack(i.get()):i,!1):void 0):e.error("no such method '"+n+"' for "+t+" widget instance"):e.error("cannot call methods on "+t+" prior to initialization; "+"attempted to call method '"+n+"'")}):this.each(function(){var t=e.data(this,s);t?(t.option(n||{}),t._init&&t._init()):e.data(this,s,new i(n,this))}),h}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,i){i=e(i||this.defaultElement||this)[0],this.element=e(i),this.uuid=s++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),i!==this&&(e.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===i&&this.destroy()}}),this.document=e(i.style?i.ownerDocument:i.document||i),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(t,i){var s,a,n,o=t;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof t)if(o={},s=t.split("."),t=s.shift(),s.length){for(a=o[t]=e.widget.extend({},this.options[t]),n=0;s.length-1>n;n++)a[s[n]]=a[s[n]]||{},a=a[s[n]];if(t=s.pop(),1===arguments.length)return void 0===a[t]?null:a[t];a[t]=i}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];o[t]=i}return this._setOptions(o),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled",!!t),t&&(this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"))),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(t,i,s){var a,n=this;"boolean"!=typeof t&&(s=i,i=t,t=!1),s?(i=a=e(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,a=this.widget()),e.each(s,function(s,o){function r(){return t||n.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof o?n[o]:o).apply(n,arguments):void 0}"string"!=typeof o&&(r.guid=o.guid=o.guid||r.guid||e.guid++);var h=s.match(/^([\w:-]*)\s*(.*)$/),l=h[1]+n.eventNamespace,u=h[2];u?a.delegate(u,l,r):i.bind(l,r)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function i(){return("string"==typeof e?s[e]:e).apply(s,arguments)}var s=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,s){var a,n,o=this.options[t];if(s=s||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],n=i.originalEvent)for(a in n)a in i||(i[a]=n[a]);return this.element.trigger(i,s),!(e.isFunction(o)&&o.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(s,a,n){"string"==typeof a&&(a={effect:a});var o,r=a?a===!0||"number"==typeof a?i:a.effect||i:t;a=a||{},"number"==typeof a&&(a={duration:a}),o=!e.isEmptyObject(a),a.complete=n,a.delay&&s.delay(a.delay),o&&e.effects&&e.effects.effect[r]?s[t](a):r!==t&&s[r]?s[r](a.duration,a.easing,n):s.queue(function(i){e(this)[t](),n&&n.call(s[0]),i()})}}),e.widget;var n=!1;e(document).mouseup(function(){n=!1}),e.widget("ui.mouse",{version:"1.11.0",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(!n){this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var i=this,s=1===t.which,a="string"==typeof this.options.cancel&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;return s&&!a&&this._mouseCapture(t)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(t)!==!1,!this._mouseStarted)?(t.preventDefault(),!0):(!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return i._mouseMove(e)},this._mouseUpDelegate=function(e){return i._mouseUp(e)},this.document.bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0)):!0}},_mouseMove:function(t){return e.ui.ie&&(!document.documentMode||9>document.documentMode)&&!t.button?this._mouseUp(t):t.which?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),n=!1,!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),function(){function t(e,t,i){return[parseFloat(e[0])*(p.test(e[0])?t/100:1),parseFloat(e[1])*(p.test(e[1])?i/100:1)]}function i(t,i){return parseInt(e.css(t,i),10)||0}function s(t){var i=t[0];return 9===i.nodeType?{width:t.width(),height:t.height(),offset:{top:0,left:0}}:e.isWindow(i)?{width:t.width(),height:t.height(),offset:{top:t.scrollTop(),left:t.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:t.outerWidth(),height:t.outerHeight(),offset:t.offset()}}e.ui=e.ui||{};var a,n,o=Math.max,r=Math.abs,h=Math.round,l=/left|center|right/,u=/top|center|bottom/,d=/[\+\-]\d+(\.[\d]+)?%?/,c=/^\w+/,p=/%$/,f=e.fn.position;e.position={scrollbarWidth:function(){if(void 0!==a)return a;var t,i,s=e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),n=s.children()[0];return e("body").append(s),t=n.offsetWidth,s.css("overflow","scroll"),i=n.offsetWidth,t===i&&(i=s[0].clientWidth),s.remove(),a=t-i},getScrollInfo:function(t){var i=t.isWindow||t.isDocument?"":t.element.css("overflow-x"),s=t.isWindow||t.isDocument?"":t.element.css("overflow-y"),a="scroll"===i||"auto"===i&&t.width<t.element[0].scrollWidth,n="scroll"===s||"auto"===s&&t.height<t.element[0].scrollHeight;return{width:n?e.position.scrollbarWidth():0,height:a?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var i=e(t||window),s=e.isWindow(i[0]),a=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:s,isDocument:a,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},e.fn.position=function(a){if(!a||!a.of)return f.apply(this,arguments);a=e.extend({},a);var p,m,g,v,y,b,_=e(a.of),x=e.position.getWithinInfo(a.within),w=e.position.getScrollInfo(x),k=(a.collision||"flip").split(" "),T={};return b=s(_),_[0].preventDefault&&(a.at="left top"),m=b.width,g=b.height,v=b.offset,y=e.extend({},v),e.each(["my","at"],function(){var e,t,i=(a[this]||"").split(" ");1===i.length&&(i=l.test(i[0])?i.concat(["center"]):u.test(i[0])?["center"].concat(i):["center","center"]),i[0]=l.test(i[0])?i[0]:"center",i[1]=u.test(i[1])?i[1]:"center",e=d.exec(i[0]),t=d.exec(i[1]),T[this]=[e?e[0]:0,t?t[0]:0],a[this]=[c.exec(i[0])[0],c.exec(i[1])[0]]}),1===k.length&&(k[1]=k[0]),"right"===a.at[0]?y.left+=m:"center"===a.at[0]&&(y.left+=m/2),"bottom"===a.at[1]?y.top+=g:"center"===a.at[1]&&(y.top+=g/2),p=t(T.at,m,g),y.left+=p[0],y.top+=p[1],this.each(function(){var s,l,u=e(this),d=u.outerWidth(),c=u.outerHeight(),f=i(this,"marginLeft"),b=i(this,"marginTop"),D=d+f+i(this,"marginRight")+w.width,S=c+b+i(this,"marginBottom")+w.height,N=e.extend({},y),M=t(T.my,u.outerWidth(),u.outerHeight());"right"===a.my[0]?N.left-=d:"center"===a.my[0]&&(N.left-=d/2),"bottom"===a.my[1]?N.top-=c:"center"===a.my[1]&&(N.top-=c/2),N.left+=M[0],N.top+=M[1],n||(N.left=h(N.left),N.top=h(N.top)),s={marginLeft:f,marginTop:b},e.each(["left","top"],function(t,i){e.ui.position[k[t]]&&e.ui.position[k[t]][i](N,{targetWidth:m,targetHeight:g,elemWidth:d,elemHeight:c,collisionPosition:s,collisionWidth:D,collisionHeight:S,offset:[p[0]+M[0],p[1]+M[1]],my:a.my,at:a.at,within:x,elem:u})}),a.using&&(l=function(e){var t=v.left-N.left,i=t+m-d,s=v.top-N.top,n=s+g-c,h={target:{element:_,left:v.left,top:v.top,width:m,height:g},element:{element:u,left:N.left,top:N.top,width:d,height:c},horizontal:0>i?"left":t>0?"right":"center",vertical:0>n?"top":s>0?"bottom":"middle"};d>m&&m>r(t+i)&&(h.horizontal="center"),c>g&&g>r(s+n)&&(h.vertical="middle"),h.important=o(r(t),r(i))>o(r(s),r(n))?"horizontal":"vertical",a.using.call(this,e,h)}),u.offset(e.extend(N,{using:l}))})},e.ui.position={fit:{left:function(e,t){var i,s=t.within,a=s.isWindow?s.scrollLeft:s.offset.left,n=s.width,r=e.left-t.collisionPosition.marginLeft,h=a-r,l=r+t.collisionWidth-n-a;t.collisionWidth>n?h>0&&0>=l?(i=e.left+h+t.collisionWidth-n-a,e.left+=h-i):e.left=l>0&&0>=h?a:h>l?a+n-t.collisionWidth:a:h>0?e.left+=h:l>0?e.left-=l:e.left=o(e.left-r,e.left)},top:function(e,t){var i,s=t.within,a=s.isWindow?s.scrollTop:s.offset.top,n=t.within.height,r=e.top-t.collisionPosition.marginTop,h=a-r,l=r+t.collisionHeight-n-a;t.collisionHeight>n?h>0&&0>=l?(i=e.top+h+t.collisionHeight-n-a,e.top+=h-i):e.top=l>0&&0>=h?a:h>l?a+n-t.collisionHeight:a:h>0?e.top+=h:l>0?e.top-=l:e.top=o(e.top-r,e.top)}},flip:{left:function(e,t){var i,s,a=t.within,n=a.offset.left+a.scrollLeft,o=a.width,h=a.isWindow?a.scrollLeft:a.offset.left,l=e.left-t.collisionPosition.marginLeft,u=l-h,d=l+t.collisionWidth-o-h,c="left"===t.my[0]?-t.elemWidth:"right"===t.my[0]?t.elemWidth:0,p="left"===t.at[0]?t.targetWidth:"right"===t.at[0]?-t.targetWidth:0,f=-2*t.offset[0];0>u?(i=e.left+c+p+f+t.collisionWidth-o-n,(0>i||r(u)>i)&&(e.left+=c+p+f)):d>0&&(s=e.left-t.collisionPosition.marginLeft+c+p+f-h,(s>0||d>r(s))&&(e.left+=c+p+f))},top:function(e,t){var i,s,a=t.within,n=a.offset.top+a.scrollTop,o=a.height,h=a.isWindow?a.scrollTop:a.offset.top,l=e.top-t.collisionPosition.marginTop,u=l-h,d=l+t.collisionHeight-o-h,c="top"===t.my[1],p=c?-t.elemHeight:"bottom"===t.my[1]?t.elemHeight:0,f="top"===t.at[1]?t.targetHeight:"bottom"===t.at[1]?-t.targetHeight:0,m=-2*t.offset[1];0>u?(s=e.top+p+f+m+t.collisionHeight-o-n,e.top+p+f+m>u&&(0>s||r(u)>s)&&(e.top+=p+f+m)):d>0&&(i=e.top-t.collisionPosition.marginTop+p+f+m-h,e.top+p+f+m>d&&(i>0||d>r(i))&&(e.top+=p+f+m))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,i,s,a,o,r=document.getElementsByTagName("body")[0],h=document.createElement("div");t=document.createElement(r?"div":"body"),s={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},r&&e.extend(s,{position:"absolute",left:"-1000px",top:"-1000px"});for(o in s)t.style[o]=s[o];t.appendChild(h),i=r||document.documentElement,i.insertBefore(t,i.firstChild),h.style.cssText="position: absolute; left: 10.7432222px;",a=e(h).offset().left,n=a>10&&11>a,t.innerHTML="",i.removeChild(t)}()}(),e.ui.position,e.widget("ui.draggable",e.ui.mouse,{version:"1.11.0",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"!==this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._setHandleClassName(),this._mouseInit()},_setOption:function(e,t){this._super(e,t),"handle"===e&&this._setHandleClassName()},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?(this.destroyOnClear=!0,void 0):(this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._removeHandleClassName(),this._mouseDestroy(),void 0)},_mouseCapture:function(t){var i=this.document[0],s=this.options;try{i.activeElement&&"body"!==i.activeElement.nodeName.toLowerCase()&&e(i.activeElement).blur()}catch(a){}return this.helper||s.disabled||e(t.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(t),this.handle?(e(s.iframeFix===!0?"iframe":s.iframeFix).each(function(){e("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offsetParent=this.helper.offsetParent(),this.offsetParentCssPosition=this.offsetParent.css("position"),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.offset.scroll=!1,e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t,!1),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,i){if("fixed"===this.offsetParentCssPosition&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(t,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",t,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=this,s=!1;return e.ui.ddmanager&&!this.options.dropBehaviour&&(s=e.ui.ddmanager.drop(this,t)),this.dropped&&(s=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!s||"valid"===this.options.revert&&s||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,s)?e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",t)!==!1&&i._clear()}):this._trigger("stop",t)!==!1&&this._clear(),!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),this.element.focus(),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){return this.options.handle?!!e(t.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this._removeHandleClassName(),e(this.options.handle||this.element).addClass("ui-draggable-handle")},_removeHandleClassName:function(){this.element.find(".ui-draggable-handle").addBack().removeClass("ui-draggable-handle")},_createHelper:function(t){var i=this.options,s=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_isRootNode:function(e){return/(html|body)/i.test(e.tagName)||e===this.document[0]},_getParentOffset:function(){var t=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var e=this.element.position(),t=this._isRootNode(this.scrollParent[0]);return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+(t?0:this.scrollParent.scrollTop()),left:e.left-(parseInt(this.helper.css("left"),10)||0)+(t?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,s,a=this.options,n=this.document[0];return this.relative_container=null,a.containment?"window"===a.containment?(this.containment=[e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,e(window).scrollLeft()+e(window).width()-this.helperProportions.width-this.margins.left,e(window).scrollTop()+(e(window).height()||n.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):"document"===a.containment?(this.containment=[0,0,e(n).width()-this.helperProportions.width-this.margins.left,(e(n).height()||n.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top],void 0):a.containment.constructor===Array?(this.containment=a.containment,void 0):("parent"===a.containment&&(a.containment=this.helper[0].parentNode),i=e(a.containment),s=i[0],s&&(t="hidden"!==i.css("overflow"),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(t?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(t?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i),void 0):(this.containment=null,void 0)},_convertPositionTo:function(e,t){t||(t=this.position);var i="absolute"===e?1:-1,s=this._isRootNode(this.scrollParent[0]);return{top:t.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:s?0:this.offset.scroll.top)*i,left:t.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:s?0:this.offset.scroll.left)*i}},_generatePosition:function(e,t){var i,s,a,n,o=this.options,r=this._isRootNode(this.scrollParent[0]),h=e.pageX,l=e.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),t&&(this.containment&&(this.relative_container?(s=this.relative_container.offset(),i=[this.containment[0]+s.left,this.containment[1]+s.top,this.containment[2]+s.left,this.containment[3]+s.top]):i=this.containment,e.pageX-this.offset.click.left<i[0]&&(h=i[0]+this.offset.click.left),e.pageY-this.offset.click.top<i[1]&&(l=i[1]+this.offset.click.top),e.pageX-this.offset.click.left>i[2]&&(h=i[2]+this.offset.click.left),e.pageY-this.offset.click.top>i[3]&&(l=i[3]+this.offset.click.top)),o.grid&&(a=o.grid[1]?this.originalPageY+Math.round((l-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,l=i?a-this.offset.click.top>=i[1]||a-this.offset.click.top>i[3]?a:a-this.offset.click.top>=i[1]?a-o.grid[1]:a+o.grid[1]:a,n=o.grid[0]?this.originalPageX+Math.round((h-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,h=i?n-this.offset.click.left>=i[0]||n-this.offset.click.left>i[2]?n:n-this.offset.click.left>=i[0]?n-o.grid[0]:n+o.grid[0]:n),"y"===o.axis&&(h=this.originalPageX),"x"===o.axis&&(l=this.originalPageY)),{top:l-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:h-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(t,i,s){return s=s||this._uiHash(),e.ui.plugin.call(this,t,[i,s,this],!0),"drag"===t&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i,s){var a=s.options,n=e.extend({},i,{item:s.element});s.sortables=[],e(a.connectToSortable).each(function(){var i=e(this).sortable("instance");i&&!i.options.disabled&&(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger("activate",t,n))})},stop:function(t,i,s){var a=e.extend({},i,{item:s.element});e.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,"original"===s.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,a))})},drag:function(t,i,s){var a=this;e.each(s.sortables,function(){var n=!1,o=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(n=!0,e.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!==o&&this.instance._intersectsWith(this.instance.containerCache)&&e.contains(o.instance.element[0],this.instance.element[0])&&(n=!1),n})),n?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(a).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger("toSortable",t),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),s._trigger("fromSortable",t),s.dropped=!1)
})}}),e.ui.plugin.add("draggable","cursor",{start:function(t,i,s){var a=e("body"),n=s.options;a.css("cursor")&&(n._cursor=a.css("cursor")),a.css("cursor",n.cursor)},stop:function(t,i,s){var a=s.options;a._cursor&&e("body").css("cursor",a._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i,s){var a=e(i.helper),n=s.options;a.css("opacity")&&(n._opacity=a.css("opacity")),a.css("opacity",n.opacity)},stop:function(t,i,s){var a=s.options;a._opacity&&e(i.helper).css("opacity",a._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(e,t,i){i.scrollParent[0]!==i.document[0]&&"HTML"!==i.scrollParent[0].tagName&&(i.overflowOffset=i.scrollParent.offset())},drag:function(t,i,s){var a=s.options,n=!1,o=s.document[0];s.scrollParent[0]!==o&&"HTML"!==s.scrollParent[0].tagName?(a.axis&&"x"===a.axis||(s.overflowOffset.top+s.scrollParent[0].offsetHeight-t.pageY<a.scrollSensitivity?s.scrollParent[0].scrollTop=n=s.scrollParent[0].scrollTop+a.scrollSpeed:t.pageY-s.overflowOffset.top<a.scrollSensitivity&&(s.scrollParent[0].scrollTop=n=s.scrollParent[0].scrollTop-a.scrollSpeed)),a.axis&&"y"===a.axis||(s.overflowOffset.left+s.scrollParent[0].offsetWidth-t.pageX<a.scrollSensitivity?s.scrollParent[0].scrollLeft=n=s.scrollParent[0].scrollLeft+a.scrollSpeed:t.pageX-s.overflowOffset.left<a.scrollSensitivity&&(s.scrollParent[0].scrollLeft=n=s.scrollParent[0].scrollLeft-a.scrollSpeed))):(a.axis&&"x"===a.axis||(t.pageY-e(o).scrollTop()<a.scrollSensitivity?n=e(o).scrollTop(e(o).scrollTop()-a.scrollSpeed):e(window).height()-(t.pageY-e(o).scrollTop())<a.scrollSensitivity&&(n=e(o).scrollTop(e(o).scrollTop()+a.scrollSpeed))),a.axis&&"y"===a.axis||(t.pageX-e(o).scrollLeft()<a.scrollSensitivity?n=e(o).scrollLeft(e(o).scrollLeft()-a.scrollSpeed):e(window).width()-(t.pageX-e(o).scrollLeft())<a.scrollSensitivity&&(n=e(o).scrollLeft(e(o).scrollLeft()+a.scrollSpeed)))),n!==!1&&e.ui.ddmanager&&!a.dropBehaviour&&e.ui.ddmanager.prepareOffsets(s,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,i,s){var a=s.options;s.snapElements=[],e(a.snap.constructor!==String?a.snap.items||":data(ui-draggable)":a.snap).each(function(){var t=e(this),i=t.offset();this!==s.element[0]&&s.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:i.top,left:i.left})})},drag:function(t,i,s){var a,n,o,r,h,l,u,d,c,p,f=s.options,m=f.snapTolerance,g=i.offset.left,v=g+s.helperProportions.width,y=i.offset.top,b=y+s.helperProportions.height;for(c=s.snapElements.length-1;c>=0;c--)h=s.snapElements[c].left,l=h+s.snapElements[c].width,u=s.snapElements[c].top,d=u+s.snapElements[c].height,h-m>v||g>l+m||u-m>b||y>d+m||!e.contains(s.snapElements[c].item.ownerDocument,s.snapElements[c].item)?(s.snapElements[c].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[c].item})),s.snapElements[c].snapping=!1):("inner"!==f.snapMode&&(a=m>=Math.abs(u-b),n=m>=Math.abs(d-y),o=m>=Math.abs(h-v),r=m>=Math.abs(l-g),a&&(i.position.top=s._convertPositionTo("relative",{top:u-s.helperProportions.height,left:0}).top-s.margins.top),n&&(i.position.top=s._convertPositionTo("relative",{top:d,left:0}).top-s.margins.top),o&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h-s.helperProportions.width}).left-s.margins.left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l}).left-s.margins.left)),p=a||n||o||r,"outer"!==f.snapMode&&(a=m>=Math.abs(u-y),n=m>=Math.abs(d-b),o=m>=Math.abs(h-g),r=m>=Math.abs(l-v),a&&(i.position.top=s._convertPositionTo("relative",{top:u,left:0}).top-s.margins.top),n&&(i.position.top=s._convertPositionTo("relative",{top:d-s.helperProportions.height,left:0}).top-s.margins.top),o&&(i.position.left=s._convertPositionTo("relative",{top:0,left:h}).left-s.margins.left),r&&(i.position.left=s._convertPositionTo("relative",{top:0,left:l-s.helperProportions.width}).left-s.margins.left)),!s.snapElements[c].snapping&&(a||n||o||r||p)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[c].item})),s.snapElements[c].snapping=a||n||o||r||p)}}),e.ui.plugin.add("draggable","stack",{start:function(t,i,s){var a,n=s.options,o=e.makeArray(e(n.stack)).sort(function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)});o.length&&(a=parseInt(e(o[0]).css("zIndex"),10)||0,e(o).each(function(t){e(this).css("zIndex",a+t)}),this.css("zIndex",a+o.length))}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i,s){var a=e(i.helper),n=s.options;a.css("zIndex")&&(n._zIndex=a.css("zIndex")),a.css("zIndex",n.zIndex)},stop:function(t,i,s){var a=s.options;a._zIndex&&e(i.helper).css("zIndex",a._zIndex)}}),e.ui.draggable});


Navigation = function() {

    this.el = {
        btOpen: $Dashboard.find("#dashboard-menu a"),
        btClose: $Dashboard.find("#dashboard-overlay-close a, #dashboard-overlay"),
        overlay: $Dashboard.find("#dashboard-overlay"),
        btMenu: $Dashboard.find("#bt-next-info, a#bt-next-anatomy,#bt-prev-anatomy,#bt-back-nav-training, #bt-next-nav-training, #bt-back-nav-diet"),
        btMenuNav: $Dashboard.find("#dashboard-nav a"),
        scroll: $Dashboard.find("#dashboard-scroll"),
    };
    this.tlMenu = new TimelineLite();

    this.tlInfo = new TimelineLite();
    this.tlAnatomy = new TimelineLite();
    this.tlTraining = new TimelineLite();
    this.tlTrainingI = new TimelineLite();
    this.tlDiet = new TimelineLite();

    this.slide = 0;
    this.duration = 0.65;
    this.delayClose = 550;
};

Navigation.prototype.init = function() {

    this.bind("all");
};

Navigation.prototype.bind = function(action) {

    var self = this,
        el = self.el;

    switch (action) {
        case "day":

            this.tlAnatomy.clear();
            this.tlTraining.clear();
            this.tlTrainingI.clear();
            this.tlDiet.clear();
            var loadInOutAnatomy = function() {

                self.tlAnatomy.set("#anatomy-h2", {
                    autoAlpha: 1,
                    left: "0px",
                });
                self.tlAnatomy.set("#anatomy-h3", {
                    autoAlpha: 1,
                    top: "0px",
                });
                self.tlAnatomy.set("#anatomy-p", {
                    autoAlpha: 1,
                });
                self.tlAnatomy.set("#bt-iniciar", {
                    autoAlpha: 1,
                    scale: 1,
                });

                self.tlAnatomy.set("#anatomy-h2", {
                    autoAlpha: 0,
                    left: "75px",
                });
                self.tlAnatomy.set("#anatomy-h3", {
                    autoAlpha: 0,
                    top: "40px",
                });
                self.tlAnatomy.set("#anatomy-p", {
                    autoAlpha: 0,
                });
                self.tlAnatomy.set("#bt-iniciar", {
                    autoAlpha: 0,
                    scale: 1.5,
                });


                self.tlAnatomy.set('#bt-toggle-anatomy', {
                    autoAlpha: 0
                });


                self.tlAnatomy.to("#anatomy-h2", 0.25, {
                    autoAlpha: 1,
                    delay: 0.55,
                    left: "0px",
                    ease: Cubic.easeInOut
                });
                self.tlAnatomy.to("#anatomy-h3", 0.25, {
                    autoAlpha: 1,
                    top: "0px",
                    ease: Cubic.easeInOut
                }, "-=0.2");
                self.tlAnatomy.to("#anatomy-p", 0.25, {
                    autoAlpha: 1,
                }, "-=0.2");
                self.tlAnatomy.to("#bt-iniciar", 0.25, {
                    autoAlpha: 1,
                    scale: 1,
                }, "-=0.2");

                // (⊙_◎)
                self.tlAnatomy.to("#bt-toggle-anatomy", 0.25, {
                    autoAlpha: 1,
                }, "-=0.2");

                self.tlAnatomy.pause();
            };

            //Entrada salida entrenamiento
            var loadInOutTraining = function() {


                self.tlTrainingI.set([
                    "#dashboard-entrenamiento-instructions",
                    $("#dashboard-entrenamiento-instructionslist li .el")
                ], {
                    y: 0,
                    autoAlpha: 1,
                });

                self.tlTrainingI.set([
                    "#dashboard-entrenamiento-instructions",
                    $("#dashboard-entrenamiento-instructionslist li .el")
                ], {
                    y: 75,
                    delay: 0.35,
                    autoAlpha: 0,
                });


                TweenMax.set(
                    [
                        "#dashboard-entrenamiento-instructions",
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el0"),
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el1"),
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el2"),
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el3"),
                    ],{
                        y: 75,
                        autoAlpha: 0,
                    });

                self.tlTrainingI.staggerTo(
                    [
                        "#dashboard-entrenamiento-instructions",
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el0"),
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el1"),
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el2"),
                        $Entrenamiento.find("#dashboard-entrenamiento-instructionslist li .el3"),
                    ], 0.15, {
                        y: 0,
                        autoAlpha: 1,
                        ease: Cubic.easeOut,
                    }, 0.05);
                self.tlTrainingI.pause();




                TweenLite.set(["#bt-back-nav-training", "#bt-next-nav-training"], {
                    autoAlpha: 0,
                });
                self.tlTraining.set($("#dashboard-entrenamiento-instructionslist li .el"), {
                    y: 0,
                    autoAlpha: 1,
                });


                self.tlTraining.to(["#bt-back-nav-training", "#bt-next-nav-training"], 0.25, {
                    autoAlpha: 1,
                });

                //shame me
                TweenLite.set("#play-vimeo", {
                    autoAlpha: 0,
                    scale: 1.5,
                });


                self.tlTraining.to("#play-vimeo", .25, {
                    autoAlpha: 1,
                    scale: 1,
                    ease: Cubic.easeOut,
                });

                TweenLite.set(["#bt-dashboard-entrenamiento-exercices", "#bt-dashboard-entrenamiento-protip"], {
                    autoAlpha: 0,
                });
                self.tlTraining.to(["#bt-dashboard-entrenamiento-exercices", "#bt-dashboard-entrenamiento-protip"], .25, {
                    autoAlpha: 1,
                    ease: Cubic.easeOut,
                }, "-=0.15");


                TweenLite.set("#entrenamiento-list-videos", {right:"-375px"});
                self.tlTraining.to("#entrenamiento-list-videos", 0.25, {right:0}, "-=0.25");

                TweenLite.set("#bt-traininglist-up, #bt-traininglist-down", {autoAlpha: 1,} );

                TweenLite.set("#bt-traininglist-up span", {top: "26px"} );
                self.tlTraining.to("#bt-traininglist-up span", 0.25, {
                    top: "10px",
                    ease: Cubic.easeOut,
                });

                TweenLite.set("#bt-traininglist-down span", {top: "-26px"} );
                self.tlTraining.to("#bt-traininglist-down span", 0.25, {
                    autoAlpha: 1,
                    top: "-10px",
                    ease: Cubic.easeOut,
                 }, "-=0.25");


                self.tlTraining.pause();
                self.tlTraining.seek(2);
                self.tlTraining.reverse();
            };

            //Entrada salida de Dieta
            var loadInOutDiet = function() {


                TweenLite.set([
                    "#dashboard-comidas-headers",
                ], {
                    left: 0
                });
                

                TweenLite.set("#dashboard-comidas-nav .arrow-next-yellow", {
                    x: -24,
                });
                TweenLite.set("#dashboard-comidas-nav .arrow-prev-yellow", {
                    x: 24,
                });


                TweenLite.set("#diet-h2", {
                    autoAlpha: 0,
                    x: 300,
                });
                TweenLite.set("#diet-h3", {
                    autoAlpha: 0,
                    y: 25,
                });
                TweenLite.set("#dient-description", {
                    autoAlpha: 0,
                });

                TweenLite.set("#diet-h2", {
                    autoAlpha: 1,
                });


                self.tlDiet.to("#diet-h2", 0.45, {
                    delay: 0.35,
                    x: 0,
                    ease: Cubic.easeInOut
                });



                self.tlDiet.to("#diet-h3", 0.45, {
                    autoAlpha: 1,
                    y: 0,
                }, "-=0.35");

                self.tlDiet.to("#dient-description", 0.45, {
                    autoAlpha: 1,
                }, "-=0.35");

                

                self.tlDiet.staggerFromTo($Comidas.find('#list-colors li'), 0.25, {
                    autoAlpha: 0,
                    scale: 1.5,
                }, {
                    autoAlpha: 1,
                    scale: 1,
                    ease: Cubic.easeOut,
                }, 0.15, "-=0.35");

                _self= self;
                self.tlDiet.to(".slmfbanner_container", 0.45, {
                    autoAlpha: 1,
                    onComplete: function()
                    {
                        
                        Dashboard.bannersRotation = setInterval(function(){Dashboard.changeBanner();},10000);
                    },
                }, "-=0.35");

                // self.tlDiet.fromTo("#diet-slider", 0.25, {
                //     width: "0px",
                // }, {
                //     width: "390px",
                //     ease: Cubic.easeOut,
                // }, "-=0.25");
                self.tlDiet.fromTo("#diet-slider-bg", 0.25, {
                    x: -390,
                }, {
                    x: 0,
                    ease: Cubic.easeOut,
                }, "-=0.25");


                self.tlDiet.staggerFromTo([
                    $Comidas.find("#dashboard-comidas-scroll .pre .viewport ul"),
                    $Comidas.find("#dashboard-comidas-scroll .during .viewport ul"),
                    $Comidas.find("#dashboard-comidas-scroll .post .viewport ul"),
                ], 0.15, {
                    y: -875,
                }, {
                    y: 0,
                    ease: Cubic.easeOut,
                }, 0.1, "-=0.35");

                
                self.tlDiet.to("#dashboard-comidas-nav .arrow-next-yellow", 0.15,{
                    x: 0,
                },  "-=0.15");
                self.tlDiet.to("#dashboard-comidas-nav .arrow-prev-yellow", 0.15,{
                    x: 0,
                },  "-=0.15");

                self.tlDiet.staggerFromTo(
                    $Comidas.find("#dashboard-comidas-headers li"),
                    0.15, {
                        x: 125,
                        autoAlpha: 0,
                    }, {
                        x: 0,
                        autoAlpha: 1,
                        ease: Cubic.easeOut,
                    }, 0.1, "-=0.45");


                self.tlDiet.staggerFromTo(
                    $Comidas.find("#dashboard-comidas-scroll .meals .list"),
                    0.15, {
                        autoAlpha: 0,
                    }, {
                        autoAlpha: 1,
                        ease: Cubic.easeOut,
                        onComplete: function() {
                            $("body").removeClass("noSelect");
                        }
                    }, 0.1);

                self.tlDiet.pause();
            };

            loadInOutAnatomy();
            loadInOutTraining();
            loadInOutDiet();
            break;
        case "all":
            el.btClose
                .on('click', function(event) {
                    event.preventDefault();

                    self.animations({
                        action: "close"
                    });
                });

            el.btOpen
                .on('click', function(event) {
                    event.preventDefault();

                    self.animations({
                        action: "open"
                    });
                });

            self.el.btMenu
                .on('click', function(event) {
                    event.preventDefault();

                    self.animations({
                        action: "scroll",
                        slide: $(this).data("slide"),
                    });
                });

            self.el.btMenuNav
                .on('click', function(event) {
                    event.preventDefault();
                    self.animations({
                        action: "scroll",
                        delay: self.delayClose,
                        slide: $(this).data("slide"),
                    });
                });

            //Perdon por el codigo, estoy cansado
            // $(document).keydown(function(e) {
            //     var toSlide = false;

            //     switch (e.keyCode) {
            //         case 37: //left
            //             if (self.slide - 1 >= 0) {
            //                 toSlide = self.slide - 1;
            //                 self.animations({
            //                     action: "scroll",
            //                     slide: toSlide,
            //                 });
            //             };
            //             break;
            //         case 39: //right

            //             if (self.slide + 1 <= 3) {
            //                 toSlide = self.slide + 1;

            //             } else {
            //                 toSlide = 0;
            //             };
            //             self.animations({
            //                 action: "scroll",
            //                 slide: toSlide,
            //             });
            //             break;
            //     };

            //     return false;
            // });

            $Window.resize(function() {

                self.animations({
                    action: "snap",
                });
            });

            //Entrada salida de Info
            var loadInOutInfo = function() {

                self.tlInfo.to("#info-h3", 0.25, {
                    top: "15px",
                    autoAlpha: 0,
                    ease: Cubic.easeInOut,

                });
                self.tlInfo.to("#info-p", 0.25, {
                    autoAlpha: 0,
                    ease: Cubic.easeInOut,
                }, "-=0.25");
                self.tlInfo.to("#info-data", 0.25, {
                    autoAlpha: 0,
                    ease: Cubic.easeInOut,
                }, "-=0.25");

                self.tlInfo.to("#info-h1", 0.25, {
                    left: "-=400px",
                    // autoAlpha: 0,
                    ease: Cubic.easeInOut,

                }, "-=0.15");


                self.tlInfo.to("#bg-info", 0.65, {
                    x: $Window.width(),
                    ease: Cubic.easeInOut,

                }, "-=0.35");

                self.tlInfo.pause();
            };

            var loadInOutMenu = function() {

                self.tlMenu.set("#dashboard-overlay", {
                    css: {
                        display: "none"
                    }
                }, "-=0.05");

                self.tlMenu.to("#dashboard-overlay", 0.01, {
                    css: {
                        display: "block"
                    }
                }, "-=0.05");

                self.tlMenu.fromTo("#dashboard-overlay", 0.25, {
                    autoAlpha: 0,
                }, {
                    autoAlpha: 1,
                }, "-=0.05");

                self.tlMenu.staggerFromTo(el.btMenuNav, 0.15, {
                    scale: 1.4,
                    autoAlpha: 0,
                }, {
                    scale: 1,
                    autoAlpha: 1,
                }, 0.05)
                self.tlMenu.pause();
            };

            loadInOutInfo();
            loadInOutMenu();

            this.bind("day");
            break;
    };
};

Navigation.prototype.goTo = function(params) {
    var self = this;
    if (self.slide == params.slide) {
        return;
    };
    self.slide = params.slide;
    $Dashboard.addClass("animating");
    TweenLite.to(self.el.scroll, 0.65, {
        scrollTo: {
            x: self.el.scroll.width() * params.slide
        },
        ease: Cubic.easeInOut,
        onComplete: function() {
            $Dashboard.removeClass("animating");
        }
    });
}

Navigation.prototype.animations = function(params) {

    var self = this,

        next = function() {
            TweenLite.to(self.el.btMenu, 0.25, {
                autoAlpha: 0
            });
            TweenLite.to(self.el.scroll, self.duration, {
                scrollTo: {
                    x: (self.el.scroll.width() * self.slide)
                },
                ease: Cubic.easeInOut,
                onComplete: function() {
                    $Dashboard.removeClass("animating");
                    TweenLite.to(self.el.btMenu, 0.25, {
                        autoAlpha: 1
                    });
                    if (self.slide == 1 || self.slide == 2) {
                        calendar.show();
                    }
                }
            });
        };

    switch (params.action) {
        case "open":

            self.tlMenu.play();
            break;
        case "close":
            self.tlMenu.reverse();
            break;
        case "scroll":

            if ($Dashboard.hasClass("animating")) {
                return false;
            };
            $Dashboard.addClass("animating");
            self.animations({
                action: "close",
            });

            var from = self.slide;
            self.el.btMenuNav.removeClass('active');
            self.el.btMenuNav.eq(params.slide).addClass('active');
            self.slide = params.slide;

            params.delay = params.delay || 0;

            setTimeout(function() {

                switch (from) {
                    case 0:
                        self.tlInfo.play();
                        break;
                    case 1:
                        self.tlAnatomy.timeScale(2.3);
                        self.tlAnatomy.reverse();

                        if (from != self.slide) {

                            var left = $Window.width();
                            if (from > self.slide) {
                                left = $Window.width() * -1;
                            };
                            TweenLite.to("#anatomy-slides", 0.65, {
                                left: left + "px",
                                ease: Cubic.easeInOut,
                                onComplete: function() {
                                    setTimeout(function() {
                                        TweenLite.set("#anatomy-slides", {
                                            left: "0px"
                                        });
                                    }, 10);

                                }
                            });
                        } else {
                            TweenLite.set("#anatomy-slides", {
                                left: "0px"
                            });
                        }
                        break;
                    case 2:
                        self.tlTraining.timeScale(2.3);
                        self.tlTraining.reverse();

                        if (trainingVideo.settings.toPlay == "exercice") {

                            self.tlTrainingI.reverse();
                        };
                        break;
                    case 3:

                        self.tlDiet.timeScale(2.6);
                        self.tlDiet.reverse();
                        
                        clearInterval(Dashboard.bannersRotation);
                        var left = $Window.width() * -1;
                        if (from > self.slide) {
                            left = $Window.width();
                        };

                        TweenLite.set($Comidas.find("#dashboard-comidas-scroll .work .list"), {css: {"overflow": '<hidden></hidden>'}});

                        if (from != self.slide) {
                            TweenLite.fromTo("#diet-bg", 0.65, {
                                x: 0,
                            }, {
                                x: $Window.width() * -1,
                                ease: Cubic.easeInOut,
                                onComplete: function(){
                                    
                                    TweenLite.set($Comidas.find("#dashboard-comidas-scroll table td"), { x: 0 });
                                    TweenLite.set("#dashboard-comidas-headers", {left: 0 }); }
                            });
                        };
                        break;
                };
                switch (self.slide) {
                    case 0:
                        self.tlInfo.reverse();
                        break;
                    case 1:
                        self.tlAnatomy.timeScale(1);
                        self.tlAnatomy.play();

                        var left = $Window.width() * -1;
                        if (from > self.slide) {
                            left = $Window.width();
                        };
                        if ($Calendar.hasClass("new")) {
                            left = 0;
                            $Calendar.removeClass("new")
                        };
                        if (from != self.slide) {
                            TweenLite.fromTo("#anatomy-slides", 0.65, {
                                left: left + "px",
                            }, {
                                left: "0px",
                                ease: Cubic.easeInOut,
                            });
                        }
                        break;
                    case 2:
                        self.tlTraining.timeScale(1);
                        self.tlTraining.play();

                        if (trainingVideo.settings.toPlay == "exercice" || trainingVideo.settings.toPlay == "infographic") {

                            self.tlTrainingI.play();
                        };

                        // TweenLite.fromTo("#bt-traininglist-up", 0.25, {
                        //     autoAlpha: 1,
                        //     y: 20,
                        //     ease: Cubic.easeOut,
                        // }, {
                        //     y: 0,
                        // });

                        // TweenLite.fromTo("#bt-traininglist-down", 0.25, {
                        //     autoAlpha: 1,
                        //     y: -20,
                        //     ease: Cubic.easeOut,
                        // }, {
                        //     y: 0,
                        // });
                        break;
                    case 3:
                        $("body").addClass("noSelect");
                        self.tlDiet.timeScale(1);
                        self.tlDiet.play();

                        

                        var left = $Window.width() * -1;
                        if (from > self.slide) {
                            left = $Window.width();
                        };
                        if (from != self.slide) {
                            TweenLite.fromTo("#diet-bg", 0.65, {
                                x: $Window.width() * -1,
                            }, {
                                x: 0,
                                ease: Cubic.easeInOut,
                                onComplete: function(){
                                    
                                    $Comidas.find('#dashboard-comidas-nav .arrow-prev-yellow').addClass('null');
                                    $Comidas.find('#dashboard-comidas-nav .arrow-next-yellow').removeClass('null');
                                    meals.indexMeal = 0;
                                    
                                    TweenLite.set($Comidas.find("#dashboard-comidas-scroll .work .list"), {css: {"overflow": 'visible'}});
                                }
                            });
                        }
                        break;
                };

                if (self.slide != 1 && self.slide != 2) {

                    calendar.hide();
                };
                next();
            }, params.delay);

            break;
        case "snap":

            TweenLite.set(self.el.scroll, {
                scrollTo: {
                    x: self.el.scroll.width() * self.slide
                }
            });
            break;
    };
};

Calendar = function() {

    this.el = {
        container: $Calendar,
        containerTable: "", //$Calendar.find("table"),
        btDay: "", //$Calendar.find("td a"),
        btNav: $Dashboard.find(".bt-scroll-next-slide"),
    };
    this.actualDay = 0;
    this.data = {};
    this.scrollPosX = 0;
    this.updateTween = null;
    this.stoppingTween = null;
    this.scrollTween = null;
    this.centerTween = null;
    this.leftIntensity = 0;
    this.rightIntensity = 0;
    this.centerSelectedDay = false;
    this.isStopping = false;
    this.currentState = 0; //-1 = Going Left, 0 = Center, 1 = Going Right
    this.canGoLeft = true;
    this.canGoRight = true;
    this.scrollHandler = new ScrollHandler();
};

Calendar.prototype.init = function(data) {
    // console.log('-----------');
    // console.log('Calendar init()');
    // console.log(data);
    this.data = data || {};
    this.render();
    this.bind();
};

Calendar.prototype.render = function() {

    var self = this,
        el = self.el,
        content = "",
        countDays = 7,
        countWeeks = 1;

    for (var i = 1; i < self.data.days.length + 1; i++) {
    //for (var i = 1; i < 121; i++) {
        if (countDays == 7) {

            countDays = 1;

            content += '<td class="d-' + countDays + '"><h5 class="content"><span></span><span class="alpha-0">SEMANA ' + countWeeks + '</span>' + i + '</h5></td> ';

            countWeeks++;
        } else {
            countDays++;
            content += '<td class="d-' + countDays + '"><h5 class="content">' + i + '</h5></td> ';
        };
    };

    el.container
        .append('<table><tbody><tr>' + content + '</tr></tbody></table>');

    //Activa dia en que va
    el.containerTable = $Calendar.find("table");
    el.btDay = $Calendar.find("td h5");

    //.eq(self.data.home.actualDay - 1)
    el.btDay
        .eq(0)
        .addClass('active')
        .parent()
        .addClass('active');
    self.actualDay = 1;//self.data.home.actualDay - 1;

    var calendarWidth = $Calendar.width();
    var totalWidth = el.containerTable.width() - calendarWidth;
    var leftSpacerWidth = 0;
    var rightSpacerWidth = 0;

    var centerDay = function() {
        var currentDay = self.actualDay;
        // console.log(currentDay);

        if ($("#dashboard-calendar table tr td#left-spacer").length == 0) {

            $("#dashboard-calendar table tr td:first-child")
                .before('<td id="left-spacer" style="display: block;"></td>');

            $("#dashboard-calendar table tr td:last-child")
                .after('<td id="right-spacer" style="display: block;"></td>');
        }
        leftSpacerWidth = 0;
        rightSpacerWidth = 0;

        var targetScrollX = (currentDay * 76) - (calendarWidth / 2 - 35);
        if (targetScrollX < 0) {
            leftSpacerWidth = Math.abs(targetScrollX);
            targetScrollX = 0;
        }

        if (targetScrollX > totalWidth) {
            rightSpacerWidth = 0;
            TweenMax.set("#right-spacer", {
                width: rightSpacerWidth,
            });
            targetScrollX = totalWidth + rightSpacerWidth;
        }

        self.scrollPosX = targetScrollX;
        TweenMax.to("#dashboard-calendar", 0.6, {
            scrollTo: {
                x: targetScrollX
            },
        });

        TweenMax.to("#left-spacer", 0.6, {
            width: leftSpacerWidth,
        });
    }

    var setWidth = function() {
        el.container.css({
            width: $Anatomia.width()
        });
    };

    $Window.resize(function(event) {
        setWidth();
        calendarWidth = $Calendar.width();
        centerDay();
    });
    $Window.trigger('resize');

    var updateCursor = function() {
            $("#dashboard-calendar").removeClass('calendar-arrow-left').removeClass('calendar-arrow-right');
            if (self.leftIntensity > 0 && self.canGoLeft == true) {
                $("#dashboard-calendar").addClass('calendar-arrow-left');
            }

            if (self.rightIntensity > 0 && self.canGoRight == true) {
                $("#dashboard-calendar").addClass('calendar-arrow-right');
            }
        },
        killTweens = function() {
            self.updateTween && self.updateTween.kill();
            self.stoppingTween && self.stoppingTween.kill();
            self.scrollTween && self.scrollTween.kill();
            self.updateTween = null;
            self.stoppingTween = null;
            self.isStopping = false;
        },
        pauseTween = function(e) {
            if (self.updateTween && self.isStopping == false) {
                // console.log("PAUSING");
                self.isStopping = true;
                self.stoppingTween = TweenMax.to(self, 0.65, {
                    leftIntensity: 0,
                    rightIntensity: 0,
                    onComplete: function() {
                        killTweens();
                        if (self.centerSelectedDay) {
                            centerDay();
                        }
                    },
                    ease: Cubic.easeOut,
                })
            }
        },
        easeValue = function(val) {
            //circular easing
            return -1 * (Math.sqrt(1 - val) - 1);
        },
        updateSpeed = function(e) {
            var w = $Calendar.width();
            e.pageX = e.pageX - 95;
            //percent of each side from total window width
            var hitAreaWidth = w * (20 / 100);
            self.leftIntensity = e.pageX < hitAreaWidth ? easeValue(1 - (e.pageX / hitAreaWidth)) : 0;
            self.rightIntensity = Math.abs(w - e.pageX) < hitAreaWidth ? easeValue(1 - Math.abs(w - e.pageX) / hitAreaWidth) : 0;
            var oldState = self.currentState;
            self.currentState = self.leftIntensity == 0 && self.rightIntensity == 0 ? 0 : self.leftIntensity > 0 ? -1 : 1;
            //update cursor only if state changed
            if (self.currentState != oldState) {
                self.canGoLeft = true;
                self.canGoRight = true;
                updateCursor();
            }
        },
        startTween = function() {
            killTweens();
            self.centerSelectedDay = false;
            self.updateTween = TweenMax.to("#dashboard-calendar", 0.65, {
                repeat: -1,
                onUpdate: update
            });
            // console.log("STARTING");
        },
        update = function(e) {
            //Truncate intensity limits
            self.leftIntensity = self.canGoLeft ? self.leftIntensity : 0;
            self.rightIntensity = self.canGoRight ? self.rightIntensity : 0;
            self.leftIntensity = Math.min(1, Math.floor(self.leftIntensity * 100) / 100);
            self.rightIntensity = Math.min(1, Math.floor(self.rightIntensity * 100) / 100);
            self.scrollPosX += self.leftIntensity > 0 ? -20 * self.leftIntensity : 20 * self.rightIntensity;


            // console.log("scroll: ", self.scrollPosX, self.leftIntensity);
            //limit to scroll max and mins
            if (self.scrollPosX < 0) {
                self.leftIntensity = 0;
                self.scrollPosX = 0;
                self.canGoLeft = false;
                updateCursor();
            }

            if (self.scrollPosX > totalWidth + leftSpacerWidth + rightSpacerWidth + 86) {
                self.rightIntensity = 0;
                self.scrollPosX = totalWidth + leftSpacerWidth + rightSpacerWidth + 86;
                self.canGoRight = false;
                updateCursor();

            }
            $("#dashboard-calendar").scrollLeft(self.scrollPosX);
        };

    self.scrollHandler.onScrollDown(function() {
        self.scrollTween && self.scrollTween.kill();
        self.scrollTween = TweenMax.to(self, 0.5, {
            scrollPosX: "+=200"
        });
    });

    self.scrollHandler.onScrollUp(function() {
        self.scrollTween && self.scrollTween.kill();
        self.scrollTween = TweenMax.to(self, 0.5, {
            scrollPosX: "-=200"
        });
    });

    $Window.blur(pauseTween);
    $Calendar.on({
        mouseenter: startTween,
        mouseleave: pauseTween,
        mousemove: updateSpeed
    });

    $Calendar.mouseleave(function(event) {
        self.centerSelectedDay = true;
    });
};

Calendar.prototype.bind = function() {
    var self = this,
        el = self.el;

    el.btDay
        .on('click', function(event) {
            event.preventDefault();
            if (!el.container.hasClass("animating") &&
                !$(this).hasClass("active") &&
                (self.currentState == 0 ||
                    self.currentState == -1 && self.canGoLeft == false ||
                    self.currentState == 1 && self.canGoRight == false)) {

                self.show();
                el.btDay
                    .removeClass('active')
                    .parent()
                    .removeClass('active');
                $(this)
                    .addClass('active')
                    .parent()
                    .addClass('active');
                self.actualDay = $(this).parent().index() - 1;

                self.animations({
                    action: "change-day"
                });

            }
        });
    el.container
        .hover(function() {
            self.animations({
                action: "mouseenter"
            });
        }, function() {
            self.animations({
                action: "mouseleave"
            });
        });

    $("#bt-feed")
        .on("click", function(event) {
        event.preventDefault();

        self.scrollHandler.setActive(false);
    });

    $("#community-close")
        .on("click", function(event) {
        event.preventDefault();

        self.scrollHandler.setActive(true);
    });
};

Calendar.prototype.show = function() {
    this.animations({
        action: "show"
    });
};

Calendar.prototype.hide = function(onComplete) {
    this.animations({
        action: "hide",
        onComplete: onComplete,
    });
};

Calendar.prototype.animations = function(params) {

    var self = this,
        el = self.el;

    switch (params.action) {
        case "show":


            TweenLite.set("#dashboard-calendar-line", {
                autoAlpha: 1,
            });
            TweenLite.to("#dashboard-calendar-line", 0.75, {
                height: "4px",
            });
            // TweenLite.set("#dashboard-calendar-line", 0.01, {
            //     height: "4px",
            // });
            TweenLite.to(el.container, 0.25, {
                bottom: 0,
                ease: Cubic.easeOut,
            });
            break;
        case "hide":
            TweenLite.set("#dashboard-calendar-line", {
                autoAlpha: 0,
            });
            TweenLite.to(el.container, 0.25, {
                bottom: -100,
                ease: Cubic.easeOut,
                onComplete: function() {
                    params.onComplete
                },
            });
            break;
        case "change-day":

            // console.log('Calendar animation change-day', self.actualDay);
            el.container.addClass('animating');
            anatomy.animations({
                action: "loadDay",
                onComplete: function() {
                    Dashboard.loadDay(self.actualDay);
                    navigation.tlAnatomy.seek(1);
                    setTimeout(function() {

                        el.container.removeClass('animating');
                    }, 1500);
                }
            });
            navigation.goTo({
                slide: 1,
            });

            break;
        case "mouseenter":

            TweenLite.to(el.container.find("span"), 0.15, {
                autoAlpha: 1,
                ease: Cubic.easeOut,
            });
            TweenLite.to(el.btNav, 0.15, {
                marginTop: "-147px",
                ease: Cubic.easeOut,
            });
            TweenLite.to([
                el.container,
                el.container.find("table"),

            ], 0.35, {
                height: "88px",
                ease: Back.easeOut,
            });
            TweenLite.to(
                el.container.find(".content"),
                0.15, {
                    paddingTop: "14px",
                    paddingBottom: "14px",
                    ease: Cubic.easeOut,
                });
            TweenLite.to(
                el.container.find(".content"),
                0.35, {
                    fontSize: "37px",
                    ease: Back.easeOut,
                });

            TweenLite.to(
                el.container.find(".bg"),
                0.15, {
                    autoAlpha: 0.18,
                    ease: Cubic.easeOut,
                });
            break;
        case "mouseleave":

            TweenLite.to(el.container.find("span"), 0.35, {
                autoAlpha: 0,
                ease: Cubic.easeOut,
            });
            TweenLite.to(el.btNav, 0.35, {
                marginTop: "-120px",
                ease: Cubic.easeOut,
            });
            TweenLite.to(
                el.btDay.find("h5"),
                0.35, {
                    fontSize: 30,
                    ease: Cubic.easeOut,
                });

            TweenLite.to([
                el.container,
                el.container.find("table"),
                el.container.find(".content"),
            ], 0.35, {
                height: "61px",
                ease: Cubic.easeOut,
            });
            TweenLite.to(
                el.container.find(".content"),
                0.35, {
                    paddingTop: "0px",
                    paddingBottom: "0px",
                    fontSize: "25px",
                    ease: Cubic.easeOut,
                });
            TweenLite.to(
                el.container.find(".bg"),
                0.35, {
                    autoAlpha: 0,
                    ease: Cubic.easeOut,
                });
            break;
    };
};


Intro = function() {

    this.el = {
        bg: $Dashboard.find("#dashboard-scroll"),

        btBack: $Info.find("#bt-back-section"),
        btNext: $Info.find("#bt-next-info"),
        btMenu: $Dashboard.find("#dashboard-menu"),

        shapeLeft: $Info.find(".diagonal-left"),
        shapeRight: $Info.find(".shape-right"),

        h1: $Info.find("h1"),
        h3: $Info.find("h3"),
        p: $Info.find("p"),
        dataList: $Info.find("ul.data li"),
    };
    this.tl = new TimelineLite();
    this.onComplete = function() {};
};

Intro.prototype.init = function() {

    this.animate();
};

Intro.prototype.animate = function() {

    var self = this,
        el = self.el,
        tl = self.tl;

    tl.set([
        el.h1.find("span.first"),
        el.h1.find("span.second"),
        el.h3
    ], {
        autoAlpha: 0,
    })

    tl.to(el.bg, 0.45, {
        autoAlpha: 1,
        ease: Linear.easeNone,
        onComplete: self.onComplete
    });
    tl.fromTo(el.shapeRight, 0.45, {
        right: "-=2000px",
    }, {
        right: "+=2000px",
        ease: Cubic.easeOut
    });
    tl.fromTo(el.shapeLeft, 0.45, {
        left: "-=4000px",
    }, {
        left: "-2445px",
        ease: Cubic.easeOut
    }, "-=0.45");

    tl.fromTo(el.btBack, 0.45, {
        autoAlpha: 0,
    }, {
        autoAlpha: 1,
        ease: Linear.easeNone,
    }, "-=0.15");

    tl.set(el.h1.find("span.first"), {
        autoAlpha: 1,
    }, "-=0.15");

    tl.fromTo(el.h1.find("span.first"), 0.45, {
        left: "-=200px",
    }, {
        left: "+=200px",
        ease: Cubic.easeOut,
    }, "-=0.15");

    tl.set(el.h1.find("span.second"), {
        autoAlpha: 1,
    }, "-=0.35");

    tl.fromTo(el.h1.find("span.second"), 0.45, {
        left: "-=300px",
    }, {
        left: "+=300px",
        ease: Cubic.easeOut,
    }, "-=0.35");


    tl.set(el.h3, {
        autoAlpha: 1,
    }, "-=0.35");

    tl.fromTo(el.h3, 0.45, {
        left: "-=600px",
    }, {
        left: "+=600px",
        ease: Cubic.easeOut,
    }, "-=0.35");

    tl.fromTo(el.p, 0.45, {
        top: 90,
    }, {
        top: 0,
        ease: Cubic.easeOut,
    }, "-=0.2");

    tl.staggerFromTo(el.dataList, 0.35, {
        autoAlpha: 0,
        scale: 1.5
    }, {
        autoAlpha: 1,
        scale: 1,
        ease: Cubic.easeOut,
    }, 0.15, "-=0.35");


    tl.fromTo(el.btNext, 0.45, {
        autoAlpha: 0,
    }, {
        autoAlpha: 1,
        ease: Linear.easeNone
    });
    tl.fromTo(el.btMenu, 0.45, {
        autoAlpha: 0,
    }, {
        autoAlpha: 1,
        ease: Linear.easeNone
    }, "-=0.45");
};


Anatomy = function(muscleGroups) {
    this.el = {
        btNavDashboard: $Dashboard.find(".bt-scroll-next-slide, #dashboard-menu"),

        diagonalLeft: $Anatomia.find(".diagonal-left"),
        diagonalRight: $Anatomia.find(".shape-right"),

        header: $Anatomia.find("header"),
        headerTitle: $Anatomia.find("h2"),
        headerSubtitle: $Anatomia.find("h3"),
        headerContent: $Anatomia.find("header p, header a"),

        hp: $Anatomia.find(".slides .slide .hp"),
        container: $Anatomia.find(".container-body"),

        slideBg: $Anatomia.find(".container-body .slide .slide-bg"),
        slideBgImg: $Anatomia.find(".container-body .slide .slide-bg img"),
        slideBg0: $Anatomia.find(".container-body .slide .slide-bg-0"),
        // slideBg1: $Anatomia.find(".container-body .slide .slide-bg-1"),
        list: $Anatomia.find(".container-body .nav-anatomy"),
        calendar: $Dashboard.find("#dashboard-calendar"),
        leftLink: $Dashboard.find('#bt-next-anatomy'),
        rightLink: $Dashboard.find('#bt-prev-anatomy'),

        //Muscles View
        btToggleAnatomy: $Dashboard.find('#bt-toggle-anatomy'),
        btCloseAnatomy: $Dashboard.find('#bt-close-anatomy'),
        musclesContainer: $Anatomia.find('.muscles-info'),
        musclesSpotsContainer: $Anatomia.find('.muscles-info .spots-group'),
        musclesTitle: $Anatomia.find('.muscles-info h2.muscles-title'),
        login: $('#login'),
    };
    this.muscleGroups = muscleGroups;
    this.data = {};
    this.indexActive = 0;
    this.tl = new TimelineLite();
    this.renderMuscleGroups();
    this.bind();
};

Anatomy.prototype.renderMuscleGroups = function() {
    
    $('#anatomy-slides')
        .html('');

    $.each(this.muscleGroups, function(index, val) {

        $('#anatomy-slides')
            .append('<div class="slide"> <div class="slide-left"></div> <div class="slide-right"> <div class="slide-bg slide-bg-0"> <img src="' + val.srcImg + '" alt="" class="center-horizontal"> </div> </div> </div>');
    });

    this.el.slides = $Anatomia.find(".container-body .slide");
    this.el.slideLeft = $Anatomia.find(".container-body .slide-left");
    this.el.slideRight = $Anatomia.find(".container-body .slide-right");
};

Anatomy.prototype.toggleControls = function(visible) {
    var activeSlide = $Anatomia.find('.slide.active');
    var slideLeft = activeSlide.find('.slide-left');
    var slideRight = activeSlide.find('.slide-right');
    var widthDiagonalLeft = this.el.diagonalLeft.get(0).getBoundingClientRect();

    if (visible) {
        // hide all controls and navigation
        TweenLite.to(this.el.header, 0.3, {autoAlpha: 0});
        TweenLite.to(this.el.calendar, 0.3, {y: 100});
        TweenLite.to(this.el.rightLink, 0.3, {autoAlpha: 0});
        TweenLite.to(this.el.leftLink, 0.3, {autoAlpha: 0});
        TweenLite.to(this.el.login, 0.3, {autoAlpha: 0});
        TweenLite.to(this.el.diagonalLeft, 0.3, {left: '-4080px'});
        TweenLite.to(this.el.diagonalRight, 0.3, {right: '-870px'});
        TweenLite.to(slideLeft, 0.3, {width: '0%'});
        TweenLite.to(slideRight, 0.3, {width: '100%'});


        // show close button
        TweenLite.set(this.el.btCloseAnatomy, {
            autoAlpha: 1,
            delay: 0.1
        });

        TweenLite.fromTo(this.el.btCloseAnatomy, 0.2, {
            x: -50
        }, {
            x: 0,
            delay: 0.1,
            ease: Cubic.easeOut
        });

        // show title
        _.each( this.el.musclesTitle.find('span, div').get(), function(el, idx) {
            TweenLite.set(el, {y: 50, autoAlpha: 0});
            _.delay(function() {
                    TweenLite.set(el, {autoAlpha: 1});
                    TweenLite.to(el, 0.3 - idx * 0.03, {
                        y: 0,
                        ease: Cubic.easeOut
                    }
                );    
            }, 250 + idx * 75);
        });
        TweenLite.set(this.el.musclesTitle, {autoAlpha: 1});

         // show spots
        var spots = this.el.musclesSpotsContainer.find('.spot').get().reverse();
        TweenLite.set(this.el.musclesContainer.find('.bg-fill'), {autoAlpha: 0});
        _.each(spots, function(spot, idx) {
            TweenLite.set(spot, {autoAlpha: 0});
            _.delay(function() {
                TweenLite.fromTo(spot, 0.2, {
                    scaleX: 2.5,
                    scaleY: 2.5,
                    autoAlpha: 0
                }, {
                    scaleX: 1,
                    scaleY: 1,
                    autoAlpha: 1,
                    ease: Cubic.easeOut
                });

                // blink
                TweenLite.fromTo($(spot).find('.bg-fill'), 0.2, {
                    autoAlpha: 0.7,
                }, {
                    autoAlpha: 0,
                    ease: Cubic.easeOut
                });
            }, 380 + idx * 125);
            
        });

        // containers
        TweenLite.set(this.el.musclesContainer, {autoAlpha : 1} );
        TweenLite.set(this.el.musclesSpotsContainer, {autoAlpha: 1});
        $('.dashboard-anatomia-min').css('min-width', 0);

    } else {

        TweenLite.to(this.el.header, 0.3, {autoAlpha: 1});
        TweenLite.to(this.el.calendar, 0.3, {y: 0});
        TweenLite.to(this.el.rightLink, 0.3, {autoAlpha: 1, x: 0});
        TweenLite.to(this.el.leftLink, 0.3, {autoAlpha: 1, x: 0});
        TweenLite.to(this.el.login, 0.3, {autoAlpha: 1});
        TweenLite.to(this.el.diagonalLeft, 0.3, {left: '-2770px'});
        TweenLite.to(this.el.diagonalRight, 0.3, {right: '-486px'});
        TweenLite.to(slideLeft, 0.3, {width: '33%'});
        TweenLite.to(slideRight, 0.3, {width: '66.6%'});
        TweenLite.set(this.el.btCloseAnatomy, {autoAlpha: 0});
        TweenLite.to(this.el.musclesContainer, 0.1, {autoAlpha : 0});
        TweenLite.to(this.el.musclesSpotsContainer, 0.1, {autoAlpha: 0});
        TweenLite.to(this.el.musclesTitle, 0.1, {autoAlpha: 0});
        $('.dashboard-anatomia-min').attr('style', '');
    }
}

Anatomy.prototype.openAnatomyView = function() {
    this.toggleControls(true);
    this.onResize();
}

Anatomy.prototype.closeAnatomyView = function() {
    this.toggleControls(false);
}

Anatomy.prototype.setAnatomyTitle = function(title) {
    var words = title.split(' ');
    var firstWord = '<span>{0}</span><br>'.format(words.shift());
    this.el.musclesTitle.empty();
    var remainWords = '';
    _.each(words, function(value) {
        remainWords += '<div class="wline">' + value + '</div>';
    });
    this.el.musclesTitle.html(firstWord + remainWords);
}

Anatomy.prototype.init = function(data) {
    this.data = data || {};
    this.indexActive = this.data.indexMuscleGroups;
    this.sectionTitle = this.muscleGroups[this.indexActive].title;
    //this.data.isRestDay
    //TODO: Replace with data.spotsArray or something like that when API is ready
    TweenLite.set(this.el.musclesContainer, {autoAlpha : 0});
    this.clearSpots();
    this.setAnatomyTitle(this.sectionTitle);
    //console.log('Muscle Index:',this.indexActive);
    
    var muscleFixtures = [
        [ // 0 GENERAL HIDDEN
            {
                xPercent: 999,
                yPercent: 999,
                title: 'DELTOIDE',
                description: 'Rota, eleva y retracta el homoplato.',
                bgImage: 'muscle_a.png'
            },
        ],
        [// 1 TREN SUPERIOR POSTERIOR
            {
                xPercent: 40,
                yPercent: 45,
                title: 'TRAPECIO',
                description: 'Es rotador y elevador de la cabeza.',
                bgImage: 'muscle_c.png'
            },
            {
                xPercent: 82,
                yPercent: 48,
                title: 'TRICEP',
                description: 'Principal extensor del antebrazo en la articulación del codo.',
                bgImage: 'muscle_d.png'
            },
            {
                xPercent: 61,
                yPercent: 60,
                title: 'REDONDOS',
                description: 'Participa en la rotación interna, en la aducción y en la retroversión.',
                bgImage: 'muscle_e.png'
            },
            {
                xPercent: 33,
                yPercent: 66,
                title: 'DORSAL',
                description: 'El dorsal ancho es un extensor del hombro y también un aproximador.',
                bgImage: 'muscle_a.png'
            },
            {
                xPercent: 57,
                yPercent: 77,
                title: 'LUMBAR',
                description: 'Inflexión y extensión de la columna lumbar.',
                bgImage: 'muscle_b.png'
            },
            {
                xPercent: 36,
                yPercent: 86,
                title: 'OBLICUO',
                description: 'Su función es la de espirador; flexor y rotador del tórax.',
                bgImage: 'muscle_c.png'
            }
        ],
        [ // 2 FRONT_SUP
            {
                xPercent: 40,
                yPercent: 13,
                title: 'TRAPECIO',
                description: 'Es rotador y elevador de la cabeza.',
                bgImage: 'muscle_a.png'
            },
            {
                xPercent: 80,
                yPercent: 25,
                title: 'DELTOIDE',
                description: 'Rota, eleva y retracta el homoplato.',
                bgImage: 'muscle_b.png'
            },
            {
                xPercent: 60,
                yPercent: 37,
                title: 'PECTORAL',
                description: 'Rotación medial, flexión y aducción de hombro.',
                bgImage: 'muscle_c.png'
            },
            {
                xPercent: 23,
                yPercent: 46,
                title: 'BICEP',
                description: 'Produce flexión, abducción, supinación sobre cintura escapular y codo.',
                bgImage: 'muscle_d.png'
            },
            {
                xPercent: 33,
                yPercent: 59,
                title: 'SERRATOS',
                description: 'Permite la elevación del brazo más allá de la horizontal.',
                bgImage: 'muscle_d.png'
            },
            {
                xPercent: 55,
                yPercent: 67,
                title: 'ABDOMINAL',
                description: 'Su función es la de espirador; flexor y rotador del tórax.',
                bgImage: 'muscle_e.png'
            },
            {
                xPercent: 20,
                yPercent: 67,
                title: 'FLEXOR',
                description: 'Flexor principal de la muñeca, con tendencia a su abducción.',
                bgImage: 'muscle_a.png'
            },
        ],
        [ // 3
            {
                xPercent: 38,
                yPercent: 12,
                title: 'GLÚTEO MEDIO',
                description: 'Abductor y rotatorio del fémur.',
                bgImage: 'muscle_a.png'
            },
            {
                xPercent: 56,
                yPercent: 19,
                title: 'GLÚTEO MAYOR',
                description: 'Rotación externa y extensión de la cadera.',
                bgImage: 'muscle_b.png'
            },
            {
                xPercent: 64,
                yPercent: 34,
                title: 'FEMORAL',
                description: 'Flexor de la pierna sobre el muslo, a la vez que la rota hacia fuera.',
                bgImage: 'muscle_b.png'
            },
            {
                xPercent: 32,
                yPercent: 58,
                title: 'GEMELO',
                description: 'Provoca la flexión plantar del pie. Principal propulsor al inicio de la marcha.',
                bgImage: 'muscle_b.png'
            },
            {
                xPercent: 34,
                yPercent: 69,
                title: 'SÓLEO',
                description: 'Flexión plantar o extensión del pie y la elevación del talón en la bipedestación.',
                bgImage: 'muscle_b.png'
            },
        ],
        [ // 4 INFERIOR FRONTAL
            {
                xPercent: 36,
                yPercent: 36,
                title: 'CUADRICEP',
                description: 'Extensor máximo de la rodilla. El recto femoral también es flexor de la cadera.',
                bgImage: 'muscle_c.png'
            },
            {
                xPercent: 52,
                yPercent: 30,
                title: 'ABDUCTOR',
                description: 'Aducción, rotación y flexión del fémur, estabiliza pelvis y columna vertebral.',
                bgImage: 'muscle_d.png'
            },
            {
                xPercent: 52,
                yPercent: 66,
                title: 'GEMELOS',
                description: 'Provoca la flexión plantar del pie. Principal propulsor al inicio de la marcha.',
                bgImage: 'muscle_b.png'
            },
            {
                xPercent: 38,
                yPercent: 75,
                title: 'SOLEO',
                description: 'Flexión plantar o extensión del pie y la elevación del talón en la bipedestación.',
                bgImage: 'muscle_a.png'
            },
        ],
    ];

    this.loadSpots(muscleFixtures[this.indexActive]);
    
    this.render();
};

Anatomy.prototype.unbind = function() {
    var el = this.el;
    el.container.unbind('mousemove');
    $("#dashboard-anatomia-min").css("z-index", "11")
};

Anatomy.prototype.render = function() {

    var self = this,
        el = self.el;

    self.indexActive = self.data.indexMuscleGroups;
    el.headerTitle
        .find("span.bottom")
        .html("")
        .append(self.data.nameDay);

    el.headerSubtitle
        .html("")
        .append(self.muscleGroups[self.indexActive].title);

    el.header
        .find("p")
        .html("")
        .append(self.muscleGroups[self.indexActive].description);

    el.slides.removeClass('active');
    el.slides.eq(self.indexActive).addClass('active');

    var isBtDisplayRestDay = 'block';
    if(this.data.isRestDay === true){
        isBtDisplayRestDay = 'none';
    }
    $('#bt-prev-anatomy').css({"display":isBtDisplayRestDay});
    $('#bt-iniciar').css({"display":isBtDisplayRestDay});
    $('#bt-toggle-anatomy').css({"display":isBtDisplayRestDay});
};

Anatomy.prototype.onResize = function() {
    // Match active slide image width with hostspots container
    var activeSlideImage = $Anatomia.find('.slide.active img');
    this.el.musclesSpotsContainer.css('width', activeSlideImage.width());
    this.el.musclesSpotsContainer.css('height', activeSlideImage.height());
}

Anatomy.prototype.toggleSpotElement = function(spotElement, visible) {
    TweenMax.killChildTweensOf(spotElement);
    if (visible) {
        TweenMax.set(spotElement.find('.cross'), {autoAlpha: 0});
        TweenMax.fromTo(spotElement.find('.bg'), 0.18,
        {
            scaleX: 1.3,
            scaleY: 1.3,
            opacity: 0
        },
        {
            scaleX: 1,
            scaleY: 1,
            opacity: 1,
            ease: Cubic.easeOut,
            delay: 0.1
        }
        );
        TweenMax.to(spotElement, 0.18, { css: {
            'border-color': 'yellow',
            width: '164px',
            height: '164px',
            marginLeft: '-82px',
            marginTop: '-82px'
        }, ease: Cubic.easeOut });
        TweenMax.fromTo(spotElement.find('h3, p'), 0.11,
            {autoAlpha: 0, scaleX: 1.15, scaleY: 1.15 },
            {autoAlpha: 1, scaleX: 1, scaleY: 1, delay: 0.1, ease: Power2.easeIn }
        );
    } else {

        TweenMax.to(spotElement.find('.bg'), 0.3, {
            opacity: 0
        });

        TweenMax.fromTo(spotElement.find('.cross'), 0.25, {
            scaleX: 0.1,
            scaleY: 0.1,
            autoAlpha: 0
        },{
            autoAlpha: 1,
            scaleX: 1,
            scaleY: 1,
            ease: Cubic.easeOut,
            delay: 0.15
        });
        TweenMax.to(spotElement, 0.2, { css: {
            'border-color': 'white',
            width: '19px',
            height: '19px',
            marginLeft: '0px',
            marginTop: '0px'
        }, ease: Cubic.easeOut, delay: 0.08 });
        TweenMax.to(spotElement.find('h3, p'), 0.15, {autoAlpha: 0, scaleX: 1.15, scaleY: 1.15});
    }
}

Anatomy.prototype.createSpotElement = function(params) {
    var self = this;
    
    //Sanitize params
    params = params || {};
    params.xPercent = params.xPercent || 0;
    params.yPercent = params.yPercent || 0;
    params.title = params.title || "No Title";
    params.description = params.description || 'No description';
    params.bgImage = params.bgImage;

    // Create HTML struct element
    var crossElement = $('<div class="cross"><div class="cross-v"></div><div class="cross-h"></div></div>');
    var spotElement = $('<a href="#" class="spot circle"><div class="bg"></div><div class="bg-fill"></div>' +
        '<div class="description"><div class="v-center"><h3>{0}</h3> <p>{1}</p></div></div></a>'
        .format(params.title, params.description));
    spotElement.css({top: params.yPercent + '%', left: params.xPercent + '%'});
    spotElement.find('.bg').css({
        backgroundImage: 'url(/Content/img/dashboard/anatomia/{0})'.format(params.bgImage)
    })
    TweenMax.set(spotElement.find('h3, p'), {autoAlpha: 0});
    spotElement.prepend(crossElement);
    
    // Attach mouse events
    spotElement.hover(function() {
        self.toggleSpotElement(spotElement, true);
    }, function() {
        self.toggleSpotElement(spotElement, false);
    });

    spotElement.click(function(e) {
        e.preventDefault();
    })
    return spotElement;
}

Anatomy.prototype.clearSpots = function() {
    this.el.musclesSpotsContainer.find('.spot').off();
}

Anatomy.prototype.loadSpots = function(spotsArray) {
    var self = this;
    self.el.musclesSpotsContainer.empty();
    _.each(spotsArray, function(spot, idx) {
        var spotElement = self.createSpotElement(spot);
        self.el.musclesSpotsContainer.append(spotElement);
    });

}

Anatomy.prototype.bind = function() {
    var self = this,
        el = self.el;

    self.el.btToggleAnatomy.off().on('click', function(e) {
        self.openAnatomyView();
        e.preventDefault();
    });

    self.el.btCloseAnatomy.off().on('click', function(e) {
        self.closeAnatomyView();
        e.preventDefault();
    });

    $(window).resize(function() {
        self.onResize();
    }).trigger('resize');
};

Anatomy.prototype.animations = function(params) {

    // ٩(^ᴗ^)۶ Touch down
    var self = this,
        el = self.el;

    // Cambia apuntador a slide activo
    var changeIndex = function(index) {

        el.slides.removeClass('active');
        el.slides.eq(index).addClass('active');

        el.slideIn = $Anatomia.find(".container-body .slides .active");
        
        self.tl.set(el.slides, {
            css: {
                display: "none"
            }
        })

    };

    // Muestra datos del slide
    var showContent = function(onComplete) {

        self.tl.set([el.slideInHeader, el.list, el.slideInTitle, el.slideInContent, el.slideIn], {
            css: {
                display: "block"
            }
        });

        onComplete();
    };

    switch (params.action) {


        case "loadDay":

            var hide = function() {
                // desaparece los elementos
                self.tl.to(el.slideRight, 0.45, {
                    autoAlpha: 0,
                    ease: Cubic.easeOut,
                });
                self.tl.to("#dashboard-anatomia-header", 0.45, {
                    autoAlpha: 0,
                }, "-=0.45")

                // cambia fondo
                self.tl.set(el.slideBg0, {
                    autoAlpha: 1,
                    onComplete: function(){
                        // inhabilita los elementos
                        params.onComplete();

                        // Cambia apuntador a elementos activos
                        changeIndex(self.indexActive);

                        // abilita los elementos activos
                        self.tl.set(el.slideIn, {
                            css: {
                                display: "block"
                            }
                        });

                        self.tl.to(el.slideIn, 0.45, {
                            autoAlpha: 1,
                            ease: Linear.easeNone,
                        });

                        self.tl.to(el.slideRight, 0.55, {
                            autoAlpha: 1,
                            ease: Cubic.easeOut,
                        }, "-=0.25");
                        self.tl.to(el.container, 0.55, {
                            width: "100%",
                            ease: Cubic.easeOut,
                        }, "-=0.55");



                        self.tl.set(el.header, {
                            autoAlpha: 1,
                            ease: Cubic.easeOut,
                        }, "-=0.15");
                        self.tl.set(el.header, {
                            css: {
                                display: "block"
                            },
                        }, "-=0.15");
                        self.tl.fromTo(el.headerTitle, 0.25, {
                            autoAlpha: 1,
                            x: -200
                        }, {
                            x: 0,
                            ease: Cubic.easeOut,
                        }, "-=0.15");
                        self.tl.set(el.headerSubtitle, {
                            autoAlpha: 1,
                            x: -200
                        }, "-=0.25");

                        
                        // console.log(el.headerSubtitle);
                        self.tl.to(el.headerSubtitle, 0.25, {
                            x: 0,
                            ease: Cubic.easeOut,
                        }, "-=0.25");

                        

                        self.tl.to([el.headerContent, el.btNavDashboard], 0.25, {
                            autoAlpha: 1,
                            ease: Cubic.easeOut,
                            onComplete: function() {
                                self.tl.clear();
                                $Entrenamiento.removeClass('animating');

                            }
                        });
                    }
                });

            };

            $Entrenamiento.addClass('animating');
            hide();
            break;

        case "show":

            calendar.hide();
            $Entrenamiento.addClass('animating');

            //quita navegacion de dashboard
            self.tl.to(el.btNavDashboard, 0.35, {
                autoAlpha: 0,
            });

            //quita los shapes
            self.tl.to(el.diagonalLeft, 0.65, {
                left: "-6770px",
                ease: Cubic.easeOut,
            }, "-=0.35");
            self.tl.to(el.diagonalRight, 0.65, {
                right: "-4486px",
                ease: Cubic.easeOut,
            }, "-=0.65");
            self.tl.set([el.diagonalLeft, el.diagonalRight], {
                css: {
                    display: "none",
                },
            })

            //quita header
            self.tl.to(el.header, 0.45, {
                autoAlpha: 0,
                ease: Cubic.easeOut,
            }, "-=0.45");
            self.tl.set(el.header, {
                css: {
                    display: "none"
                },
            })


            //cambia fondo
            self.tl.to(el.slideBg0, 0.35, {
                autoAlpha: 0,
                ease: Cubic.easeOut,
            });
            // self.tl.to(el.slideBg1, 0.35, {
            //     autoAlpha: 1,
            //     ease: Cubic.easeOut,
            // }, "-=0.35");

            self.tl.set($Entrenamiento, {
                onComplete: function() {

                    anatomyHotspot.showAll(el.slideIn.index(), function() {

                        //expande el contenedor
                        self.tl.to(el.container, 0.25, {
                            width: "150%",
                            left: "0%",
                        });

                        self.tl.to(el.slideRight, 0.25, {
                            left: "-5%"
                        }, "-=0.25");

                        self.tl.set([
                            el.headerTitle,
                            el.headerSubtitle,
                            el.headerContent
                        ], {
                            autoAlpha: 0,
                            onComplete: function() {
                                showContent(function() {
                                    self.tl.clear();
                                    $Entrenamiento.removeClass('animating');
                                    self.bind("panning");
                                });
                            }
                        });

                    });
                }
            })

            break;

        case "hide":
            params.onComplete = params.onComplete || function() {};
            var hide = function() {

                //scroll a la izquierda
                self.unbind();
                self.tl
                    .to(
                        $Anatomia, 0.15, {
                            scrollTo: {
                                x: 0
                            },
                            ease: Cubic.easeOut,
                        });

                //desaparece los elementos
                self.tl.to(el.slideRight, 0.45, {
                    left: "100%",
                    ease: Cubic.easeOut,
                });
                self.tl.to([
                    el.list,
                    el.btClose,
                    el.slideInHeader,
                    el.slideInTitle,
                    el.slideInContent,
                    el.hp,
                ], 0.25, {
                    autoAlpha: 0,
                    ease: Cubic.easeOut,
                });

                //cambia fondo
                // self.tl.set(el.slideBg1, {
                //     ease: Cubic.easeOut,
                // });
                self.tl.set(el.slideBg0, {
                    autoAlpha: 1,
                });

                //inhabilita los elementos
                self.tl.set([
                    el.list,
                    el.btClose,
                    el.slideInHeader,
                    el.slideInTitle,
                    el.slideInContent,
                ], {
                    css: {
                        display: "none"
                    },
                    onComplete: function() {

                        //Inhabilita todos los hotspots
                        anatomyHotspot.hideAll();

                        //Cambia apuntador a elementos activos
                        changeIndex(self.indexActive);

                        //abilita los elementos activos
                        self.tl.set(el.slideIn, {
                            css: {
                                display: "block"
                            }
                        });

                        self.tl.to(el.slideIn, 0.25, {
                            autoAlpha: 1,
                            ease: Cubic.easeOut,
                        });

                        self.tl.to(el.slideRight, 0.25, {
                            left: "0%",
                            ease: Cubic.easeOut,
                        }, "-=0.25");
                        self.tl.to(el.container, 0.25, {
                            width: "100%",
                            //left: "33.33%",
                            ease: Cubic.easeOut,
                        }, "-=0.25");

                        self.tl.set([el.diagonalLeft, el.diagonalRight], {
                            css: {
                                display: "block",
                            },
                        }, "-=0.25");
                        self.tl.to(el.diagonalLeft, 0.65, {
                            left: "-2770px",
                            ease: Cubic.easeOut,
                        }, "-=0.25");

                        self.tl.to(el.diagonalRight, 0.65, {
                            right: "-486px",
                            ease: Cubic.easeOut,
                        }, "-=0.65");


                        self.tl.set(el.header, {
                            autoAlpha: 1,
                            ease: Cubic.easeOut,
                        });
                        self.tl.set(el.header, {
                            css: {
                                display: "block"
                            },
                        });
                        self.tl.fromTo(el.headerTitle, 0.25, {
                            autoAlpha: 1,
                            x: -200
                        }, {
                            x: 0,
                            ease: Cubic.easeOut,
                        });
                        self.tl.set(el.headerSubtitle, {
                            autoAlpha: 1,
                            x: -200
                        }, "-=0.35");
                        self.tl.to(el.headerSubtitle, 0.25, {
                            x: 0,
                            ease: Cubic.easeOut,
                        }, "-=0.35");

                        self.tl.to([el.headerContent, el.btNavDashboard], 0.25, {
                            autoAlpha: 1,
                            ease: Cubic.easeOut,
                            onComplete: function() {
                                self.tl.clear();
                                $Entrenamiento.removeClass('animating');
                                calendar.show();
                                params.onComplete();
                            }
                        });


                    }
                });
            };

            $Entrenamiento.addClass('animating');
            hide();

            break;

        case "switch":


            $Entrenamiento.addClass('animating');

            //scroll a la izquierda
            self.unbind();

            self.tl.to(
                    $Anatomia, 0.15, {
                        scrollTo: {
                            x: 0
                        },
                        ease: Cubic.easeOut,
                    });

            self.tl.to(el.slideRight, 0.45, {
                left: "100%",
                ease: Cubic.easeOut,
            });
            self.tl.to([
                el.slides,
                el.slideInContent,
                el.hp,
            ], 0.25, {
                autoAlpha: 0,
                ease: Cubic.easeOut,
                onComplete: function() {

                    //Inhabilita todos los hotspots
                    anatomyHotspot.hideAll();
                    // console.log("Inhabilita todos los hotspots")

                    changeIndex(params.index);


                    self.tl.fromTo(el.slideIn, 0.01, {
                        css: {
                            display: "block"
                        },
                    }, {
                        autoAlpha: 1,
                        ease: Cubic.easeOut,
                    });
                    self.tl.to(el.slideRight, 0.45, {
                        left: "-5%",
                        ease: Cubic.easeOut,
                    });

                    showContent(function() {
                        anatomyHotspot.showAll(el.slideIn.index(), function() {
                            self.tl.clear();
                            $Entrenamiento.removeClass('animating');
                            self.bind("panning");
                        });
                    });


                },
            });



            break;
    };
};

// ####
Meals = function(params) {
    params = params || {};
    this.el = {
        contentDietTitle: $Comidas.find("#dashboard-comidas-diet h3"),
        contentDietDescription: $Comidas.find("#dashboard-comidas-diet .overview"),
        contentScroll: $Comidas.find("#dashboard-comidas-scroll"),
        contentHeaders: $Comidas.find("ul#dashboard-comidas-headers"),
        bg: $Comidas.find("#diet-bg"),
        listColors: $Comidas.find('#list-colors'),

        btPrev: $Comidas.find('#dashboard-comidas-nav .arrow-prev-yellow'),
        btNext: $Comidas.find('#dashboard-comidas-nav .arrow-next-yellow'),
    };
    this.indexMeal = 0;
    this.isMoving = false;
    this.onComplete = params.onComplete || function() {};
    this.data = {};
};

Meals.prototype.init = function(data) {
    this.data = data || {};
    this.render();
    this.unbind();
    this.bind();
};

Meals.prototype.render = function() {

    var self = this,
        el = self.el,
        headers = "",
        workList = "",
        worksHeaders = "",
        hoursHeaders = "",
        hoursList = "",
        table = "",
        description = "";

    // PRE, DURING Y POST
    $.each(self.data.groups, function(indexWork, valWork) {

        workList = "";
        var countItem = 0;
        var countPagesHours = 0;
        
        $.each(valWork.list, function(indexList, valList) {
            countItem++;
            workList += '<li> <span style="background-color: ' + valList.color + ';" class="circle-2">' + valList.letter + '</span><div class="list-text"><span class="list-left">' + valList.description + '</span></div></li>';
            if(countItem >= 6){
                countItem = 1;
                countPagesHours++;
            }
        });

        var nav = '';
        if(countPagesHours > 0){
            nav = '<div class="navigation" data-actualpage="0" data-pages="' + countPagesHours + '"><div class="up null"><span></span></div><div class="down"><span ></span></div></div>';
        }

        headers += '<li id="dashboard-comidas-' + valWork.title.toLowerCase() + '" class="' + valWork.title.toLowerCase() + '"> <h4> <span>' + valWork.title + '</span>WORK</h4> </li> ';
        worksHeaders += '<td class="meals-list-'+valWork.title.toLowerCase()+'"> <div class="work ' + valWork.title.toLowerCase() + '"><span class="top"></span> <div class="list">  ' + nav + ' <div class="viewport"><div class="overview"><ul> ' + workList + '</ul> </div> </div> </div> </div> </td>';
    });

    // COMIDAS
    $.each(self.data.hours, function(indexHour, valHour) {
        hoursList = "";
        var countItem = 0;
        var countPagesAll = 0;
        
        $.each(valHour.list, function(indexList, valList) {
            countItem++;
            hoursList += '<li> <span style="background-color: ' + valList.color + '" class="circle-2">' + valList.letter + '</span><span class="list-left">' + valList.description + '</span></li>';
            if(countItem >= 6){
                countItem = 1;
                countPagesAll++;
            }
        });
        var hour = valHour.hrs.substring(0, 2) * 30,
            minutes = valHour.hrs.substring(3, 5) * 6;

        var nav = '';
        if(countPagesAll > 0){
            nav = '<div class="navigation" data-actualpage="0" data-pages="' + countPagesAll + '"><div class="up null"><span></span></div><div class="down"><span ></span></div></div>';
        }

        var hourCss = 'transform: rotate(' + hour + 'deg); -ms-transform: rotate(' + hour + 'deg); -webkit-transform: rotate(' + hour + 'deg); -moz-transform: rotate(' + hour + 'deg); -o-transform: rotate(' + hour + 'deg);'
        var minutesCss = 'transform: rotate(' + minutes + 'deg); -ms-transform: rotate(' + minutes + 'deg); -webkit-transform: rotate(' + minutes + 'deg); -moz-transform: rotate(' + minutes + 'deg); -o-transform: rotate(' + minutes + 'deg);'

        hoursHeaders += '<td class="meals-list-comidas"> <div class="work meals"><span class="top"></span> <div class="list"> ' + nav + ' <div class="left"> <div class="clock"> <div class="bg"></div><span class="hour" style="' + hourCss + '"><span></span></span><span class="minutes" style="' + minutesCss + '"><span></span></span> </div>' + valHour.hrs + '<sub>' + valHour.cycle + '</sub> </div> <div class="right"> <div class="viewport"> <div class="overview"> <ul> ' + hoursList + '</ul> </div> </div> </div> </div> </div> </td> ';
    });

    table += '<table><tbody><tr>' + worksHeaders + hoursHeaders + '</tr></tbody></table>';
    headers += '<li id="dashboard-comidas-meals" class="meals"> <h4> <span>COMIDAS</span></h4> </li>';

    el.listColors.html('');
    $.each(self.data.diet.listColors, function(index, val) {
         el.listColors.append('<li class="simple-shadow"><span style="background-color: ' + val.color + ';" class="circle-1"></span>' + val.title + '</li>');
    });

    $.each(self.data.diet.description, function(index, val) {
        description += '<p class="simple-shadow">' + val + '</p>';
    });

    el.contentDietTitle
        .html("")
        .append(self.data.diet.title);
    
    el.contentDietDescription
        .html("")
        .append(description)

    el.contentHeaders
        .html("")
        .append(headers);

    el.contentScroll
        .html("")
        .append(table);

    el.bg.css({backgroundImage: 'url(' + self.data.diet.srcImg + ')'});

    self.onComplete();
};

Meals.prototype.unbind = function(arguments) {
    this.el.contentScroll.find('.list .navigation .up, .list .navigation .down')
        .unbind('mouseenter, mouseleave');
    this.el.btPrev
        .unbind('mouseenter, mouseleave');
    this.el.btNext
        .removeClass('null')
        .unbind('mouseenter, mouseleave');
    this.indexMeal = 0;
    this.isMoving = false;
}

Meals.prototype.bind = function() {

    var self = this,
        el = self.el,
        offsetLeft = 0,
        panningTime = 0.25;

    el.contentScroll.find('.list .navigation .up')
        .hover(function() {
            
            var $parent = $(this).parent();

            if ($(this).hasClass('null') || $parent.hasClass('moving')) {
                return;
            };
            
            TweenLite.to($(this).find("span"), 0.15, {
                backgroundPosition: "0px 0px",
            });
        }, function() {
            TweenLite.to($(this).find("span"), 0.15, {
                ease: Cubic.easeOut,
                backgroundPosition: '0px 7px',
            });
        })
        .on('click', function(){
            var $parent = $(this).parent();
            var actualPage = $parent.data('actualpage');
            var scope = $(this);

            if (scope.hasClass('null') || $parent.hasClass('moving') || actualPage <= 0 ) {
                return;
            };
            $parent.addClass('moving');
            $parent.find('.down').removeClass('null');

            var $overview = $parent.parent().find('.overview');
            TweenLite.to($overview, 0.15,{autoAlpha:0, onComplete: function(){
                actualPage--;
                $parent.removeClass('moving');
                $parent.data('actualpage', actualPage);
                $overview.css({top: '-' + (actualPage * 311) + 'px'});
                TweenLite.set($overview,{autoAlpha:1});
                if(actualPage <= 0){
                    scope.addClass('null');
                }
            }});

        });
    el.contentScroll.find('.list .navigation .down')
        .hover(function() {

            var $parent = $(this).parent();
            if ($(this).hasClass('null') || $parent.hasClass('moving') ) {
                return;
            };

            TweenLite.to($(this).find("span"), 0.15, {
                backgroundPosition: "0 -25px",
            });
        }, function() {
            TweenLite.to($(this).find("span"), 0.15, {
                backgroundPosition: "0 -32px",
            });
        })
        .on('click', function(){
            var $parent = $(this).parent();
            var actualPage = $parent.data('actualpage');
            var totalPages = $parent.data('pages');
            var scope = $(this);

            if ( scope.hasClass('null') || $parent.hasClass('moving') || actualPage >= totalPages ) {
                return;
            };
            $parent.addClass('moving');
            $parent.find('.up').removeClass('null');

            var $overview = $parent.parent().find('.overview');
            TweenLite.to($overview, 0.15,{autoAlpha:0, onComplete:function(){
                
                actualPage++;
                $parent.removeClass('moving');
                $parent.data('actualpage', actualPage);
                $overview.css({top: '-' + (actualPage * 311) + 'px'});
                TweenLite.set($overview,{autoAlpha:1});
                if(actualPage >= totalPages){
                    scope.addClass('null');
                }
            }});
        });;


    var getRightVisibleIndex = function() {
        var childs = el.contentScroll.find('table td');
        var contentWidth = $('#dashboard-comidas .content').width();
        var leftWidth = $('#dashboard-comidas-diet').width();
        var viewPortWidth = contentWidth - leftWidth;
        var index = self.indexMeal;
        var totalWidth = 0; 
        for (var i = index; i < childs.length; i++) {
            var tdElement = $(childs[i]);
            if (totalWidth + tdElement.width() < viewPortWidth) {
                totalWidth += tdElement.width();
                index = i;
            }
        }
        //console.log('getRightVisibleIndex', viewPortWidth);
        //console.log('indexMeal:', self.indexMeal );
        return index;
    }    

    var shiftItemsListAnimation = function(offset) {
        var childs = el.contentScroll.find('table td');
        var delayStep = 0.03;
        var leftVisibleIndex = self.indexMeal;
        var rightVisibleIndex = getRightVisibleIndex();
        var isRightShift = offset < 0;
        //console.log('RightVisibleIndex',getRightVisibleIndex());
        var delay = isRightShift ? 0 : delayStep * (rightVisibleIndex - leftVisibleIndex);
        for (var i = 0; i < childs.length; i++) {
            if (i >= leftVisibleIndex - 1 && i <= rightVisibleIndex + 1) {
                TweenLite.to(childs[i], 0.4, {
                    x: '+=' + offset,
                    ease: Cubic.easeInOut,
                    delay: delay + 0.1
                });
                delay = isRightShift ? delay + delayStep : delay - delayStep;    
            } else {
                TweenLite.set(childs[i], {
                    x: '+=' + offset
                })   
            }
        }
        setTimeout(function() {
            self.isMoving = false;
        }, childs.length * delayStep * 2000);
    }

    el.btPrev
        .addClass('null')
        .on('click', function() {

            if($(this).hasClass('null') || self.isMoving == true ){return;}
            console.log("btPrev", self.isMoving, $(this).hasClass('null'));
            
            el.btNext.removeClass('null');
            self.isMoving = true;

            self.indexMeal--;
            var blockWidth = el.contentScroll.find('td').eq(self.indexMeal).width();
            shiftItemsListAnimation(blockWidth);
            
            if(self.indexMeal == 0) {
                $(this).addClass('null');
            }

            if(el.contentScroll.find('td').eq(self.indexMeal + 1).attr('class') != el.contentScroll.find('td').eq(self.indexMeal).attr('class')){

                TweenLite.to(
                    el.contentHeaders, 
                    0.4, {
                        ease: Cubic.easeInOut,
                        left: '+=' + blockWidth,
                        onComplete: function() {
                            console.log("finish")
                            // self.isMoving = false;
                        }
                    });
            }
        })
        .hover(function() {
            TweenLite.to($(this), 0.15, {
                backgroundPosition: "0px -39px",
            });
        }, function() {
            TweenLite.to($(this), 0.15, {
                backgroundPosition: "17px -39px",
            });
        });

    el.btNext
        .on('click', function() {

            if($(this).hasClass('null') || self.isMoving == true ){return;}
            console.log("btNext", self.isMoving);

            el.btPrev.removeClass('null');
            self.isMoving = true;

            var blockWidth = el.contentScroll.find('td').eq(self.indexMeal).width();
            self.indexMeal++;
            shiftItemsListAnimation(-blockWidth);

            if(el.contentScroll.find('td').eq(self.indexMeal - 1).attr('class') != el.contentScroll.find('td').eq(self.indexMeal).attr('class')){
                TweenLite.to(
                    el.contentHeaders, 
                    0.5, {
                        ease: Cubic.easeInOut,
                        left: '-=' + blockWidth,
                        onComplete: function(){
                            console.log("finish")
                            // self.isMoving = false; 
                        }
                    });
            }

            if(self.indexMeal == (el.contentScroll.find('td').length - 1)){
                $(this).addClass('null');
            }
        })
        .hover(function() {

            TweenLite.to($(this), 0.15, {
                backgroundPosition: "0px -7px",
            });
        }, function() {
            TweenLite.to($(this), 0.15, {
                backgroundPosition: "-17px -7px",
            });
        });
};


TrainingVideo = function() {

    this.el = {
        // content: $Entrenamiento.find("#dashboard-entrenamiento-videos"),
        instructions: $Entrenamiento.find("#dashboard-entrenamiento-instructions"),
        contentInstructions: $Entrenamiento.find("#dashboard-entrenamiento-instructionslist"),
        contentCaption: $Entrenamiento.find("#dashboard-entrenamiento-caption"),
        contentThumbnails: $Entrenamiento.find("#dashboard-entrenamiento-thumbnails"),
        contentIframe: $Entrenamiento.find("#dashboard-entrenamiento-iframe"),
        captionBg: $Entrenamiento.find("#dashboard-entrenamiento-captionbg"),
        captionProtip: $Entrenamiento.find("#dashboard-entrenamiento-captionprotip"),

        contentThumbnailIProtip: $Entrenamiento.find("#dashboard-entrenamiento-thumbnailprotip"),

        loader: $Entrenamiento.find("#loader-entrenamiento"),

        btMenu: $Dashboard.find("#dashboard-menu a"),
        btMenuBack: $Dashboard.find("#bt-back-nav-training"),
        btMenuNext: $Dashboard.find("#bt-next-nav-training"),
        btInfo: $Dashboard.find("a#bt-dashboard-entrenamiento-info"),
        btPlay: $Dashboard.find("#play-vimeo"),
        btExercices: $Entrenamiento.find("#bt-dashboard-entrenamiento-exercices"),
        btProtip: $Entrenamiento.find("#bt-dashboard-entrenamiento-protip"),

        shapeLeft: $Entrenamiento.find(".shape-left"),
        shapeRight: $Entrenamiento.find(".shape-right"),
        
        protipTitle: $Entrenamiento.find("#dashboard-protip-title"),
        protipDescription: $Entrenamiento.find("#dashboard-protip-description"),
        protipAuthor: $Entrenamiento.find("#dashboard-protip-author"),
    };

    this.settings = {
        pos: 0,
        length: 0,
        data: {},
        toPlay: "exercice",
    };
    this.tl = new TimelineLite();
};
TrainingVideo.prototype.init = function(data) {

    var self = this,
        s = self.settings,
        el = self.el;

    this.settings.data = data || this.settings.data;

    // Elimina iframe video si existe
    $("#vimeo-player").remove();

    // Resetea cantidad de videos
    s.length = 0;

    this.render({
        action: "controls"
    });
    this.bind({
        action: "controls"
    });
};

TrainingVideo.prototype.render = function(params) {

    var self = this,
        s = self.settings,
        el = self.el,
        contentInstructions = "",
        contentThumbnails = "";
    // console.log(s.data)

    switch (params.action) {
        case "controls":

            // Carga el nuevo contenido
            $.each(s.data.videos, function(index, val) {

                contentInstructions += '<li> <h5 class="el el0"> <span> ' + val.series + '</span> SERIES </h5> <h5 class="el el1"> <span> ' + val.units + '</span> '+val.textUnits+' </h5> <p class="el el2"> ' + val.tipoSerie + '</p> <div class="instructions-level el el3"> <div class="left tungsten-semibold"> NIVEL <br /> DE PESO</div> <div class="right level-' + val.level + '"> <div class="right-top"> <div class="l-1"> </div> <div class="l-2"> </div> <div class="l-3"> </div> <div class="l-4"> </div> <div class="l-5"> </div> </div> <div class="right-bottom"> <span> LIGERO</span> <span> MEDIO</span> <span> MÃXIMO</span> </div> </div> </div> </li>';
                contentThumbnails += '<li style="background-image: url(' + val.srcImg + ');" data-video="' + val.idVideo + '"></li>';
                s.length++;
            });

            // console.log(s.data.protip)
            el.contentThumbnailIProtip
                .css({
                    backgroundImage: "url(" + s.data.protip.srcImg + ")",
                    opacity: 1,
                    visibility: "visible",
                });

            el.contentInstructions
                .html('')
                .append(contentInstructions);

            el.contentThumbnails
                .html('')
                .append(contentThumbnails);

            el.protipTitle.html(s.data.protip.title);
            el.protipDescription.html(s.data.protip.description);
            el.protipAuthor.html("Por: " + s.data.protip.author);

            s.pos = s.length - 1;
            break;
        case "video":

            var idVideo;
            switch (s.toPlay) {
                case "protip":
                    idVideo = s.data.protip.idVideo;
                    break;
                case "exercice":
                    idVideo = s.data.videos[s.pos].idVideo;
                    break;
            };

            el.contentIframe
                .find(".safe")
                .append('<iframe src="//player.vimeo.com/video/' + idVideo + '?player_id=vimeo-player" id="vimeo-player" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>');

            // console.log("render video", s.toPlay, "pos", s.pos, idVideo)
            self.bind({
                action: "video",
            });
            break;
    };
};



TrainingVideo.prototype.bind = function(params) {
    var self = this,
        s = self.settings,
        el = self.el;

    $Entrenamiento
        .removeLoader({
            loader: el.loader,
            onComplete: function() {
                self.animations({
                    action: "intro"
                });
            }
        });

    

    function play(playerId) {
        TweenLite.set(el.btInfo, {
            css: {
                display: "block"
            }
        });
        TweenLite.to(el.btInfo, 0.45, {
            left: "26px",
            ease: Cubic.easeOut,
        });
    };

    function finish(playerId) {

        if (s.pos - 1 >= 0 && s.toPlay == "exercice") {
            var pos = (s.length - 1) - s.pos;
            // console.log("exercice finish! next->", pos)
            trainingVideoScrollBox.goTo({
                pos: pos + 2,
            });

        } else {

            self.info({
                hideThumbnail: true,
                showActualInfo: true,
            });
        };
    };

    function ready(playerId) {

        // Muestra botÃ³n de info de ejercicios
        $Entrenamiento.addClass("video-embeded");
        $f(playerId).addEvent("play", play);
        $f(playerId).addEvent("finish", finish);
        $f(playerId).api("play");
    };

    switch (params.action) {
        case "controls":
            el.btPlay
                .on('click', function(event) {
                    event.preventDefault();

                    self.play();
                });
            el.btInfo
                .on('click', function(event) {
                    event.preventDefault();

                    self.info({
                        showActualInfo: true,
                    });
                });
            el.btProtip
                .on('click', function(event) {
                    event.preventDefault();
                    self.enterProtip();
                });
            el.btExercices
                .on('click', function(event) {
                    event.preventDefault();
                    self.enterExercices();
                });
            var checkBg = function(){
                var bgSize = "auto auto";
                if($Window.width() < 1500 && $Window.height() < 700){
                    bgSize = "100% auto";
                }else if($Window.width() < 1500){
                    bgSize = "auto 100%";
                }else {
                    bgSize = "100% auto";
                };
                console.log($Window.width(), bgSize)
                $("#dashboard-entrenamiento-thumbnails li, #dashboard-entrenamiento-thumbnailprotip")
                    .css({backgroundSize: bgSize })
            }
            $Window.resize(function(event) {
              checkBg()
            });

            checkBg();
            break;
        case "video":

            vimeoPlayers = document.querySelectorAll('iframe')
            $f(vimeoPlayers[0]).addEvent('ready', ready);

            break;
    };
};

TrainingVideo.prototype.play = function() {
    var self = this,
        s = self.settings,
        el = self.el;

    if ($Entrenamiento.hasClass('moving')) {
        return false;
    };
    if (s.toPlay == "exercice" && s.data.videos[s.pos].idVideo === "") {
        s.toPlay = "infographic";
    } else if (s.toPlay == "infographic") {
        s.toPlay = "exercice";
    };

    // console.log("play:")
    // console.log(el.contentThumbnails.find("li").eq(s.pos))
    // console.log(s.pos, el.contentThumbnails.find("li").eq(s.pos).data("video"))
    // console.log("------")
    self.animations({
        action: "play",
        idVideo: el.contentThumbnails.find("li").eq(s.pos).data("video"),
    });
    User.hide();
};

TrainingVideo.prototype.enterProtip = function() {
    if ($Entrenamiento.hasClass('moving')) {
        return false;
    };
    this.settings.toPlay = "protip";
    // console.log("switch to Protip")
    this.animations({
        action: "enter-protip",
    });
};

TrainingVideo.prototype.enterExercices = function() {
    if ($Entrenamiento.hasClass('moving')) {
        return false;
    };
    this.settings.toPlay = "exercice";
    // console.log("switch to Exercice")
    this.animations({
        action: "enter-exercices",
    });
};

TrainingVideo.prototype.next = function() {

    var self = this,
        s = self.settings,
        el = self.el;

    // console.log((s.length > 1), (s.pos > 0), !$Entrenamiento.hasClass('moving'))
    if (s.length > 1 && s.pos > 0 && !$Entrenamiento.hasClass('moving')) {
        s.pos--;
        el.contentIframe
            .find(".safe")
            .html("");
        self.animations({
            action: "prev",
            thumbnailOut: el.contentThumbnails.find("li").eq(s.pos + 1),
            instructionsOut: el.contentInstructions.find("li").eq(s.pos + 1),
        });

    } else {
        return false;
    };
};

TrainingVideo.prototype.prev = function() {

    var self = this,
        s = self.settings,
        el = self.el;

    // console.log((s.length > 1), (s.pos + 1 < s.length), !$Entrenamiento.hasClass('moving'))
    if (s.length > 1 && (s.pos + 1) < s.length && !$Entrenamiento.hasClass('moving')) {
        s.pos++;
        // console.log(s.pos)
        el.contentIframe
            .find(".safe")
            .html("")
        self.animations({
            action: "next",
            thumbnailOut: el.contentThumbnails.find("li").eq(s.pos - 1),
            instructionsOut: el.contentInstructions.find("li").eq(s.pos - 1),
        });

    } else {
        return false;
    };
};

TrainingVideo.prototype.info = function(params) {
    params = params || function() {};
    params.onComplete = params.onComplete || function() {};

    var self = this,
        el = self.el,
        s = self.settings;

    // console.log("info", $Entrenamiento.hasClass('moving'), $Entrenamiento.hasClass('showingInfo'))
    if ($Entrenamiento.hasClass('moving')) {
        // console.log("naaaa!!!!")
        return false;
    } else if ($Entrenamiento.hasClass('showingInfo')) {
        // console.log("onComplete go to")

        TweenLite.set([el.contentThumbnails, el.contentCaption, el.contentThumbnailIProtip, el.captionBg], {
            css: {
                display: "block"
            }
        });
        TweenLite.to(el.captionBg, 0.15, {
            autoAlpha: 0.7,
            ease: Linear.easeNone,
        });
        TweenLite.to([el.contentThumbnails, el.contentThumbnailIProtip], 0.15, {
            autoAlpha: 1,
            ease: Linear.easeNone,
            onComplete: function() {

                params.onComplete();
            }
        });
        return;
    };
    // console.log("info")
    $Entrenamiento.removeClass('showingInfo')
    // console.log("showInfo", "player-vimeo" + (s.pos))

    if ($Entrenamiento.hasClass('video-embeded')) {

        $f("vimeo-player").api('pause');


        if (params.hideThumbnail) {
            TweenLite.set([el.contentThumbnails, el.contentCaption, el.contentThumbnailIProtip, el.captionBg], {
                css: {
                    display: "block"
                }
            });
            TweenLite.to(el.captionBg, 0.65, {
                autoAlpha: 0.7,
                ease: Linear.easeNone,
            });
            TweenLite.to([el.contentThumbnails, el.contentThumbnailIProtip], 0.65, {
                autoAlpha: 1,
                ease: Linear.easeNone,
                onComplete: function() {

                    self.animations({
                        action: "info",
                        onComplete: params.onComplete,
                        showActualInfo: params.showActualInfo
                    });
                }
            });
        } else {
            self.animations({
                action: "info",
                onComplete: params.onComplete,
                showActualInfo: params.showActualInfo
            });
        };
    } else {
        // console.log("show info", s.toPlay)
        self.animations({
            action: "info",
            onComplete: params.onComplete,
            showActualInfo: params.showActualInfo
        });
    };
    User.show();
};

TrainingVideo.prototype.goTo = function(params) {
    params = params || {}

    var self = this,
        el = this.el,
        s = this.settings,
        elActive = [],
        onComplete;

    if ($Entrenamiento.hasClass('moving')) {
        return false;
    };
    // contentThumbnails
    // thumbnailOut: el.contentThumbnails.find("li").eq(s.pos + 1),
    // instructionsOut: el.contentInstructions.find("li").eq(s.pos + 1),
    switch (true) {
        case (params.from > params.to): //de arriba hacia a bajo

            onComplete = function() {
                for (var i = params.from; i >= params.to + 1; i--) {

                    elActive.push(el.contentThumbnails.find("li").eq(i));
                };

                s.pos = params.to;
                self.animations({
                    action: "prev",
                    thumbnailOut: elActive,
                    instructionsOut: el.contentInstructions.find("li").eq(params.from),
                });
            };

            break;
        case (params.from < params.to): //de a bajo hacia a arriba 

            onComplete = function() {

                for (var i = params.from; i < params.to; i++) {

                    elActive.push(el.contentThumbnails.find("li").eq(i))
                };

                s.pos = params.to;
                self.animations({
                    action: "next",
                    thumbnailOut: elActive,
                    instructionsOut: el.contentInstructions.find("li").eq(params.from),
                });
            };
            break;
    };
    self.info({
        onComplete: onComplete,
        hideThumbnail: true,
        showActualInfo: false,
    });
};

TrainingVideo.prototype.animations = function(params) {

    var self = this,
        s = self.settings,
        el = self.el,
        tl = self.tl;

    var inInstructionsDetals = function(params) {
        var theEl = el.contentInstructions.find("li").eq(s.pos).find(".el");
        // console.log(theEl)



        params.offset = params.offset || "=0";
        tl.set(theEl, {
            y: 75,
            autoAlpha: 0,
        }, params.offset);

        tl.set(theEl.eq(0), {
            autoAlpha: 1,
        }, params.offset);
        tl.to(theEl.eq(0), 0.35, {
            y: 0,
            ease: Cubic.easeOut,
        }, params.offset);




        tl.set(theEl.eq(1), {
            autoAlpha: 1,
        }, "-=0.25");
        tl.to(theEl.eq(1), 0.35, {
            y: 0,
            ease: Cubic.easeOut,
        }, "-=0.25");




        tl.set(theEl.eq(2), {
            autoAlpha: 1,
        }, "-=0.25");
        tl.to(theEl.eq(2), 0.35, {
            y: 0,
            ease: Cubic.easeOut,
        }, "-=0.25");





        tl.set(theEl.eq(3), {
            autoAlpha: 1,
        }, "-=0.25");
        tl.to(theEl.eq(3), 0.35, {
            y: 0,
            ease: Cubic.easeOut,
            onComplete: function() {

                $Entrenamiento.removeClass('moving');
                // console.log("complete prev thumbnail animation")
                if (params.onComplete) {
                    params.onComplete();
                };
            },
        }, "-=0.25");
    };
    var inOutInstructions = function(params) {
        //Sale instrucciones
        tl.to(params.instructionsOut, 0.25, {
            top: "-100px",
            autoAlpha: 0,
            ease: Cubic.easeOut,
            onComplete: function() {
                //parche para bug tweenmax
                // console.log("complete!")

                params.instructionsOut.css({
                    display: "none",
                    top: "0px",
                    opacity: 0,
                    visibility: "hidden",
                });

                el.contentInstructions.find("li").eq(s.pos).css({
                    display: "block",
                    top: "0px",
                    opacity: 1,
                    visibility: "visible",
                });

                inInstructionsDetals(params)
            }
        });
    };
    var removeVideo = function() {

        el.contentIframe
            .find(".safe")
            .html("");
    };
    var inSection = function() {

        $Entrenamiento.addClass('moving');
        // if ($Entrenamiento.hasClass('video-embeded')) {
        tl.to([el.contentThumbnails, el.contentThumbnailIProtip], 0.45, {
            autoAlpha: 1,
            ease: Linear.easeNone,
            onComplete: function() {
                removeVideo();
            }
        });
        $Entrenamiento.removeClass("video-embeded");
        // };
    };

    switch (params.action) {

        case "prev":

            // el.list.removeClass('active');
            $Entrenamiento.addClass('moving');
            $Entrenamiento.removeClass("video-embeded");
            removeVideo();
            //Saca thumbnail
            tl.fromTo(params.thumbnailOut, 0.45, {
                top: "0%",
            }, {
                top: "-100%",
                ease: Cubic.easeInOut,
            });

            //Entra nuevo thumbnail
            tl.to(el.contentThumbnails.find("li").eq(s.pos), 0.45, {
                top: "0%",
                ease: Cubic.easeInOut,
                onComplete: function() {
                    inOutInstructions(params);

                }
            }, "-=0.45");

            break;
        case "next":

            // el.list.removeClass('active');
            $Entrenamiento.addClass('moving');
            $Entrenamiento.removeClass("video-embeded");
            removeVideo();
            //Saca thumbnail
            TweenLite.fromTo(params.thumbnailOut, 0.45, {
                top: "0%",
            }, {
                top: "25%",
                ease: Cubic.easeInOut,
            });

            //Entra nuevo thumbnail
            TweenLite.to(el.contentThumbnails.find("li").eq(s.pos), 0.45, {
                top: "0%",
                ease: Cubic.easeInOut,
                onComplete: function() {
                    inOutInstructions(params);

                }
            }, "-0.45");
            break;
        case "play":
            // console.log("play")
            calendar.hide();
            $Entrenamiento.addClass('moving');
            $Entrenamiento.removeClass('showingInfo');


            if (!$Entrenamiento.hasClass("video-embeded")) {
                removeVideo();
            };

            //Escala botÃ³n play
            tl.to(el.btPlay, .45, {
                scale: 1.5,
                ease: Back.easeIn,
            });
            tl.set(el.btPlay, {
                autoAlpha: 0,
                onComplete: function() {
                    //Quita lista de videos
                    if (s.toPlay != "protip") {
                        trainingVideoScrollBox.hide({
                            showRO: true
                        });
                    };
                }
            });

            // Oculta instrucciones
            tl.to([el.captionProtip, el.instructions], .65, {
                top: "-85px",
                autoAlpha: 0,
                ease: Cubic.easeOut,
                onComplete: function() {
                    //parche para bug tweenmax
                    el.instructions.css({
                        top: "0px",
                        display: "none",
                        opacity: 0,
                        visibility: "hidden",
                    });
                    el.captionProtip.css({
                        top: "0px",
                        display: "none",
                        opacity: 0,
                        visibility: "hidden",
                    });
                    el.contentCaption.css({
                        display: "none",
                    });
                }
            });
            tl.set(el.instructions.find(".el"), {
                autoAlpha: 0,
            });

            // Oculta Shape superior izquierdo, botÃ³n protip y botÃ³n back dashboard
            tl.to([el.shapeLeft, el.btMenuBack], 0.65, {

                left: "-=900px",
                ease: Cubic.easeOut
            }, "-=0.65");

            tl.to([el.btProtip, el.btExercices], 0.65, {

                autoAlpha: 0,
                ease: Cubic.easeOut,
                onComplete: function() {
                    TweenLite.set([el.btProtip, el.btExercices], {

                        css: {
                            display: "none"
                        }
                    });
                }
            }, "-=0.65");



            // Oculta Shape inferior derecho, botÃ³n de menu del dashboard y botÃ³n next dashboard
            tl.to([el.shapeRight, el.btMenuNext], 0.65, {

                right: "-=900px",
                ease: Cubic.easeOut
            }, "-=0.65");
            tl.to(el.btMenu, 0.65, {
                left: "-=900px",
                ease: Cubic.easeOut
            }, "-=0.65");

            // Quita el fondo
            var theBg = [el.contentCaption, el.contentThumbnailIProtip];
            if (s.toPlay != "infographic") {
                theBg.push(el.contentThumbnails);
                // console.log("quita fondo", s.toPlay)
            };
            tl.to(theBg, 0.45, {
                autoAlpha: 0,
                ease: Linear.easeNone,
            }, "-=0.65");




            // // Oculta todo
            var thoHide = [
                el.btPlay,
                el.captionBg,
                el.contentCaption,
                el.contentThumbnailIProtip,
                el.shapeLeft,
                el.shapeRight,
                el.btMenuNext,
                el.btMenum,
                el.btMenuBack,
                el.instructions
            ];
            if (s.toPlay != "infographic") {
                thoHide.push(el.contentThumbnails);
                // console.log(trainingVideo.settings)
                // console.log("oculta todo", s.toPlay)
            };
            tl.set(thoHide, {
                css: {
                    display: "none"
                },
                onComplete: function() {
                    setTimeout(function() {

                        $Entrenamiento.removeClass('showingInfo');
                        $Entrenamiento.removeClass('moving');
                        // console.log("toplay", s.toPlay)
                        if (s.toPlay != "infographic") {
                            // console.log(1)
                            if (!$Entrenamiento.hasClass("video-embeded")) {

                                self.render({
                                    action: "video"
                                });
                            } else {
                                $f("vimeo-player").api("play");
                            };
                        } else {
                            // console.log(2)
                            TweenLite.set(el.btInfo, {
                                css: {
                                    display: "block"
                                }
                            });
                            TweenLite.to(el.btInfo, 0.45, {
                                left: "26px",
                                ease: Cubic.easeOut,
                            });
                        }

                    }, 250);
                }
            });
            break;
        case "info":
            // console.log("animation info")
            $Entrenamiento.addClass('moving');
            $Entrenamiento.addClass('showingInfo');

            tl.set([
                el.captionBg,
                el.contentCaption,
                el.contentThumbnails,
                el.contentThumbnailIProtip,
                el.shapeLeft,
                el.shapeRight,
                el.btMenuNext,
                el.btMenum,
                el.btMenuBack,
                el.instructions
            ], {
                css: {
                    display: "block"
                },
            });


            tl.to(el.captionBg, 0.45, {
                autoAlpha: 0.7,
                ease: Linear.easeNone,
            });

            if (!$Entrenamiento.hasClass("video-embeded")) {
                // console.log(2222)
                tl.to(el.contentThumbnails, 0.45, {
                    autoAlpha: 1,
                    ease: Linear.easeNone,
                }, "-=0.45");
            };


            tl.set(el.btPlay, {
                css: {
                    display: "block"
                },
            })

            // Aparece boton de play
            // console.log("Aparece boton de play", params.showActualInfo)
            if (params.showActualInfo) {

                tl.set(el.contentCaption, {
                    autoAlpha: 1
                });
                tl.fromTo(el.btPlay, .45, {
                    autoAlpha: 1,
                }, {
                    scale: 1,
                    ease: Back.easeOut,

                });
            };

            // Oculta botÃ³n Info
            tl.to(el.btInfo, 0.65, {

                left: -926,
                ease: Cubic.easeOut,
                onComplete: function() {
                    // Aparece lista de videos
                    calendar.show();
                    if (s.toPlay != "protip") {
                        trainingVideoScrollBox.show({
                            showBg: false
                        });
                    };
                }
            }, "-=0.45");
            tl.to("#entrenamiento-list-hover", 0.45, {
                right: "-140px",
                ease: Cubic.easeOut,
            }, "-=0.65");
            tl.set(el.btInfo, {
                css: {
                    display: "none"
                }
            });

            // Oculta Shape superior izquierdo, botÃ³n protip y botÃ³n back dashboard
            tl.to(el.shapeLeft, 0.45, {

                left: "-486px",
                ease: Cubic.easeOut
            }, "-=0.45");

            var btNav = el.btProtip;
            if (s.toPlay == "protip") {
                btNav = el.btExercices;
            };
            btNav.css({
                display: "block"
            });
            tl.to(btNav, 0.45, {

                autoAlpha: 1,
                ease: Cubic.easeOut
            }, "-=0.45");
            tl.to(el.btMenuBack, 0.45, {

                left: "15px",
                ease: Cubic.easeOut
            }, "-=0.45");

            // Oculta Shape inferior derecho, botÃ³n de menu del dashboard y botÃ³n next dashboard
            tl.to(el.shapeRight, 0.45, {

                right: "-486px",
                ease: Cubic.easeOut
            }, "-=0.45");
            tl.to(el.btMenuNext, 0.45, {

                right: 0,
                ease: Cubic.easeOut,
            }, "-=0.45");
            tl.to(el.btMenu, 0.45, {
                left: 0,
                ease: Cubic.easeOut,
            });

            var showData = function() {
                // console.log(params.showActualInfo)
                if (params.showActualInfo) {
                    tl.fromTo(el.instructions, 0.35, {
                        top: 85,
                    }, {
                        top: 0,
                        autoAlpha: 1,
                        ease: Cubic.easeOut,
                    }, "-=0.45");
                    tl.set(el.contentCaption, {
                        autoAlpha: 1,
                        onComplete: function() {
                            inInstructionsDetals({
                                offset: "-=0.25",
                                showActualInfo: params.showActualInfo,
                                onComplete: function() {
                                    params.onComplete();
                                }
                            });
                        }
                    }, "-=0.45");
                } else {

                    params.onComplete();
                    setTimeout(function() {
                        tl.set(el.contentInstructions.find("li .el"), {
                            autoAlpha: 0,
                        });
                        tl.set([el.contentCaption, el.instructions], {
                            autoAlpha: 1,
                        });
                        tl.fromTo(el.btPlay, .45, {
                            autoAlpha: 1,
                        }, {
                            scale: 1,
                            ease: Back.easeOut,

                        });
                    }, 150);
                };
            }
            switch (s.toPlay) {
                case "exercice":
                    showData();
                    break;
                case "infographic":
                    showData();
                    break;
                case "protip":

                    el.captionProtip.css({
                        display: "block",
                        top: "85px",
                        opacity: 0,
                        visibility: "visible",
                    });
                    tl.to(el.captionProtip, 0.45, {
                        top: "0px",
                        autoAlpha: 1,
                        ease: Cubic.easeOut,
                        onComplete: function() {
                            inInstructionsDetals({
                                offset: "-=0.25",
                                onComplete: function() {
                                    params.onComplete();
                                }
                            });
                        }
                    }, "-=0.45");
                    break;
            };
            break;
        case "intro":
            // console.log("intro animation")
            if (!$Entrenamiento.hasClass("introReady")) {
                $Entrenamiento.addClass("introReady");
                trainingVideoScrollBox.unbind();
                trainingVideoScrollBox.bind();
            };
            break;
        case "enter-exercices":
            // console.log("enter Exercices");
            inSection();

            el.instructions.css({
                display: "block",
                top: "85px",
                opacity: 0,
                visibility: "visible",
            });

            TweenLite.set(el.instructions, {y: 0});

            tl.set(el.contentThumbnails, {
                css: {
                    display: "block"
                }
            });

            tl.fromTo(el.contentThumbnails, 0.45, {
                top: "-100%",
            }, {
                top: "0%",
                ease: Cubic.easeInOut,
            });
            tl.fromTo(el.contentThumbnailIProtip, 0.45, {
                top: "0%",
            }, {
                top: "25%",
                ease: Cubic.easeInOut,
            }, "-=0.45");

            tl.set(el.contentThumbnailIProtip, {
                css: {
                    display: "none"
                }
            });

            tl.to(el.btExercices, 0.65, {

                autoAlpha: 0,
                ease: Cubic.easeOut,
            });
            tl.set(el.btExercices, {

                css: {
                    display: "none"
                }
            });

            tl.to(el.captionProtip, 0.45, {
                top: "-85px",
                autoAlpha: 0,
                ease: Cubic.easeOut,
                onComplete: function() {
                    trainingVideoScrollBox.show({
                        showBg: false
                    });
                }
            }, "-=0.65");
            tl.to(el.instructions, 0.35, {
                top: "0px",
                autoAlpha: 1,
                ease: Cubic.easeOut,
            });
            tl.set(el.btProtip, {

                css: {
                    display: "block"
                }
            }, "-=0.35");
            tl.fromTo(el.btProtip, 0.35, {
                autoAlpha: 0,
            }, {

                autoAlpha: 1,
                ease: Cubic.easeOut,
                onComplete: function() {
                    el.captionProtip.css({
                        display: "none",
                        top: "0px",
                        opacity: 0,
                        visibility: "hidden",
                    });
                    $Entrenamiento.removeClass('moving');

                }
            }, "-=0.65");

            break;
        case "enter-protip":

            // console.log("leave Exercices");
            // console.log("is video embeded", $Entrenamiento.hasClass('video-embeded'));

            inSection();

            el.captionProtip.css({
                display: "block",
                top: "85px",
                opacity: 0,
                visibility: "visible",
            });



            tl.set(el.contentThumbnailIProtip, {
                css: {
                    display: "block"
                }
            });

            tl.fromTo(el.contentThumbnails, 0.45, {
                top: "0%",
            }, {
                top: "-100%",
                ease: Cubic.easeInOut,
            });
            tl.fromTo(el.contentThumbnailIProtip, 0.45, {
                top: "25%",
            }, {
                top: "0%",
                ease: Cubic.easeInOut,
            }, "-=0.45");

            tl.set(el.contentThumbnails, {
                css: {
                    display: "none"
                }
            });

            tl.to(el.instructions, 0.45, {
                top: "-85px",
                autoAlpha: 0,
                ease: Cubic.easeOut,
            });
            tl.to(el.btProtip, 0.65, {

                // left: "-371px",
                autoAlpha: 0,
                ease: Cubic.easeOut,
                onComplete: function() {
                    TweenLite.set(el.btProtip, {
                        css: {
                            display: "none"
                        }
                    });
                }
            }, "-=0.45");


            tl.to(el.captionProtip, 0.45, {
                top: "0px",
                autoAlpha: 1,
                ease: Cubic.easeOut,
            });

            tl.set(el.btExercices, {

                css: {
                    display: "block"
                }
            }, "-=0.45");

            tl.fromTo(el.btExercices, 0.30, {
                autoAlpha: 0,
            }, {
                autoAlpha: 1,
                ease: Cubic.easeOut,
                onComplete: function() {
                    $Entrenamiento.removeClass('moving');
                }
            }, "-=0.45");

            trainingVideoScrollBox.hide({
                showRO: false
            });
            break;
    };
};


TrainingScrollBox = function(data) {
    this.el = {
        container: $Entrenamiento.find("#entrenamiento-list-videos"),
        content: $Entrenamiento.find("#entrenamiento-list-videos ul.list"),
        bg: $Entrenamiento.find("#entrenamiento-list-videos .bg"),
        bt: $Entrenamiento.find("#entrenamiento-list-videos ul.list a"),
        roShow: $Dashboard.find("#entrenamiento-list-hover"),

        btListUp: $Entrenamiento.find("#bt-traininglist-up"),
        btListDown: $Entrenamiento.find("#bt-traininglist-down"),
    };
    this.settings = {
        data: data || {},
        pos: 0,
        lastPos: 0,
        timer: null,
    };
    this.tl = new TimelineLite();
}

TrainingScrollBox.prototype.init = function(data) {

    this.settings.data = data || this.settings.data;

    this.render();
};

TrainingScrollBox.prototype.unbind = function() {
    this.el.btListDown.unbind('mouseenter mouseleave click');
    this.el.btListUp.unbind('mouseenter mouseleave click');
}

TrainingScrollBox.prototype.render = function() {

    var self = this,
        s = self.settings,
        el = self.el,
        count = 1,
        content = "";
    // console.log(s.data.videos)

    // Carga el nuevo contenido
    for (var i = s.data.videos.length - 1; i >= 0; i--) {
        content += '<li> <a href="#" data-index="' + i + '"> <h5 class="left"> <span>' + count + '</span> </h5> <div class="right"> <strong class="top tungsten-medium">' + s.data.videos[i].area + '</strong> <strong class="middle tungsten-semibold">' + s.data.videos[i].title + '</strong> <strong class="bottom tungsten-medium">' + s.data.videos[i].position + '</strong> <p> ' + s.data.videos[i].series + ' X ' + s.data.videos[i].units + '<span> '+s.data.videos[i].textUnits+'</span> </p> </div> </a> </li>';
        count++;
    };

    el.content
        .html('')
        .append(content)

    el.bt = el.content.find("a");
    el.bt.eq(0).addClass('active');
    s.lastPos = s.data.videos.length - 1;
    s.pos = s.data.videos.length - 1;

    TweenLite.set(this.el.content, {y: 0});

    el.btListDown.removeClass('null');
    el.btListUp.addClass('null');
};

TrainingScrollBox.prototype.bind = function() {
    // console.log("bind scrollbox")
    var self = this,
        s = this.settings,
        el = this.el;
    var snapList = function(from, to, theEl) {
        var buttons = el.bt;
        var buttonsCount = el.bt.length;
        var isPageDown = from > to;
        // get index of the first visible element from the top
        var topIndexElement;

        el.bt.each(function(idx, el) {
            var liParent = $(el).parent();
            var height = liParent.height();
            var top = liParent.offset().top;
            if (topIndexElement == undefined && top + height > 0) {
                topIndexElement = idx;
                //console.log('btn:', liParent.offset(), idx);
            }
        });

        var delay = isPageDown == true ? 0 : 0.4;
        for (var i = 0; i < buttonsCount; i++) {
            var liElement = buttons.eq(i).parent();
            if (isPageDown) {
                if (i >= topIndexElement) {
                    TweenLite.to(liElement, 0.4, {
                        y: '-=260',
                        ease: Cubic.easeInOut,
                        delay: delay
                    });
                    delay += 0.065;
                } else {
                    TweenLite.set(liElement, {y: '-=260'});
                }
            } else {
                if (i >= topIndexElement - 1) {
                    TweenLite.to(liElement, 0.4, {
                        y: '+=260', 
                        ease: Cubic.easeInOut,
                        delay: delay
                    });
                    delay -= 0.065;
                    delay = delay < 0 ? 0 : delay;
                } else {
                    TweenLite.set(liElement, {y: '+=260'});    
                }
            }

        }
        //console.log('toppestElement:', topIndexElement);        
        
        // update arrows css
        if( s.lastPos == 0){
            el.btListDown.addClass('null');
        }else{
            el.btListDown.removeClass('null');
        }
        if( ( (el.bt.length - s.lastPos) - 1) <= 0){
            el.btListUp.addClass('null');
        }else{
            el.btListUp.removeClass('null');
        }
    };
    // el.content.mouseleave(function(event) {
        //snapList();
    // });

    // Al clic de cada elemento
    el.bt
        .on('click', function(event) {
            event.preventDefault();

            if ($Entrenamiento.hasClass("moving")) {
                return false;
            };
            var from = s.lastPos,
                theEl = $(this),
                to = theEl.data("index");

            // console.log("click bt list", s.pos, from, to)
            if (s.lastPos === to) {
                return false;
            };
            el.container.removeClass('active-ro');
            el.bt.removeClass('active');
            theEl.addClass('active');
            el.bg.css({
                display: "none"
            });

            trainingVideo.goTo({
                from: from,
                to: to
            })

            s.lastPos = to;

            snapList(from, to, theEl);
        });

    // Rollover para mostrar lista
    el.roShow
        .mouseenter(function(event) {

            el.container.addClass('active-ro');
            self.show({
                showBg: true
            });
        });

    // Rollover para ocultar lista
    el.container
        .mouseleave(function(event) {

            if (el.container.hasClass('active-ro')) {
                self.hide({
                    showRO: true
                });
            };
        });

    el.btListDown
        .hover(function() {
            if($(this).hasClass('null')){return;}
            TweenLite.to($(this).find("span"), 0.15, {
                top: 0
            })
        }, function() {
            TweenLite.to($(this).find("span"), 0.15, {
                top: -10
            })
        })
        .on("click", function(e){
            e.preventDefault();
            if($(this).hasClass('null')){return;}

            el.bt.eq((el.bt.length - s.lastPos)).click();
        });

    el.btListUp
        .hover(function() {
            if($(this).hasClass('null')){return;}
            TweenLite.to($(this).find("span"), 0.15, {
                top: 0
            })
        }, function() {
            TweenLite.to($(this).find("span"), 0.15, {
                top: 10
            })
        })
        .on("click", function(e){
            e.preventDefault();
            if($(this).hasClass('null')){return;}

            el.bt.eq(((el.bt.length - s.lastPos) - 1)-1 ).click();

            
        });
};

TrainingScrollBox.prototype.goTo = function(params) {
    // console.log(params.pos);
    this.el.content.find("li").eq(params.pos - 1).find("a").click();
    this.el.container.css('right', '0px');

    var pos = (this.el.bt.length - this.settings.lastPos),
        top = ((260 * pos) * -1) + 260;
};

TrainingScrollBox.prototype.show = function(params) {
    params = params || {};

    var self = this,
        el = this.el,
        s = self.settings;

    if (params.showBg) {
        //aparece bg del contenedor
        el.bg.css({
            display: "block"
        });
    } else {
        el.container.removeClass('active-ro');
    };
    this.animations({
        action: "show"
    });
};

TrainingScrollBox.prototype.hide = function(params) {
    params = params || {};

    var self = this,
        el = this.el,
        s = self.settings,
        tl = self.tl;
    // console.log("TrainingScrollBox hide", "showRO:", params.showRO)
    this.animations({
        action: "hide",
        showRO: params.showRO, //muestra area de RO
    });
};

TrainingScrollBox.prototype.animations = function(params) {

    var self = this,
        el = this.el,
        s = self.settings,
        tl = self.tl;

    switch (params.action) {

        case "show":
            TweenLite.to("#entrenamiento-list-hover", 0.25, {
                right: "-140px",
                ease: Cubic.easeOut,
            });
            tl.to(el.container, 0.25, {
                right: 0,
                ease: Cubic.easeOut,
                onComplete: function() {
                    self.tl.clear();
                }
            });

            break;
        case "hide":


            tl.to(el.container, .25, {
                right: -375,
                ease: Cubic.easeOut,
                onComplete: function() {

                    self.tl.clear();
                },
            });
            if (params.showRO) {

                TweenLite.to("#entrenamiento-list-hover", 0.25, {
                    right: "12px",

                });
                el.container.addClass('active-ro');
            };
            tl.set(el.bg, {
                css: {
                    display: "none"
                },

            });

            break;
    };
};


Info = function( params ) {
    // console.log('------------');
    // console.log('Info()');
    // console.log(params);
    this.data = params || {};
    this.level = params.level || 0;
    this.weeks = params.weeks || 0;
    this.levelPercent = params.levelPercent || 0;
    this.weeksPercent = params.weeksPercent || 0;
};

Info.prototype.init = function() {
    this.render();
};

Info.prototype.render = function() {

    $('#bg-info').css({'background-image': 'url(' + this.data.bgURL + ')'});
    $('#info-h1 .first').html(this.data.title[0]);
    $('#info-h1 .second').html(this.data.title[1]);
    
    $('#info-h3').html(this.data.subtitle);
    $('#info-p').html(this.data.description);
    if(this.data.description.length <= 85 ){
        $("#header-info").css({height: "528px"})
    }
    else if(this.data.description.length > 140 ){
        $("#header-info").css({height: "578px"})
    }

    $('#info-data-gender').html(this.data.genderIcon);
    $('#circle-nivel .circle-text').html(this.data.level);
    $('#circle-dias .circle-text').html(this.data.weeks);

    _generateCircle('circle-nivel', this.levelPercent, this.level, '', 'dashboard-info')
    _generateCircle('circle-dias', this.weeksPercent, this.weeks, '', 'dashboard-info')
};


Dashboard = {

    init: function(params) { 

        var self = this;
        var images = [];
        this.data = {};
        this.plan = {};
        this.banners= [];
        this.bannersRotation= null;
        self.cachedElements();

        $.ajax({url: params.getSessionInfo, dataType: 'json'})
            .done(function(data1){
                self.plan = data1;

                $.ajax({
                    url: params.getPlanInfo, 
                    dataType: 'json',
                    type: 'POST',
                    data: {planId: data1.dashboardCurrentPlan}
                })
                .done(function(data2){
                    // console.log(data2);
                    self.banners = data2.banners;
                    self.changeBanner();
                    
                    data2.home.actualDay = params.initDay;
                    self.data = data2;

                    navigation = new Navigation();
                    calendar = new Calendar();
                    info = new Info(data2.home);
                    anatomy = new Anatomy(data2.muscleGroups);
                    trainingVideo = new TrainingVideo();
                    trainingVideoScrollBox = new TrainingScrollBox();
                    meals = new Meals();

                    intro = new Intro();
                    info.init();
                    intro.onComplete = function() {

                        var actualDay = 0;//data2.home.actualDay - 1;

                        calendar.init(data2);

                        anatomy.init(data2.days[actualDay].header);

                        trainingVideo.init(data2.days[actualDay].training);
                        trainingVideoScrollBox.init(data2.days[actualDay].training);

                        meals.init(data2.days[actualDay].meals);

                        navigation.init();
                        setTimeout(function() {

                            $Dashboard.removeClass("animating");

                            if(params.initDay > 1){
                                // console.log(data1);
                                self.changeDay(params.initDay-1);
                            };
                            console.log(params)
                            self.checkCurrentStatus(params.currentStatus);
                        }, 2000);
                    };

                    // imagen sección info
                    images.push(data2.home.bgURL);
                    // imagenes seccion grupo de musculos
                    $.each(data2.muscleGroups, function(index, val) {
                        // console.log('muscle', val);
                        images.push(val.srcImg);
                    });
                    // imagenes seccion dieta y fondo de protip en entrenamiento para cada dia
                    $.each(data2.days, function(index1, val1) {
                        if(val1.header.isRestDay === false){

                            images.push(val1.meals.diet.srcImg);
                            images.push(val1.training.protip.srcImg);
                            // imagen fondo de videos de entrenamiento para cada dia
                            $.each(val1.training.videos, function(index2, val2) {
                                images.push(val2.srcImg);
                            });
                        }
                    });
                    // console.log(images);

                    // console.log(images);
                    _onLoadImages(images, function() {
                        $Dashboard.removeLoader({
                            loader: $("#loader-main"),
                            onComplete: function() {
                                // console.log('done Loader');
                                intro.init();
                            }
                        });
                    });
                });
            });
        this.dialogFinish.render(params.disciplineId);
    },
    loadDay: function(day) {

        $Entrenamiento.removeClass("introReady");

        // console.log('----------');
        // console.log(day);
        anatomy.init(this.data.days[day].header);

        if(this.data.days[day].header.isRestDay === false){
            trainingVideo.init(this.data.days[day].training);
            trainingVideoScrollBox.init(this.data.days[day].training);
            meals.init(this.data.days[day].meals);
        }

        navigation.bind("day");
        setTimeout(function() {
            $Dashboard.removeClass("animating");
        }, 3000)
    },
    dialogFinish: {
        render: function(idDiscipline){
            var self = this;
            // console.log(idDiscipline)
            $('#plan-finish-overlay, #bt-plan-fihish-close')
                .on('click', function(event) {
                    event.preventDefault();
                    self.close();
                });
            $('#bt-plan-fihish-train')
                .on('click', function(event) {
                    event.preventDefault();
                    window.location.href = '/' + idDiscipline + '/entrenar';
                });
        },
        open: function(){
            $('#plan-finish-overlay').css({'display':'block'});
            $('#plan-finish').css({'display':'block'});
            TweenLite.fromTo('#plan-finish-overlay, #plan-finish', 0.15, {autoAlpha: 0}, {autoAlpha: 0.9});
        },
        close: function(){
            
            TweenLite.to('#plan-finish-overlay, #plan-finish', 0.15, {autoAlpha: 0, onComplete: function(){
                $('#plan-finish-overlay').css({'display':'none'});
                $('#plan-finish').css({'display':'none'});
            }});

        },
    },
    changeBanner: function() {
        
        selected= Math.floor(Math.random() * this.banners.length);        
        banners = this.banners;                
        $(".slmfbanner_container").html("<a href='"+banners[selected].link+"' target='_blank' rel='noopener noreferrer'><img src='"+banners[selected].srcImg+"'></a>");        
    },
    
    changeDay: function (day, currentStatus) {
        var self = this;
        calendar.el.btDay.eq(day).click();
        
        setTimeout(function() {
            self.checkCurrentStatus(currentStatus);
        }, 250);
    },
    checkCurrentStatus: function (status) {

        // console.log('----------------------------------');
        // console.log('checkCurrentStatus()');
        // console.log(status);
        switch (status){
            case 'inactive': {
                break;
            }
            case 'active': {
                break;
            }
            case 'finished': {
                this.dialogFinish.open();
                break;
            }
            default: {
                break;
            }
        }
    },
    cachedElements: function() {
        $Dashboard = $("#dashboard");
        $Info = $Dashboard.find("#dashboard-info");
        $Anatomia = $Dashboard.find("#dashboard-anatomia");
        $Entrenamiento = $Dashboard.find("#dashboard-entrenamiento");
        $Comidas = $Dashboard.find("#dashboard-comidas");
        $Calendar = $Dashboard.find("#dashboard-calendar");
        $Window = $(window);
    },
};
