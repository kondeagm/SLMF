List = function() {

	this.settings = {

		a: $SlmfTeam.find("ul.team a"),
		li: $SlmfTeam.find("ul.team li"),
		header: $SlmfTeam.find("header"),
		container: $SlmfTeam.find("#slmf-team-home-container"),
		slider: {
			item: $("#slmf_team_slider_container"),
			busy: false,
			current: 0,
			tlHome: null,
			tlKai: null,
			tlCharro: null,
			tlGraham: null,
			tlTank: null,
			menu:{
				tlMenuTeam:null,
				tlMenuKai:null,
				tlMenuCharro:null,
				tlMenuGraham:null,
				tlMenuTank:null,
			}
		},
	};

	var totalOffset = 0;
	this.lastActive = null;
};

List.prototype.init = function() {

	this.initTimeline();
	this.bind();
	
	
};
List.prototype.initAnimation=function()
{
	this.settings.slider.tlHome.play(0);
	this.settings.slider.menu.tlMenuTeam.play(0);
};
List.prototype.bind = function() {

	var self = this;
	$("body").on("keydown",function(event){self.keydown(event,self);});
	// Hover
	$(".bullets a").on("mouseenter",function(event){self.playTimelimeMenu(event);});
	$(".bullets a").on("mouseleave",function(event){self.reverseTimelimeMenu(event);});
	$(".bullets a").on("click",function(event){self.menuClick(event,self);});

	

	this.settings.a
		.each(function() {

			var el = $(this),
				hover = $(this).parent().find("img.hover"),
				back = $(this).parent().find("img.back"),
				tooltip = $(this).parent().find(".tooltip"),
				icon = $(this).parent().find(".logo"),
				header = $(this).parent().find("header");

			el
				.mousemove(function(e) {

					if(el.hasClass('hover')){return;}
					el.addClass('hover');
					self.animations({
						el: el,
						back: back,
						hover: hover,
						tooltip: tooltip,
						icon: icon,
						header: header,
						action: "mouseenter"
					});
				})
				.mouseleave(function(e) {
					el.removeClass('hover');
				});;

		});
	this.settings.header
		.mouseenter(function(e) {

			self.animations({
				action: "mouseleave"
			});
		});
	this.settings.container
		.mouseleave(function(e) {

			self.animations({
				action: "mouseleave"
			});
		})
	$("#header-main")
		.mouseenter(function(e) {

			self.animations({
				action: "mouseleave"
			});
		});

		
};
List.prototype.initTimeline = function()
{
	slider= this.settings.slider;
	// HOME
	this.makeHomeTimeline(slider);
	this.makeKaiTimeline(slider);
	
	slider.tlCharro = this.makeStdTimeline($("#team_slider_charro",slider.item),false);
	slider.tlGraham = this.makeStdTimeline($("#team_slider_graham",slider.item),true);
	slider.tlTank   = this.makeStdTimeline($("#team_slider_tank",slider.item),false);

	slider.menu.tlMenuTeam = this.makeStdMenuTimeline($("#bullet_home"));
	slider.menu.tlMenuKai = this.makeStdMenuTimeline($("#bullet_kai"));
	slider.menu.tlMenuCharro = this.makeStdMenuTimeline($("#bullet_charro"));
	slider.menu.tlMenuGraham = this.makeStdMenuTimeline($("#bullet_graham"));
	slider.menu.tlMenuTank = this.makeStdMenuTimeline($("#bullet_tank"));
};

List.prototype.makeHomeTimeline= function(slider)
{
	homeBg = $("#team_slider_home .bg_lights",slider.item);
	homeFigure1 = $("#team_slider_home .bg_figure1",slider.item);
	homeFigure2 = $("#team_slider_home .bg_figure2",slider.item);
	homeFigure3 = $("#team_slider_home .bg_figure3",slider.item);
	homeLogo    = $("#team_slider_home header",slider.item);
	homeH3    = $("#team_slider_home h3",slider.item);
	homeText    = $("#team_slider_home p",slider.item);
	
	slider.tlHome = new TimelineLite({});
	slider.tlHome.fromTo(homeFigure1, 0.45,{ autoAlpha: 0},
		{
			autoAlpha: 1,
			ease: Linear.easeNone,
		});
	slider.tlHome.fromTo(homeBg, 0.45,{ autoAlpha: 0},
		{
			autoAlpha: 1,
			ease: Linear.easeNone,
		},'=-0.2');
	slider.tlHome.fromTo(homeFigure2, 0.45,{ autoAlpha: 0,x: 10},
		{
			autoAlpha: 1,
			x: 0,
			ease: Cubic.easeOut,
		},'=-0.3');
	slider.tlHome.fromTo(homeFigure3, 0.45,{ autoAlpha: 0,x: -10},
		{
			autoAlpha: 1,
			x: 0,
			ease: Cubic.easeOut,
		},'=-0.30');
	/*
	slider.tlHome.fromTo(homeLogo, 0.45,{ autoAlpha: 0,x: -100},
		{
			autoAlpha: 1,
			x: 0,
			ease: Cubic.easeInOut,
		},'=-0.45');

	*/

	slider.tlHome.fromTo(homeLogo.find(".svg-slmf"), 0.45, { autoAlpha: 0,x: -50},
	{
		autoAlpha: 1,
		x: 0,
		ease: Cubic.easeInOut,
	},'=-0.25');
	

	slider.tlHome.fromTo(homeLogo.find(".svg-team"), 0.35, { autoAlpha: 0,x: -50},
	{
		autoAlpha: 1,
		x: 0,
		ease: Cubic.easeInOut,
	},'=-0.25');
	




	slider.tlHome.fromTo(homeH3, 0.45,{ autoAlpha: 0,y: 45},
		{
			autoAlpha: 1,
			y: 0,
			ease: Cubic.easeOut,
		});

	slider.tlHome.fromTo(homeText, 0.45,{ autoAlpha: 0},
		{
			autoAlpha: 1,
			ease: Linear.easeNone,
		}, "-=0.15");
	slider.tlHome.pause(0);
};
List.prototype.makeKaiTimeline= function(slider)
{
	// Kai
	kaiBg = $("#team_slider_kai .bg_lights",slider.item);
	kaiFigure = $("#team_slider_kai .bg_figure",slider.item);

	kaiTitle1    = $("#team_slider_kai .bg_text",slider.item);
	kaiTitle2    = $("#team_slider_kai_txt_2",slider.item);
	kaiH3    = $("#team_slider_kai h3",slider.item);
	kaiText    = $("#team_slider_kai p",slider.item);
	kaiBtn    = $(".home_content_btn ",slider.item);
	
	slider.tlKai = new TimelineLite({});
	slider.tlKai.fromTo(kaiFigure, 0.45,{ autoAlpha: 0},
		{
			autoAlpha: 1,
			ease: Linear.easeNone,
		});
	slider.tlKai.fromTo(kaiBg, 0.45,{ autoAlpha: 0},
		{
			autoAlpha: 1,
			ease: Linear.easeNone,
		},'=-0.2');
	slider.tlKai.fromTo(kaiTitle1, 0.45,{ autoAlpha: 0,x: -45},
		{
			autoAlpha: 1,
			x: 0,
			ease: Cubic.easeOut,
		},'=-0.3');
	slider.tlKai.fromTo(kaiTitle2, 0.45,{ autoAlpha: 0,x: -45},
		{
			autoAlpha: 1,
			x: 0,
			ease: Cubic.easeOut,
		},'=-0.3');

	slider.tlKai.fromTo(kaiH3, 0.45,{ autoAlpha: 0,y: 45},
		{
			autoAlpha: 1,
			y: 0,
			ease: Cubic.easeOut,
		},'=-0.15');

	slider.tlKai.fromTo(kaiText, 0.45,{ autoAlpha: 0},
		{
			autoAlpha: 1,
			ease: Linear.easeNone,
		}, "-=0.15");

	slider.tlKai.fromTo(kaiBtn, 0.3, {
				scale: 1.6,
				autoAlpha: 0
			}, {
				
				scale: 1.0,
				autoAlpha: 1,
				ease: Power2.easeIn,
			},'=-0.15');
	slider.tlKai.timeScale(1.3);
	slider.tlKai.pause(0);
};
List.prototype.makeStdTimeline=function (slider_item,isLeft)
{
	timeline = new TimelineLite({});

	slideItem_Bg = $(".bg_lights",slider_item);
	slideItem_Figure = $(".bg_figure",slider_item);

	slideItem_Title1    = $(".bg_text",slider_item);
	
	slideItem_H3        = $("h3",slider_item);
	slideItem_Text      = $("p",slider_item);
	slideItem_Card      = $(".team_ficha_container",slider_item);
	slideItem_CardItem1 = $(".team_ficha_item_container",slider_item).eq(0);
	slideItem_CardItem2 = $(".team_ficha_item_container",slider_item).eq(1);
	slideItem_CardItem3 = $(".team_ficha_item_container",slider_item).eq(2);
	slideItem_Chest     = $(".team_data_chest",slider_item);
	slideItem_Back      = $(".team_data_back",slider_item);
	slideItem_Arm       = $(".team_data_arm",slider_item);
	slideItem_Leg       = $(".team_data_leg",slider_item);

	timeline.set(slideItem_Title1,{opacity:0,visibily: 'hidden'});
	timeline.fromTo(slideItem_Figure, 0.45,{ autoAlpha: 0},
		{ autoAlpha: 1,ease: Linear.easeNone,});
	timeline.fromTo(slideItem_Bg, 0.45,{ autoAlpha: 0},
		{ autoAlpha: 1,ease: Linear.easeNone,},'=-0.2');
	
	textLeft = 45;
	if(isLeft) textLeft = -45;

	timeline.fromTo(slideItem_Title1, 0.45,{ autoAlpha: 0,x: textLeft},
		{ autoAlpha: 1,x: 0,ease: Cubic.easeOut,},'=-0.3');
	
	timeline.fromTo(slideItem_H3, 0.45,{ autoAlpha: 0,y: 45},
		{ autoAlpha: 1,y: 0,
			ease: Cubic.easeOut,
		},'=-0.15');
		timeline.fromTo(slideItem_Text, 0.30,{ autoAlpha: 0},
		{
			autoAlpha: 1,
			ease: Linear.easeNone,
		}, "-=0.15");

	timeline.fromTo(slideItem_Card, 0.30,{ autoAlpha: 0,height: 0},
		{
			autoAlpha: 1,
			height: 97,
			ease: Linear.easeNone,
		}, "-=0.15");

	timeline.fromTo(slideItem_CardItem1, 0.20,{ autoAlpha: 0,scale: 1.4},
		{
			autoAlpha: 1,
			scale: 1,
			ease: Power2.easeIn,
		}, "-=0.15");
	timeline.fromTo(slideItem_CardItem2, 0.20,{ autoAlpha: 0,scale: 1.4},
		{
			autoAlpha: 1,
			scale: 1,
			ease: Power2.easeIn,
		}, "-=0.15");
	timeline.fromTo(slideItem_CardItem3, 0.20,{ autoAlpha: 0,scale: 1.4},
		{
			autoAlpha: 1,
			scale: 1,
			ease: Power2.easeIn,
		}, "-=0.15");

	timeline.fromTo(slideItem_Chest, 0.20,{ autoAlpha: 0,y: 20},
		{
			autoAlpha: 1,
			y: 0,
			ease: Cubic.easeOut,
		});

	timeline.fromTo(slideItem_Back, 0.20,{ autoAlpha: 0,y: 20},
		{
			autoAlpha: 1,
			y: 0,
			ease: Cubic.easeOut,
		},'=-0.15');

	timeline.fromTo(slideItem_Arm, 0.20,{ autoAlpha: 0,y: 20},
		{
			autoAlpha: 1,
			y: 0,
			ease: Cubic.easeOut,
		},'=-0.15');

	timeline.fromTo(slideItem_Leg, 0.20,{ autoAlpha: 0,y: 20},
		{
			autoAlpha: 1,
			y: 0,
			ease: Cubic.easeOut,
		},'=-0.15');
	
	timeline.pause(0);
	timeline.timeScale(1.3);
	return timeline;
};
List.prototype.makeStdMenuTimeline=function (menu_item)
{
	timeline = new TimelineLite({});

	menu_item_p = $(".p_container p",menu_item);
	menu_item_under = $(".under",menu_item);
	//timeline.set(menu_item_under,{opacity:0,visibily: 'hidden'});
	timeline.fromTo(menu_item_p, 0.25,{ autoAlpha: 0,y: 25},
		{ autoAlpha: 1,y: 0,ease: Cubic.easeOut,});

	timeline.fromTo(menu_item_under, 0.25,{ width: 15,backgroundColor: "#ffffff"},
		{ width: 50,backgroundColor: "#e7d133",ease: Cubic.easeOut,},'=-0.25');

	timeline.pause();
	return timeline;
};
List.prototype.keydown = function(event,env)
{
	switch(event.which)
	{
		case 38:env.prev();
		break;
		case 40:env.next();
		break;
		/* shortcuts */
		case 49:this.settings.slider.current= 0;
			this.gotoSlide(false);
		break;
		case 50:this.settings.slider.current= 1;
			this.gotoSlide(false);
		break;
		case 51:this.settings.slider.current= 2;
			this.gotoSlide(false);
		break;
		case 52:this.settings.slider.current= 3;
			this.gotoSlide(false);
		break;
		case 53:this.settings.slider.current= 4;
			this.gotoSlide(false);
		break;
	}
};
List.prototype.next= function()
{
	if(this.settings.slider.busy){return false;}

	if(this.settings.slider.current==4){return false;}

	this.settings.slider.busy= true;
	this.settings.slider.current++;
	this.gotoSlide(false);
};
List.prototype.prev= function()
{
	
	if(this.settings.slider.busy){return false;}
	if(this.settings.slider.current===0){return false;}

	this.settings.slider.busy= true;
	this.settings.slider.current--;
	this.gotoSlide(false);
};
List.prototype.gotoSlide= function(isFromBtn)
{
	console.log("gotoSlide");
	console.log(this.settings.slider.current);
	slider= this.settings.slider;

	btn= $(".bullet_item.active");
	btn.removeClass("active");
	var menu = this.settings.slider.menu;
	
	switch(btn.attr("id"))
	{
		case 'bullet_home':menu.tlMenuTeam.reverse(1);
		break;
		case 'bullet_kai':menu.tlMenuKai.reverse(1);
		break;
		case 'bullet_charro':menu.tlMenuCharro.reverse(1);
		break;
		case 'bullet_graham':menu.tlMenuGraham.reverse(1);
		break;
		case 'bullet_tank':menu.tlMenuTank.reverse(1);
		break;
	}

	switch(this.settings.slider.current)
	{
		case 0:this.SlidermoveTo("0",slider.tlHome,slider.menu.tlMenuTeam,isFromBtn);//home
			$("#bullet_home").addClass("active");
		break;
		case 1:this.SlidermoveTo("-100%",slider.tlKai,slider.menu.tlMenuKai,isFromBtn);//kai 
			$("#bullet_kai").addClass("active");
		break;
		case 2:this.SlidermoveTo("-240%",slider.tlCharro,slider.menu.tlMenuCharro,isFromBtn);//charro
			$("#bullet_charro").addClass("active");
		break;
		case 3:this.SlidermoveTo("-380%",slider.tlGraham,slider.menu.tlMenuGraham,isFromBtn);//graham
			$("#bullet_graham").addClass("active");
		break;
		case 4:this.SlidermoveTo("-520%",slider.tlTank,slider.menu.tlMenuTank,isFromBtn);//tank
			$("#bullet_tank").addClass("active");
		break;
	}
};
List.prototype.SlidermoveTo = function(to_,timeline,menuTimeline,isFromBtn)
{
	self = this;
	timeline.pause(0);
	TweenMax.to(this.settings.slider.item, 0.7, {
		top: to_,
		ease: Cubic.easeOut,
		onComplete:function()
		{
			self.settings.slider.busy = false;
			//timeline.play(0);
			if(!isFromBtn)
				menuTimeline.play(0);
		}
	});
	setTimeout(function(){timeline.play(0);},0.3);
};
List.prototype.playTimelimeMenu= function(event)
{
	btn = $(event.currentTarget);
	btn.addClass("hover");
	if($(btn).hasClass("active")) return false;
	btn.addClass("hover");
	var menu = this.settings.slider.menu;
	
	switch(btn.attr("id"))
	{
		case 'bullet_home':menu.tlMenuTeam.play(0);
		break;
		case 'bullet_kai':menu.tlMenuKai.play(0);
		break;
		case 'bullet_charro':menu.tlMenuCharro.play(0);
		break;
		case 'bullet_graham':menu.tlMenuGraham.play(0);
		break;
		case 'bullet_tank':menu.tlMenuTank.play(0);
		break;
	}
};
List.prototype.reverseTimelimeMenu= function(event)
{
	btn = $(event.currentTarget);

	if($(btn).hasClass("active")) return false;
	btn.removeClass("hover");
	var menu = this.settings.slider.menu;
	
	switch(btn.attr("id"))
	{
		case 'bullet_home':menu.tlMenuTeam.reverse(1);
		break;
		case 'bullet_kai':menu.tlMenuKai.reverse(1);
		break;
		case 'bullet_charro':menu.tlMenuCharro.reverse(1);
		break;
		case 'bullet_graham':menu.tlMenuGraham.reverse(1);
		break;
		case 'bullet_tank':menu.tlMenuTank.reverse(1);
		break;
	}
};
List.prototype.menuClick= function(event)
{
	if(this.settings.slider.busy)return false;
	
	this.settings.slider.busy = true;
	
	btn = $(event.currentTarget);

	if($(btn).hasClass("active")) return false;
	var menu = this.settings.slider.menu;
	
	switch(btn.attr("id"))
	{
		case 'bullet_home':this.settings.slider.current=0;
		break;
		case 'bullet_kai':this.settings.slider.current=1;
		break;
		case 'bullet_charro':this.settings.slider.current=2;
		break;
		case 'bullet_graham':this.settings.slider.current=3;
		break;
		case 'bullet_tank':this.settings.slider.current=4;
		break;
	}
	this.gotoSlide(btn.hasClass("hover"));
};
List.prototype.animations = function(params) {
	var self = this;


	function hideTooltips(el) {
		if (el) {
			el = el.parent();

			TweenMax.to([$(el).find('.tooltip'), $(el).find('img.back')], 0.25, {
				autoAlpha: 0,
				ease: Linear.easeNone
			});
			self.lastActive = false;
		}
	}
	// console.log(params.action)
	switch (params.action) {
		case "mouseleave":

			hideTooltips(self.lastActive);
			break;
		case "mouseenter":
			var position = $(params.el).attr("data-position");
			hideTooltips(self.lastActive);

			self.lastActive = params.el;

			params.hover.css("z-index", 0);
			params.back.css("z-index", 1);
			TweenMax.to(params.back, 0.25, {
				autoAlpha: 1,
				ease: Linear.easeNone
			});

			$(this.settings.li).each(function(index, el) {
				var distance = $(el).find("a").attr("data-distance");
				TweenMax.to(el, .5, {
					left: position * 18 * distance,
					ease: Quad.easeOut,
					onComplete: function() {
						// Aparece icono de tooltip
						if (self.lastActive && self.lastActive.parent() != $(el)) {

							TweenMax.set(params.icon, {
								autoAlpha: 0
							});
							TweenMax.fromTo(params.icon, .35, {
								autoAlpha: 1,
								x: "300%",
								y: "-300%",
							}, {
								x: "0%",
								y: "0%",
								delay: .1,
								ease: Cubic.easeOut,
							});

							// Aparece nombre de atleta de tooltip
							TweenMax.set(params.header, {
								autoAlpha: 0
							});
							TweenMax.fromTo(params.header, .35, {
								autoAlpha: 1,
								x: "100%",
								y: "-100%",
							}, {
								x: "0%",
								y: "0%",
								ease: Cubic.easeOut,
							});

							// Aparece contenedor de tooltip
							TweenMax.set(params.tooltip, {
								autoAlpha: 1,
								x: "100%",
								y: "-100%",
								ease: Cubic.easeOut,
							});
							TweenMax.to(params.tooltip, .35, {
								x: "0%",
								y: "0%",
								ease: Cubic.easeOut,
							});
						}

					}
				});



			});
			break;
	};
};

SlmfTeam = {

	init: function(images) {

		this.cachedElements();

		list = new List();
		list.init();	

		_onLoadImages(images, function() {

			$SlmfTeam.removeLoader({
				onComplete: function() {
					list.initAnimation();
					

				}
			});
		});
	},
	cachedElements: function() {

		$SlmfTeam = $("#slmf-team-home");
	},
};